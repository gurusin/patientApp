{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/dental/model/PatTreatment.ts","webpack:///src/app/dental/model/TreatmentItem.ts","webpack:///src/app/dental/treatment-history/treatment-history.component.ts","webpack:///src/app/dental/treatment-history/treatment-history.component.html","webpack:///src/app/dental/treatment-item/treatment-item.component.ts","webpack:///src/app/dental/treatment-item/treatment-item.component.html","webpack:///src/app/drugcomponent/admin/drug-package-detail/drug-package-detail.component.ts","webpack:///src/app/drugcomponent/admin/drug-package-detail/drug-package-detail.component.html","webpack:///src/app/drugcomponent/admin/stock-adjustment/stock-adjustment.component.ts","webpack:///src/app/drugcomponent/admin/stock-adjustment/stock-adjustment.component.html","webpack:///src/app/drugcomponent/admin/strengh/strength.component.ts","webpack:///src/app/drugcomponent/admin/strengh/strength.component.html","webpack:///src/app/drugcomponent/basedrug.ts","webpack:///src/app/drugcomponent/dosefrequency.ts","webpack:///src/app/drugcomponent/drug-admin/base-drug-edit/base-drug-edit.component.ts","webpack:///src/app/drugcomponent/drug-admin/base-drug-edit/base-drug-edit.component.html","webpack:///src/app/drugcomponent/drug-admin/basedrugadmin.component.ts","webpack:///src/app/drugcomponent/drug-admin/basedrugadmin.component.html","webpack:///src/app/drugcomponent/drug-admin/drug-admin.component.ts","webpack:///src/app/drugcomponent/drug-admin/drug-admin.component.html","webpack:///src/app/drugcomponent/drug-admin/drug-edit/drug-edit.component.ts","webpack:///src/app/drugcomponent/drug-admin/drug-edit/drug-edit.component.html","webpack:///src/app/drugcomponent/drug-admin/drugpackageadmin.component.ts","webpack:///src/app/drugcomponent/drug-admin/drugpackageadmin.component.html","webpack:///src/app/drugcomponent/drug-package.ts","webpack:///src/app/drugcomponent/drug.ts","webpack:///src/app/drugcomponent/drugcomponent.component.ts","webpack:///src/app/drugcomponent/drugcomponent.component.html","webpack:///src/app/drugcomponent/drugdosage.component.ts","webpack:///src/app/drugcomponent/drugdosage.component.html","webpack:///src/app/drugcomponent/drugdosagelist.component.ts","webpack:///src/app/drugcomponent/drugdosagelist.component.html","webpack:///src/app/drugcomponent/drugsearch.component.ts","webpack:///src/app/drugcomponent/drugsearch.component.html","webpack:///src/app/drugcomponent/strength.ts","webpack:///src/app/filter/drug-package.pipe.ts","webpack:///src/app/filter/drug-pipe.pipe.ts","webpack:///src/app/filter/filter-pipe.pipe.ts","webpack:///src/app/filter/patient-admin-filter.pipe.ts","webpack:///src/app/filter/patient.pipe.ts","webpack:///src/app/grn/grn.component.ts","webpack:///src/app/grn/grn.component.html","webpack:///src/app/grn/payment.component.ts","webpack:///src/app/grn/payment.component.html","webpack:///src/app/history/prescription/prescription.component.ts","webpack:///src/app/history/prescription/prescription.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/issue/bill-reprint.component.ts","webpack:///src/app/issue/bill-reprint.component.html","webpack:///src/app/issue/issue-finder.component.ts","webpack:///src/app/issue/issue-finder.component.html","webpack:///src/app/issue/issue-history.component.ts","webpack:///src/app/issue/issue-history.component.html","webpack:///src/app/issue/issue.component.ts","webpack:///src/app/issue/issue.component.html","webpack:///src/app/item/in-out.component.ts","webpack:///src/app/item/in-out.component.html","webpack:///src/app/item/item.component.ts","webpack:///src/app/item/item.component.html","webpack:///src/app/item/itemproduct.ts","webpack:///src/app/item/itemtype.component.ts","webpack:///src/app/item/itemtype.component.html","webpack:///src/app/item/itemtype.ts","webpack:///src/app/item/medical-service-component/medical-service-component.component.ts","webpack:///src/app/item/medical-service-component/medical-service-component.component.html","webpack:///src/app/item/product-type.ts","webpack:///src/app/item/unit-of-measure.ts","webpack:///src/app/login-component/login-component.component.ts","webpack:///src/app/login-component/login-component.component.html","webpack:///src/app/menubar.component.ts","webpack:///src/app/menubar.component.html","webpack:///src/app/navbar.component.ts","webpack:///src/app/navbar.component.html","webpack:///src/app/patient-component/patient-search.component.ts","webpack:///src/app/patient-component/patient-search.component.html","webpack:///src/app/patient-component/patientadmin.component.ts","webpack:///src/app/patient-component/patientadmin.component.html","webpack:///src/app/patient.ts","webpack:///src/app/patientsave/patientsave.component.ts","webpack:///src/app/patientsave/patientsave.component.html","webpack:///src/app/pharmacy/pharmacy.component.ts","webpack:///src/app/pharmacy/pharmacy.component.html","webpack:///src/app/prescription-component/prescribable-drug.ts","webpack:///src/app/prescription-component/prescription-component.component.ts","webpack:///src/app/prescription-component/prescription-component.component.html","webpack:///src/app/prescription-component/prescription-history.component.ts","webpack:///src/app/prescription-component/prescription-history.component.html","webpack:///src/app/prescription-component/prescriptiondetail.component.ts","webpack:///src/app/prescription-component/prescriptiondetail.component.html","webpack:///src/app/prescription-component/printreceipt.component.ts","webpack:///src/app/prescription-component/printreceipt.component.html","webpack:///src/app/purchaseorder/polist.component.ts","webpack:///src/app/purchaseorder/polist.component.html","webpack:///src/app/purchseorder/purchseorder.component.ts","webpack:///src/app/purchseorder/purchseorder.component.html","webpack:///src/app/purchseorder/returnout.component.ts","webpack:///src/app/purchseorder/returnout.component.html","webpack:///src/app/report/daily-income.component.ts","webpack:///src/app/report/daily-income.component.html","webpack:///src/app/report/report.component.ts","webpack:///src/app/report/report.component.html","webpack:///src/app/selected-row.directive.ts","webpack:///src/app/service/http-service.service.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/dental-service.service.ts","webpack:///src/app/services/drug-service.service.ts","webpack:///src/app/services/issue-service.service.ts","webpack:///src/app/services/item-service.service.ts","webpack:///src/app/services/itemProduct.service.ts","webpack:///src/app/services/itemsupplier.service.ts","webpack:///src/app/services/login-service.service.ts","webpack:///src/app/services/patient-service.service.ts","webpack:///src/app/services/poservice.service.ts","webpack:///src/app/strength/strength-detail/strength-detail.component.ts","webpack:///src/app/strength/strength-detail/strength-detail.component.html","webpack:///src/app/supplier/ItemSupplier.ts","webpack:///src/app/supplier/supplier.component.ts","webpack:///src/app/supplier/supplier.component.html","webpack:///src/app/treatment/basicvisit.component.ts","webpack:///src/app/treatment/basicvisit.component.html","webpack:///src/app/treatment/patient-visit.component.ts","webpack:///src/app/treatment/patient-visit.component.html","webpack:///src/app/treatment/patientnavbar.component.ts","webpack:///src/app/treatment/patientnavbar.component.html","webpack:///src/app/treatment/patientvisit.ts","webpack:///src/app/treatment/printpop.component.ts","webpack:///src/app/treatment/printpop.component.html","webpack:///src/app/treatment/service-component.component.ts","webpack:///src/app/treatment/service-component.component.html","webpack:///src/app/treatment/treatment.component.ts","webpack:///src/app/treatment/treatment.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","loginService","router","patientService","logged","loggedInUser","loggedIn","patientObject","navigate","selector","templateUrl","styleUrls","AppModule","declarations","imports","entryComponents","providers","bootstrap","APP_ROUTES","path","component","children","routing","forRoot","PatTreatment","treatmentItem","TreatmentItem","TreatmentHistoryComponent","service","patService","trtTypes","currObj","treatments","patTreatments","loadTreatments","getAllPatTreatments","patientId","subscribe","data","getAllTreatmentItems","editComp","nativeElement","style","setProperty","savePatTreatment","cancel","forEach","item","rate","trtItemId","obj","showNew","deletePatTreatment","changeItem","save","TreatmentItemComponent","objectList","currItem","loadData","modal","saveItem","onCancel","onShowModel","deleteTreatmentItem","error","alert","message","onSave","DrugPackageDetailComponent","drugService","dialogRef","drugPackage","drugList","strengthList","Object","assign","close","saveDrugPackage","onSubmit","cancelEdit","StockAdjustmentComponent","drugPackageList","saved","adjustments","initAdjustment","searchCritera","fromDate","Date","toDate","adjustment","dateOfAdjustment","drugPackageId","adjustedQty","remarks","console","log","selectedDrugPackage","adjustStock","searchAdjustment","event","value","keyCode","selectedIndex","length","findDrugPackages","doSearch","searchDrugPackage","saveAdjustment","StrengthComponent","adminService","dialog","units","initObject","loadStregths","getStrengthUnits","saveStrength","strength","strengthUnit","unitId","strengthAmount","row","dialogConfig","unitName","open","afterClosed","result","onEdit","onNew","Basedrug","Dosefrequency","BaseDrugEditComponent","drugServiceService","baseDrug","saveBaseDrug","BasedrugadminComponent","baseDrugList","idx","findIndex","baseDrugId","baseDrugName","push","currIndex","d","loadBaseDrugs","setClickedBaseDrugRow","DrugAdminComponent","selectedDrugRow","drug","loadDrugs","list","onEditDrug","newDrug","DrugEditComponent","saveDrug","DrugpackageadminComponent","loadDrugPacakges","DrugPackage","Drug","brandName","DrugcomponentComponent","DrugdosageComponent","DrugdosagelistComponent","DrugsearchComponent","Strength","DrugPackagePipe","args","filter","indexOf","name","DrugPipePipe","FilterPipePipe","PatientAdminFilterPipe","toUpperCase","PatientPipe","patient","firstname","lastname","GrnComponent","poService","poDetail","supplierInvoice","expectedRecieveDate","details","po","selectedPO","initPo","purchaseOrderNo","saveGRN","loadPO","loadPo","PaymentComponent","grnsToPay","paymentMethods","loadPaymentMethod","loadGRN","index","grnToSave","savePayment","PrescriptionComponent","prescription","prescriptionList","currentIndex","getPrescriptionForPatient","setPrescription","previous","next","HomeComponent","BillReprintComponent","route","issueService","total","selectedIssueNote","params","issueId","findIssue","calculateTotal","issueNoteDetails","buyingQuantity","unitPrice","issueNoteServiceItems","fee","issueNote","printContents","document","getElementById","innerHTML","popupWin","window","write","print","IssueFinderComponent","paidAmount","printDisabled","saveDisabled","imageUrl","prescriptionSearchCriteria","registerIssue","makeIssue","currentIssuedQty","serviceItems","dateOfIssue","calculatedAge","IssueHistoryComponent","issueNotes","issueDate","findIssuesForPatient","IssueComponent","patientVisit","medicalServices","prescriptionId","detail","medicalServItem","itemId","externalRef","updated","saveIssue","cancelIssue","InOutComponent","drugId","reports","searchCriteria","unshift","getInOutReport","ItemComponent","itemProductService","itemproduct","itemproductList","unitOfMeasureList","itemTypeList","setClickedRow","selectedRow","itemTypeObject","selectedItemproduct","loadItemProducts","loadUnitOfMeasure","loadItemTypes","saveItemProduct","itemproductObject","Itemproduct","productType","unitOfMeasure","ItemtypeComponent","itemType","selectedItemType","saveItemType","Itemtype","MedicalServiceComponentComponent","prodTypeService","productTypes","i","saveMedicalService","getProductTypes","getAllMedicalServices","ProductType","UnitOfMeasure","LoginComponentComponent","model","login","userType","MenubarComponent","supplierList","newPatient","NavbarComponent","clearPatient","PatientSearchComponent","patientList","filterPatList","getByPatNo","patNo","loadPlans","prepareForPrescription","target","getByPhoneNo","phone","getByNIC","nic","searchByNIC","searchByPhone","findByName","key","patIndex","newPatientVisit","onKey","onKeyPatNo","onKeyPhoneNumber","onKeyName","PatientadminComponent","searchText","patId","loadPatients","pat","onSearch","Patient","PatientsaveComponent","savePatient","PharmacyComponent","savedPrescription","prescriptionStatus","searchPrescriptions","prepareForEdit","PrescriptionSearchCriteria","getToday","x","getFullYear","getMonth","getDate","createIssueForPrescription","initial","PrescribableDrug","price","neededQty","valid","rowId","getMilliseconds","selectedStrength","availableQty","packages","selectedStrengthIndex","quantity","PrescriptionComponentComponent","prescribableDrug","drugName","searchDrug","comp","frequency","doseFrequency","selectedFrequency","focus","searchId","nextComp","searchPrescribable","selectStrength","checkDoseAmount","calculatePrice","meal","selectedDuration","doseAmount","doseDuration","pres","selectedId","splice","dd","textCmp","getSelectedId","text","retObj","calculateQty","getNoOfDosesForPrescription","freq","noofDoses","checkValid","addDrug","Prescription","prescriptionDetails","PrescriptionDetail","passed","PrescriptionHistoryComponent","loadPrescriptions","PrescriptiondetailComponent","expanded","fullPrescription","getPrescription","doExpand","PrintreceiptComponent","POListComponent","pendingPOList","getPendingPO","object","newPo","PurchseorderComponent","supplierService","suppliers","drugPackages","pendingPos","addItem","savePO","PurchaseOrderDTO","initSuppliers","initItems","initPendingPOs","loadPendingPOs","loadSuppliers","poDetails","orderDate","poStatus","PODetail","ReturnoutComponent","grnsToReturn","loadGRNForRet","saveRet","loadgrnbysi","returnGoods","DailyIncomeComponent","dailyIncome","drugTotal","servicesTotal","servicesIncome","drugIncome","getDailyIncome","doReport","ReportComponent","SelectedRowDirective","c_colorrr","HttpServiceService","http","url","param","localStorage","getItem","post","get","providedIn","AdminService","supplierObject","sendPost","date","sendGet","itemSupplier","DentalServiceService","sendDelete","DrugServiceService","stock","IssueServiceService","ItemServiceService","ItemProductService","medItem","ItemSupplierService","LoginService","setItem","JSON","parse","stringify","_body","headers2","Headers","PatientServiceService","patientSearchURL","patientVisitSaveURL","patientSaveURL","patientGetByNIC","phoneNo","diagnoseData","diagnosis","note","notes","symptoms","externalNote","itemDescription","amount","duration","intervalUnit","prescribedQty","POServiceService","poId","issueObject","payment","StrengthDetailComponent","doSave","ItemSupplier","SupplierComponent","saveSupplier","refreshList","supplierId","BasicvisitComponent","presc","prescriptionDetailDTOS","bOK","doseFrequencyId","savePrescription","setSavedPrescription","PatientVisitComponent","toggleText","showHistory","PatientnavbarComponent","position","Patientvisit","PrintpopComponent","ServiceComponentComponent","serviceAdded","serviceRemoved","emit","rowIndex","child","TreatmentComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport {LoginService} from \"./services/login-service.service\";\nimport {Router} from \"@angular/router\";\nimport {PatientServiceService} from \"./services/patient-service.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\n  logged = false;\n\n\n  constructor(public loginService:LoginService, private router:Router,\n              public patientService:PatientServiceService) {\n    this.logged = this.loginService.loggedInUser !==null;\n  }\n\n  logOff() {\n    this.loginService.loggedInUser = null;\n    this.loginService.loggedIn = false;\n    this.patientService.patientObject = null;\n    this.router.navigate(['']);\n\n  }\n}\n\n","<div class=\"head\">\n  <div class=\"row\">\n    <div class=\"col-lg-6\"><h4> Patient Administration  System</h4></div>\n    <div class=\"col-lg-6\">\n      <div *ngIf=\"loginService.loggedIn\">\n        Welcome {{\" \" +loginService.loggedInUser.firstname}}!\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"logOff()\">Log Off</button>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"loginService.loggedIn\">\n  <app-menubar></app-menubar>\n</div>\n<app-patientnavbar></app-patientnavbar>\n<router-outlet></router-outlet>\n<footer>Copyright &copy; Sudarshana</footer>\n\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {AppComponent} from './app.component';\nimport {PatientSearchComponent} from './patient-component/patient-search.component';\nimport {PatientServiceService} from \"./services/patient-service.service\";\nimport {PatientsaveComponent} from './patientsave/patientsave.component';\nimport {TreatmentComponent} from './treatment/treatment.component';\nimport {NavbarComponent} from './navbar.component'\nimport {routing} from \"./app.routing\";\nimport {PatientVisitComponent} from './treatment/patient-visit.component';\nimport {PatientnavbarComponent} from './treatment/patientnavbar.component';\nimport {BasicvisitComponent} from './treatment/basicvisit.component';\nimport {DrugcomponentComponent} from './drugcomponent/drugcomponent.component';\nimport {DrugdosageComponent} from './drugcomponent/drugdosage.component';\nimport {DrugsearchComponent} from './drugcomponent/drugsearch.component';\nimport {DrugdosagelistComponent} from './drugcomponent/drugdosagelist.component';\nimport {PrescriptionComponentComponent} from './prescription-component/prescription-component.component';\nimport {PrescriptionHistoryComponent} from './prescription-component/prescription-history.component';\nimport {PrescriptiondetailComponent} from './prescription-component/prescriptiondetail.component';\nimport {PrintreceiptComponent} from './prescription-component/printreceipt.component';\nimport {PatientadminComponent} from './patient-component/patientadmin.component';\n// import {MdDialog, MaterialModule, MdIconRegistry} from \"@angular/material\";\n// import {OVERLAY_PROVIDERS, MdDialogModule} from \"@angular/material\";\n// import {PopupModule} from \"ng2-opd-popup\";\nimport {PrintpopComponent} from './treatment/printpop.component';\nimport {DrugAdminComponent} from './drugcomponent/drug-admin/drug-admin.component';\nimport {BasedrugadminComponent} from './drugcomponent/drug-admin/basedrugadmin.component';\nimport {DrugpackageadminComponent} from './drugcomponent/drug-admin/drugpackageadmin.component';\n//import {DropdownModule} from \"ngx-dropdown\";\nimport {AdminService} from \"./services/admin.service\";\nimport {ItemServiceService} from \"./services/item-service.service\";\nimport {POServiceService} from \"./services/poservice.service\";\nimport {ItemSupplierService} from \"./services/itemsupplier.service\";\nimport {ItemProductService} from \"./services/itemProduct.service\";\nimport {ReportComponent} from \"./report/report.component\";\nimport {IssueComponent} from \"./issue/issue.component\";\nimport {PurchseorderComponent} from \"./purchseorder/purchseorder.component\";\nimport {ItemComponent} from \"./item/item.component\";\nimport {MenubarComponent} from \"./menubar.component\";\nimport {GrnComponent} from \"./grn/grn.component\";\nimport {ItemtypeComponent} from \"./item/itemtype.component\";\nimport {SupplierComponent} from \"./supplier/supplier.component\";\n// import {BrowserAnimationsModule, NoopAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {IssueFinderComponent} from './issue/issue-finder.component';\nimport {IssueServiceService} from \"./services/issue-service.service\";\nimport { PharmacyComponent } from './pharmacy/pharmacy.component';\nimport { PaymentComponent } from './grn/payment.component';\nimport { MedicalServiceComponentComponent } from './item/medical-service-component/medical-service-component.component';\nimport { SelectedRowDirective } from './selected-row.directive';\nimport { ServiceComponentComponent } from './treatment/service-component.component';\nimport {ReturnoutComponent} from \"./purchseorder/returnout.component\";\nimport { DailyIncomeComponent } from './report/daily-income.component';\nimport { POListComponent } from './purchaseorder/polist.component';\nimport { InOutComponent } from './item/in-out.component';\nimport { FilterPipePipe } from './filter/filter-pipe.pipe';\nimport {LoginComponentComponent} from \"./login-component/login-component.component\";\nimport {LoginService} from \"./services/login-service.service\";\nimport { HomeComponent } from './home/home.component';\nimport { StockAdjustmentComponent } from './drugcomponent/admin/stock-adjustment/stock-adjustment.component';\nimport { StrengthComponent } from './drugcomponent/admin/strengh/strength.component';\nimport { DrugPackagePipe } from './filter/drug-package.pipe';\nimport { DrugPipePipe } from './filter/drug-pipe.pipe';\nimport { PatientPipe } from './filter/patient.pipe';\nimport { PatientAdminFilterPipe } from './filter/patient-admin-filter.pipe';\nimport { IssueHistoryComponent } from './issue/issue-history.component';\nimport { BillReprintComponent } from './issue/bill-reprint.component';\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport {DrugServiceService} from \"./services/drug-service.service\";\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DrugEditComponent } from './drugcomponent/drug-admin/drug-edit/drug-edit.component';\nimport { BaseDrugEditComponent } from './drugcomponent/drug-admin/base-drug-edit/base-drug-edit.component';\nimport {DrugPackageDetailComponent} from \"./drugcomponent/admin/drug-package-detail/drug-package-detail.component\";\nimport { StrengthDetailComponent } from './strength/strength-detail/strength-detail.component';\nimport { PrescriptionComponent } from './history/prescription/prescription.component';\nimport { TreatmentItemComponent } from './dental/treatment-item/treatment-item.component';\nimport { TreatmentHistoryComponent } from './dental/treatment-history/treatment-history.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PatientSearchComponent,\n        PatientsaveComponent,\n        TreatmentComponent,\n        NavbarComponent,\n        PatientVisitComponent,\n        PatientnavbarComponent,\n        BasicvisitComponent,\n        DrugcomponentComponent,\n        DrugdosageComponent,\n        DrugsearchComponent,\n        DrugdosagelistComponent,\n        PrescriptionComponentComponent,\n        PrescriptionHistoryComponent,\n        PrescriptiondetailComponent,\n        NavbarComponent,\n        PrintreceiptComponent,\n        PatientadminComponent,\n        PatientadminComponent,\n        PrintpopComponent,\n        DrugAdminComponent,\n        BasedrugadminComponent,\n        DrugpackageadminComponent,\n        ItemComponent,\n        PurchseorderComponent,\n        IssueComponent,\n        ReportComponent,\n        MenubarComponent,\n        SupplierComponent,\n        ItemtypeComponent,\n        GrnComponent,\n        IssueFinderComponent,\n        PharmacyComponent,\n        PaymentComponent,\n        MedicalServiceComponentComponent,\n        SelectedRowDirective,\n        ServiceComponentComponent,\n        ReturnoutComponent,\n        DailyIncomeComponent,\n        POListComponent,\n        InOutComponent,\n        FilterPipePipe,\n        LoginComponentComponent,\n        HomeComponent,\n        StockAdjustmentComponent,\n        StrengthComponent,\n        DrugPackagePipe,\n        DrugPipePipe,\n        PatientPipe,\n        PatientAdminFilterPipe,\n        IssueHistoryComponent,\n        BillReprintComponent,\n        DrugEditComponent,\n        BaseDrugEditComponent,\n        DrugPackageDetailComponent,\n        StrengthDetailComponent,\n        PrescriptionComponent,\n        TreatmentItemComponent,\n        TreatmentHistoryComponent\n    ],\n    imports: [\n        BrowserModule, //BrowserAnimationsModule,\n        FormsModule,\n        MatDialogModule,\n        //DropdownModule, //NoopAnimationsModule,\n        HttpClientModule, routing, BrowserAnimationsModule //, MdDialogModule//PopupModule.forRoot(),\n    ],\n    entryComponents: [PrintpopComponent],\n    providers: [PatientServiceService, DrugServiceService, AdminService, ItemSupplierService,\n        ItemProductService, ItemServiceService, POServiceService, IssueServiceService,LoginService],\n        // MdDialog, OVERLAY_PROVIDERS],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor() {\n    //localStorage.setItem(\"rootURL\",\"http://localhost:8080/\");\n\n  }\n}\n\n","import {provideRoutes, RouterModule, Routes} from \"@angular/router\";\nimport {PatientsaveComponent} from \"./patientsave/patientsave.component\";\nimport {TreatmentComponent} from \"./treatment/treatment.component\";\nimport {PatientVisitComponent} from \"./treatment/patient-visit.component\";\nimport {PatientSearchComponent} from \"./patient-component/patient-search.component\";\nimport {BasicvisitComponent} from \"./treatment/basicvisit.component\";\nimport {PrescriptionHistoryComponent} from \"./prescription-component/prescription-history.component\";\nimport {PrintreceiptComponent} from \"./prescription-component/printreceipt.component\";\nimport {PatientadminComponent} from \"./patient-component/patientadmin.component\";\nimport {PrintpopComponent} from \"./treatment/printpop.component\";\nimport {DrugAdminComponent} from \"./drugcomponent/drug-admin/drug-admin.component\";\nimport {BasedrugadminComponent} from \"./drugcomponent/drug-admin/basedrugadmin.component\";\nimport {DrugpackageadminComponent} from \"./drugcomponent/drug-admin/drugpackageadmin.component\";\nimport {PurchseorderComponent} from \"./purchseorder/purchseorder.component\";\nimport {ItemComponent} from \"./item/item.component\";\nimport {ReportComponent} from \"./report/report.component\";\nimport {IssueComponent} from \"./issue/issue.component\";\nimport {SupplierComponent} from \"./supplier/supplier.component\";\nimport {ItemtypeComponent} from \"./item/itemtype.component\";\nimport {GrnComponent} from \"./grn/grn.component\";\nimport {IssueFinderComponent} from \"./issue/issue-finder.component\";\nimport {PharmacyComponent} from \"./pharmacy/pharmacy.component\";\nimport {PaymentComponent} from \"./grn/payment.component\";\nimport {MedicalServiceComponentComponent} from \"./item/medical-service-component/medical-service-component.component\";\nimport {ReturnoutComponent} from \"./purchseorder/returnout.component\";\nimport {DailyIncomeComponent} from \"./report/daily-income.component\";\nimport {POListComponent} from \"./purchaseorder/polist.component\";\nimport {InOutComponent} from \"./item/in-out.component\";\nimport {LoginComponentComponent} from \"./login-component/login-component.component\";\nimport {StockAdjustmentComponent} from \"./drugcomponent/admin/stock-adjustment/stock-adjustment.component\";\nimport {StrengthComponent} from \"./drugcomponent/admin/strengh/strength.component\";\nimport {IssueHistoryComponent} from \"./issue/issue-history.component\";\nimport {BillReprintComponent} from \"./issue/bill-reprint.component\";\nimport {TreatmentItemComponent} from \"./dental/treatment-item/treatment-item.component\";\nimport {TreatmentHistoryComponent} from \"./dental/treatment-history/treatment-history.component\";\n\nconst APP_ROUTES: Routes = [\n  {path: 'printIssue/:issue', component: BillReprintComponent},\n  {path: 'issueHistory', component: IssueHistoryComponent},\n  {path: '', component: LoginComponentComponent},\n  {path: 'serviceIssue', component: IssueComponent},\n  {path: 'adjustStock', component: StockAdjustmentComponent},\n  {path: 'strength', component: StrengthComponent},\n\n  {path: 'start', component: PatientSearchComponent},\n  {path: 'patientsave', component: PatientsaveComponent},\n  {path: 'treatment', component: TreatmentComponent},\n  {\n    path: 'patientvisit', component: PatientVisitComponent, children: [\n    {path: 'treatment', component: BasicvisitComponent},\n    {path: 'treatmentHistory', component: PrescriptionHistoryComponent}\n  ]\n  },\n  {path: 'printReceipt', component: PrintreceiptComponent},\n  {path: 'patientAdmin', component: PatientadminComponent},\n  {path: 'printpop', component: PrintpopComponent},\n  {path: 'drugAdmin', component: DrugAdminComponent},\n  {path: 'baseDrugAdmin', component: BasedrugadminComponent},\n  {path: 'drugPackageAdmin', component: DrugpackageadminComponent},\n  {path: 'po', component: POListComponent},\n  {path: 'poDetail', component: PurchseorderComponent},\n  {path: 'item', component: ItemComponent},\n  {path: 'issue', component: IssueComponent},\n  {path: 'report', component: ReportComponent},\n  {path: 'supplier', component: SupplierComponent},\n  {path: 'itemtype', component: ItemtypeComponent},\n  {path: 'grn', component: GrnComponent},\n  {path: 'po', component: PurchseorderComponent},\n  {path: 'findIssue', component: IssueFinderComponent},\n  {path: 'printPo', component: PrintreceiptComponent},\n  {path: 'pharmacyList', component: PharmacyComponent},\n  {path: 'payment', component: PaymentComponent},\n  {path: 'medServiceItem', component: MedicalServiceComponentComponent},\n  {path: 'returnout', component: ReturnoutComponent},\n  {path: 'dailyIncome', component: DailyIncomeComponent},\n  {path: 'inOut', component: InOutComponent},\n  {path: 'dentalTrt',component:TreatmentItemComponent},\n  {path: 'dentalPatList',component:TreatmentHistoryComponent},\n\n]\n\nexport const routing = RouterModule.forRoot(APP_ROUTES)\n","import {TreatmentItem} from \"./TreatmentItem\";\n\nexport class PatTreatment{\n  id:number;\n  timeOfAction:string;\n  patientId:number;\n  trtItemId:number;\n  rate:number;\n  remarks:string;\n  treatmentItem:TreatmentItem;\n\n  constructor() {\n    this.treatmentItem = new TreatmentItem();\n  }\n\n}\n","export class TreatmentItem{\n  id:number;\n  name:string;\n  rate:number;\n  remarks:string;\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {TreatmentItem} from \"../model/TreatmentItem\";\nimport {DentalServiceService} from \"../../services/dental-service.service\";\nimport {PatTreatment} from \"../model/PatTreatment\";\nimport {PatientServiceService} from \"../../services/patient-service.service\";\n\n@Component({\n  selector: 'app-treatment-history',\n  templateUrl: './treatment-history.component.html',\n  styleUrls: ['./treatment-history.component.css']\n})\nexport class TreatmentHistoryComponent implements OnInit {\n\n  trtTypes:TreatmentItem[] = [];\n  currObj:PatTreatment = new PatTreatment();\n  treatments:PatTreatment[] =[];\n  @ViewChild(\"editComp\") editComp:ElementRef;\n\n  constructor(private service:DentalServiceService, private patService:PatientServiceService) { }\n\n\n  ngOnInit(): void {\n    this.patTreatments();\n    this.loadTreatments();\n\n\n  }\n\n  private patTreatments() {\n    this.service.getAllPatTreatments(this.patService.patientObject.patientId).subscribe(\n      data => {\n        this.treatments = data;\n      }\n    );\n  }\n\n  private loadTreatments() {\n    this.service.getAllTreatmentItems().subscribe(\n      data => {\n        this.trtTypes = data;\n      }\n    );\n  }\n\n  showNew() {\n    this.editComp.nativeElement.style.setProperty('display','block');\n  }\n\n  cancel() {\n    this.currObj = new PatTreatment();\n    this.editComp.nativeElement.style.setProperty('display','none');\n    this.loadTreatments();\n  }\n\n  save() {\n    this.currObj.patientId = this.patService.patientObject.patientId;\n    this.service.savePatTreatment(this.currObj).subscribe(\n       data =>{\n          this.patTreatments();\n       }\n    );\n    this.cancel();\n  }\n\n  changeItem() {\n    this.trtTypes.forEach(item =>{\n       if(item.id == this.currObj.treatmentItem.id){\n          this.currObj.rate = item.rate;\n          this.currObj.treatmentItem = item;\n          this.currObj.trtItemId = item.id;\n       }\n    });\n  }\n\n  editTrt(obj: PatTreatment) {\n    this.currObj = obj;\n    this.showNew();\n  }\n\n  delete(id: number) {\n    this.service.deletePatTreatment(id).subscribe(\n       data =>{\n          this.patTreatments();\n       }\n    )\n  }\n}\n","<div class=\"container\">\n  <h3>Treatments </h3>\n  <!--Treatment History Table -->\n  <button type=\"button\" class=\"btn-outline-primary\" (click)=\"showNew()\">New ..</button>\n  <br/>\n  <table class=\"table table-bordered table-striped\">\n      <tr>\n        <td>Id</td>\n        <td>Description</td>\n        <td>Date</td>\n        <td>Amount</td>\n      </tr>\n    <tr *ngFor=\"let obj of treatments\">\n      <td><button (click)=\"editTrt(obj)\" class=\"btn-link\">{{obj.id}}</button></td>\n      <td>{{obj.remarks}}</td>\n      <td>{{obj.timeOfAction}}</td>\n      <td>{{obj.rate}}</td>\n      <td><button type=\"button\"  class='btn btn-danger'(click)=\"delete(obj.id)\">Delete</button></td>\n    </tr>\n  </table>\n\n  <!-- The popup to create a new one -->\n  <div id=\"modal\" class=\"modal\" #editComp>\n     <div id=\"modal-content\" class=\"modal-content\">\n         <div class=\"row\">\n           <div class=\"col-sm-2\">\n             <label>Date & Time</label>\n           </div>\n           <div class=\"col-sm-8\">\n             <input type=\"datetime-local\" [(ngModel)]=\"currObj.timeOfAction\">\n           </div>\n         </div>\n\n       <div class=\"row\">\n         <div class=\"col-sm-2\">\n           <label>Type</label>\n         </div>\n         <div class=\"col-sm-8\">\n           <select [(ngModel)]=\"currObj.treatmentItem.id\" (change)=\"changeItem()\">\n           <option *ngFor=\"let obj of trtTypes\"\n                   [value]=\"obj.id\"\n                   [attr.selected]=\"currObj.trtItemId==obj.id?true:null\">\n           {{obj.name}}</option>\n           </select>\n         </div>\n       </div>\n\n       <div class=\"row\">\n         <div class=\"col-sm-2\">\n           <label>Amount</label>\n         </div>\n         <div class=\"col-sm-8\">\n           <input type=\"number\" [(ngModel)]=\"currObj.rate\" size=\"50\"/>\n         </div>\n       </div>\n\n       <div class=\"row\">\n         <div class=\"col-sm-2\">\n           <label>Remarks</label>\n         </div>\n         <div class=\"col-sm-8\">\n          <textarea [(ngModel)]=\"currObj.remarks\" rows=\"10\" cols=\"75\"></textarea>\n         </div>\n       </div>\n\n       <div class=\"row\">\n         <div class=\"col-sm-5\"></div>\n         <div class=\"col-sm-3\">\n           <button type=\"button\" class=\"btn btn-primary\" (click)=\"save()\"> Save</button>\n           <button type=\"button\" class=\"btn btn-primary\" (click)=\"cancel()\"> Cancel</button>\n         </div>\n       </div>\n     </div>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {DentalServiceService} from \"../../services/dental-service.service\";\nimport {TreatmentItem} from \"../model/TreatmentItem\";\n\n@Component({\n  selector: 'app-treatment-item',\n  templateUrl: './treatment-item.component.html',\n  styleUrls: ['./treatment-item.component.css']\n})\nexport class TreatmentItemComponent implements OnInit {\n\n  objectList =[];\n  currItem:TreatmentItem\n  @ViewChild('myModal') modal:ElementRef\n\n  constructor(private service:DentalServiceService) { }\n\n  ngOnInit(): void {\n    this.currItem = new TreatmentItem();\n    this.loadData();\n  }\n\n  private loadData() {\n    this.service.getAllTreatmentItems().subscribe(\n      data => {\n        this.objectList = data;\n      }\n    );\n  }\n\n  onShowModel() {\n    this.modal.nativeElement.style.setProperty('display','block');\n  }\n\n  onSave() {\n    this.service.saveItem(this.currItem).subscribe(\n      data =>{\n        this.loadData();\n      }\n    );\n    this.onCancel();\n  }\n\n  onCancel() {\n    this.currItem = new TreatmentItem();\n    this.modal.nativeElement.style.setProperty('display','none');\n  }\n\n  doEdit(obj: any) {\n    this.currItem = obj;\n    this.onShowModel();\n  }\n\n  delete(id) {\n      this.service.deleteTreatmentItem(id).subscribe(\n         data =>{\n           this.loadData();\n         },\n        error => {\n           alert(error.error.message);\n        }\n      )\n  }\n}\n","\n<div class=\"container\">\n <h2> Treatment Items</h2>\n  <button type=\"button\" (click)=\"onShowModel()\" class=\"btn-primary\">New..</button>\n  <!-- Table -->\n  <table class=\"table table-striped\">\n    <tr>\n      <td>Id</td>\n      <td>Name</td>\n      <td>Rate</td>\n      <td>Remarks</td>\n    </tr>\n    <tr *ngFor=\"let obj of objectList\">\n      <td (click)=\"doEdit(obj)\">{{obj.id}}</td>\n      <td>{{obj.name}}</td>\n      <td>{{obj.rate}}</td>\n      <td>{{obj.remarks}}</td>\n      <td><button type=\"button\"  class='btn btn-danger'(click)=\"delete(obj.id)\">Delete</button></td>\n    </tr>\n  </table>\n\n  <div id=\"myModal\" #myModal Class=\"modal\">\n    <br/>\n    <div class=\"modal-content\">\n      <div class=\"row\">\n        <div class=\"col-sm-2\">\n          <label>Name:</label>\n        </div>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" id=\"name\" name=\"patNo\" [(ngModel)]=\"currItem.name\" size=\"50\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-2\">\n          <label>Rate </label>\n        </div>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" id=\"rate\" name=\"rate\" [(ngModel)]=\"currItem.rate\"/>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-2\">\n          <label>Remarks </label>\n        </div>\n        <div class=\"col-sm-8\">\n          <textarea id=\"rem\" name=\"rem\" [(ngModel)]=\"currItem.remarks\"  rows=\"5\"  cols=\"50\"></textarea>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-7\"></div>\n        <div class=\"col-sm-3\">\n        <button type=\"button\" (click)=\"onSave()\" class=\"btn-primary\">Save</button>\n        <button type=\"button\" (click)=\"onCancel()\" class=\"btn-primary\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {DrugServiceService} from \"../../../services/drug-service.service\";\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {DrugPackage} from \"../../drug-package\";\nimport {Drug} from \"../../drug\";\nimport {Strength} from \"../../strength\";\n\n@Component({\n  selector: 'app-drug-package-detail',\n  templateUrl: './drug-package-detail.component.html',\n  styleUrls: ['./drug-package-detail.component.css']\n})\nexport class DrugPackageDetailComponent implements OnInit {\n\n  drugPackage:DrugPackage=new DrugPackage();\n  drugList:Drug[] =[];\n  strengthList =[];\n\n  constructor(private drugService:DrugServiceService,private dialogRef:MatDialogRef<DrugPackageDetailComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any)\n  {\n     Object.assign(this.drugPackage, data.drugPackage);\n     this.drugList = data.drugList;\n     this.strengthList = data.strengthList;\n  }\n\n  ngOnInit(): void {\n  }\n\n  cancelEdit() {\n    this.dialogRef.close(null);\n  }\n\n  onSubmit() {\n    this.drugService.saveDrugPackage(this.drugPackage).subscribe(\n      data =>{\n        this.dialogRef.close(data);\n      }\n    );\n  }\n}\n","<mat-dialog-content>\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" ngClass=\"drugPackage\">\n    <h3> Edit Drug Package details </h3>\n    <table width=\"100%\">\n      <tr>\n        <th width=\"40%\"></th>\n        <th width=\"40%\"></th>\n      </tr>\n      <tr>\n        <td>\n          <label> Drug : </label>\n        </td>\n        <td>\n          <select name=\"drug\" [(ngModel)]=\"drugPackage.drug.drugId\" required>\n            <option *ngFor=\"let drug of drugList\" [value]=\"drug.drugId\">{{drug.brandName}}</option>\n          </select>\n        </td>\n        <td></td>\n      </tr>\n\n      <tr>\n        <td>\n          <label> Strength : </label>\n        </td>\n        <td>\n          <select name=\"strength\" [(ngModel)]=\"drugPackage.strength.strengthId\" required>\n            <option *ngFor=\"let strength of strengthList\" [value]=\"strength.strengthId\">\n              {{strength.strengthAmount}} {{strength.unitName}}\n            </option>\n          </select>\n        </td>\n        <td></td>\n      </tr>\n\n      <tr>\n        <td>\n          <label> Quantity : </label>\n        </td>\n        <td>\n          <input type=\"text\" id=\"quanitity\" name=\"quanitity\" required [(ngModel)]=\"drugPackage.quantity\" disabled/>\n        </td>\n        <td></td>\n      </tr>\n\n      <tr>\n        <td>\n          <label> Min Order Level : </label>\n        </td>\n        <td>\n          <input type=\"text\" id=\"minOrderLevel\" name=\"minOrderLevel\" required [(ngModel)]=\"drugPackage.minOrderLevel\"/>\n        </td>\n        <td></td>\n      </tr>\n\n      <tr>\n        <td>\n          <label> Unit Price : </label>\n        </td>\n        <td>\n          <input type=\"text\" id=\"unitPrice\" name=\"unitPrice\" required [(ngModel)]=\"drugPackage.unitPrice\"/>\n        </td>\n        <td></td>\n      </tr>\n      <tr>\n        <td>\n          <label for=\"contentForm\">Form of Content : </label>\n        </td>\n        <td><select id=\"contentForm\" name=\"contentForm\" [(ngModel)]=\"drugPackage.drugPackageContentType\" required>\n          <option value=\"TABLET\">TABLET</option>\n          <option value=\"LIQUID\">LIQUID</option>\n          <option value=\"CREAM\">CREAM</option>\n        </select>\n        </td>\n        <td></td>\n      </tr>\n    </table>\n    <table width=\"30%\">\n      <tr><td>\n        <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n      </td>\n      </tr>\n    </table>\n  </form>\n  <td><button class=\" btn btn-primary\" (click)=\"cancelEdit()\">Cancel</button>\n</mat-dialog-content>\n","import {Component, OnInit} from '@angular/core';\nimport {DrugServiceService} from \"../../../services/drug-service.service\";\n\n@Component({\n  selector: 'app-stock-adjustment',\n  templateUrl: './stock-adjustment.component.html',\n  styleUrls: ['./stock-adjustment.component.css']\n})\nexport class StockAdjustmentComponent implements OnInit {\n\n  drugPackageList = [];\n  selectedIndex: string;\n  selectedDrugPackage: any;\n  adjustment: any;\n  saved = false;\n  searchCritera: any;\n  adjustments = [];\n\n  constructor(private drugService: DrugServiceService) {\n    this.initAdjustment();\n    this.searchCritera = {\n      fromDate: new Date(),\n      toDate: new Date()\n    }\n  }\n\n\n  private initAdjustment() {\n    this.adjustment = {\n      dateOfAdjustment: new Date(),\n      drugPackage: {drugPackageId: 0},\n      adjustedQty: 0,\n      remarks: \"\"\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  saveAdjustment() {\n    console.log(this.adjustment);\n    console.log(this.selectedDrugPackage);\n\n    this.adjustment.drugPackage.drugPackageId = this.selectedDrugPackage.drugPackageId;\n    this.drugService.adjustStock(this.adjustment).subscribe(\n      data => {\n        this.saved = true;\n        this.initAdjustment();\n      }\n    );\n  }\n\n  doSearch() {\n    this.drugService.searchAdjustment(this.searchCritera).subscribe(\n      data => {\n        this.adjustments = data;\n      }\n    );\n  }\n\n  searchDrugPackage(event: any, value: string) {\n    this.saved = false;\n    if (event.keyCode == 13 || !event.keyCode) {\n      this.selectedDrugPackage = this.drugPackageList[this.selectedIndex];\n      return;\n    }\n    if (value.length == 2) {\n      this.drugService.findDrugPackages(value).subscribe(\n        data => {\n          this.drugPackageList = data;\n        }\n      );\n    }\n\n  }\n\n}\n","<div class=\"container\">\n  <div *ngIf=\"saved\">\n    Adjustment done\n  </div>\n  <label>From Date :</label>\n  <input type=\"date\" [ngModel]=\"searchCritera.fromDate | date:'yyyy-MM-dd'\"\n         (ngModelChange)=\"searchCritera.fromDate = $event\">\n  <label>To Date :</label>\n  <input type=\"date\" [ngModel]=\"searchCritera.toDate| date:'yyyy-MM-dd'\"\n         (ngModelChange)=\"searchCritera.toDate = $event\">\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"doSearch()\">Search</button>\n  <table class=\"table table-bordered\">\n    <thead>\n    <th>Date</th>\n    <th>Drug Package</th>\n    <th>Amount</th>\n    <th>Notes</th>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let row of adjustments\">\n      <td>{{row.dateOfAdjustment | date}}</td>\n      <td>{{row.drugPackage.drug.brandName}}</td>\n      <td>{{row.adjustedQty}}</td>\n      <td>{{row.remarks}}</td>\n    </tr>\n    </tbody>\n  </table>\n  <div style=\"background-color: #bfd2c8\">\n    <table>\n      <tr>\n        <td></td>\n        <td width=\"100px\"></td>\n        <td></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td>Date of Adjustment</td>\n        <td></td>\n        <td><input type=\"date\" [ngModel]=\"adjustment.dateOfAdjustment |date:'yyyy-MM-dd'\"\n                   (ngModelChange)=\"adjustment.dateOfAdjustment = $event\"></td>\n        <td></td>\n      </tr>\n      <tr>\n        <td>Drug Package</td>\n        <td></td>\n        <td>\n          <input #search type=\"text\" list='packageList' id=\"drug\" name=\"drug\" placeholder=\"Drug Package to search\"\n                 (keyup)=\"searchDrugPackage($event,search.value)\"  [(ngModel)]=\"selectedIndex\">\n          <datalist id=\"packageList\">\n            <option *ngFor=\"let row of drugPackageList;let i=index\" value=\"{{i}}\">\n              {{row.drug.brandName}},{{row.strength.strengthUnit.unitName}},{{row.strength.strengthAmount}}\n            </option>\n          </datalist>\n        </td>\n        <td> </td>\n      </tr>\n      <td></td>\n      <td></td>\n      <td>\n      <div *ngIf=\"selectedDrugPackage\">\n        {{selectedDrugPackage.drug.brandName}},{{selectedDrugPackage.strength.strengthUnit.unitName}},{{selectedDrugPackage.strength.strengthAmount}}\n      </div>\n      </td>\n      <tr>\n\n      </tr>\n      <tr>\n        <td>Adjusted Amount</td>\n        <td></td>\n        <input type=\"number\" [(ngModel)]=\"adjustment.adjustedQty\">\n      </tr>\n\n      <tr>\n        <td>Remarks</td>\n        <td></td>\n        <input type=\"text\" size=\"100\" [(ngModel)]=\"adjustment.remarks\">\n      </tr>\n    </table>\n    <br/>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveAdjustment()\">Save</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {DrugServiceService} from \"../../../services/drug-service.service\";\nimport {AdminService} from \"../../../services/admin.service\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {DrugEditComponent} from \"../../drug-admin/drug-edit/drug-edit.component\";\nimport {StrengthDetailComponent} from \"../../../strength/strength-detail/strength-detail.component\";\n\n@Component({\n  selector: 'app-strengh',\n  templateUrl: './strength.component.html',\n  styleUrls: ['./strength.component.css']\n})\nexport class StrengthComponent implements OnInit {\n\n  strengthList =[];\n  strength: any\n  units =[];\n  constructor(private drugService:DrugServiceService, private adminService:AdminService,\n              private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.initObject();\n    this.drugService.loadStregths().subscribe(\n      data =>{\n        this.strengthList = data;\n\n      }\n    );\n\n    this.adminService.getStrengthUnits().subscribe(\n      data =>{this.units = data}\n    );\n  }\n\n  doSave()\n  {\n    this.adminService.saveStrength(this.strength).subscribe(\n      data=>{\n        this.strengthList = data;\n        this.initObject();\n      }\n    )\n  }\n\n  private initObject() {\n    this.strength = {\n      strengthUnit: {unitId: ''},\n      strengthAmount: 0.0\n    }\n  }\n\n  onEdit(row: any) {\n    this.strength = row;\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = new Object();\n    dialogConfig.data.units = this.units;\n    dialogConfig.data.strength = {\n      strengthAmount : row.strengthAmount,\n      strengthUnit: {unitId: row.unitId},\n       unitName : row.unitName,\n    };\n\n    let dialogRef = this.dialog.open(StrengthDetailComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      result => {\n        if (result != null) {\n               this.strengthList = result;\n        }\n      });\n  }\n\n  onNew() {\n     this.initObject();\n     this.onEdit(this.strength);\n  }\n}\n","<p align=\"center\" style=\"color: #794522\"> In this screen you can only add frequently used strength unit and amount combination. <br/>\n  You can't edit or delete any existing combinations !\n</p>\n\n<td><button class=\"btn-primary\" (click)=\"onNew()\">New..</button></td>\n<br/>\n\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <td>Strength Unit</td>\n        <td>Strength Amount</td>\n\n      </thead>\n      <tr *ngFor=\"let row of strengthList\">\n        <td>{{row.unitName}}</td>\n        <td>{{row.strengthAmount}}</td>\n      </tr>\n    </table>\n  </div>\n</div>\n","export class Basedrug {\n  baseDrugId: number;\n  baseDrugName: string;\n}\n","export class Dosefrequency {\n  doseFrequencyId:number;\n  timeUnit:String;\n  noofDoses:number;\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Basedrug} from \"../../basedrug\";\nimport {DrugServiceService} from \"../../../services/drug-service.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-base-drug-edit',\n  templateUrl: './base-drug-edit.component.html',\n  styleUrls: ['./base-drug-edit.component.css']\n})\nexport class BaseDrugEditComponent implements OnInit {\n\n  baseDrug: Basedrug = new Basedrug();\n\n  constructor(private drugServiceService:DrugServiceService, private dialogRef:MatDialogRef<BaseDrugEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    Object.assign(this.baseDrug, data.baseDrug);\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.drugServiceService.saveBaseDrug(this.baseDrug).subscribe(\n      data => {\n        this.dialogRef.close(data);\n      }\n    );\n  }\n\n  cancelEdit() {\n     this.dialogRef.close(null);\n  }\n\n}\n","<mat-dialog-content>\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" ngClass=\"baseDrug\">\n    <h3> Edit Base Drug details </h3>\n    <table width=\"100%\">\n      <tr>\n        <th width=\"30%\"></th>\n        <th width=\"100%\"></th>\n        <th width=\"1%\"></th>\n      </tr>\n      <tr>\n        <td>\n          <label for=\"baseDrugName\">Base Drug Name : </label>\n        </td>\n        <td><input type=\"text\" id=\"baseDrugName\" name=\"baseDrugName\" required [(ngModel)]=\"baseDrug.baseDrugName\"/>\n        </td>\n        <td></td>\n      </tr>\n    </table>\n\n    <br/>\n    <table width=\"30%\" cellpadding=\"15\">\n      <tr>\n        <td>\n          <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n        </td>\n        <td>\n          <button class=\" btn btn-primary\" (click)=\"cancelEdit()\">Cancel</button>\n        </td>\n      </tr>\n    </table>\n\n  </form>\n</mat-dialog-content>\n\n","import {Component, OnInit} from '@angular/core';\nimport {DrugPackage} from \"../drug-package\";\nimport {Basedrug} from \"../basedrug\";\nimport {DrugServiceService} from \"../../services/drug-service.service\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {DrugEditComponent} from \"./drug-edit/drug-edit.component\";\nimport {BaseDrugEditComponent} from \"./base-drug-edit/base-drug-edit.component\";\n\n@Component({\n  selector: 'app-basedrugadmin',\n  templateUrl: './basedrugadmin.component.html',\n  styleUrls: ['./basedrugadmin.component.css']\n})\nexport class BasedrugadminComponent implements OnInit {\n\n  baseDrugList = [];\n  selectedBaseDrugRow: number;\n  baseDrug: Basedrug;\n  selectedBaseDrug: Basedrug;\n\n  constructor(private drugServiceService: DrugServiceService, private dialog: MatDialog) {\n    this.baseDrug = new Basedrug();\n  }\n\n  setClickedBaseDrugRow(obj) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = new Object();\n    dialogConfig.data.baseDrug = obj;\n\n    let dialogRef = this.dialog.open(BaseDrugEditComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      result => {\n        console.log(result);\n        if (result != null) {\n          var idx = this.findIndex(result.baseDrugId);\n          if (idx >= 0) {\n            this.baseDrugList[idx].baseDrugName = result.baseDrugName;\n          } else {\n            this.baseDrugList.push(result);\n          }\n        }\n      }\n    );\n  }\n\n  findIndex(id: number): number {\n    var idx = -1;\n    var currIndex = 0\n    for (let d of this.baseDrugList) {\n      if (d.baseDrugId == id) {\n        idx = currIndex;\n        break;\n      } else {\n        currIndex++;\n      }\n    }\n    return idx;\n  }\n\n  ngOnInit() {\n    this.drugServiceService.loadBaseDrugs(\n    ).subscribe(\n      data => {\n        this.baseDrugList = data;\n      }\n    );\n  }\n\n\n  onNew() {\n    this.setClickedBaseDrugRow(new Basedrug())\n  }\n}\n","<div class=\"container\">\n  <h2>Admin Base Drug</h2>\n  <input type=\"text\" #listFilter (keyup)=\"0\" />\n  <button class=\"btn-primary\" (click)=\"onNew()\">New ...</button>\n  <div class=\"row\">\n    <div class=\"col-lg-7\">\n      <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n        <tr>\n          <td>\n            <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n              <tr>\n                <th width=\"10\">Base Drug Id</th>\n                <th width=\"50%\">Base Drug Name</th>\n                <th>Edit</th>\n              </tr>\n\n              <!-- let i = index\" (click)=\"setClickedBaseDrugRow(i)\"\n                  [class.active]=\"i == selectedBaseDrugRow\"> -->\n              <tr *ngFor=\"let obj of baseDrugList | drugFilter :listFilter.value; let i= index\"\n                  [class.active]=\"i == selectedBaseDrugRow\" >\n                <td>{{obj.baseDrugId}}</td>\n                <td>\n                  {{obj.baseDrugName}}\n                </td>\n                <td><button class=\"btn-primary\" (click)=\"setClickedBaseDrugRow(obj)\">Edit</button></td>\n              </tr>\n\n            </table>\n          </td>\n        </tr>\n      </table>\n    </div>\n    <div class=\"col-lg-5\">\n\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DrugServiceService} from \"../../services/drug-service.service\";\nimport {Basedrug} from \"../basedrug\";\nimport {Drug} from \"../drug\";\nimport {DrugPackage} from \"../drug-package\";\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogConfig} from \"@angular/material/dialog\";\nimport {DrugEditComponent} from \"./drug-edit/drug-edit.component\";\nimport {DrugPipePipe} from \"../../filter/drug-pipe.pipe\";\n\n@Component({\n  selector: 'app-drug-admin',\n  templateUrl: './drug-admin.component.html',\n  styleUrls: ['./drug-admin.component.css']\n})\nexport class DrugAdminComponent implements OnInit {\n  baseDrugList = [];\n  drugList = [];\n  selectedDrugRow = -1;\n  drug: Drug;\n  selectedDrug: Drug;\n\n\n  constructor(private drugServiceService: DrugServiceService, private dialog: MatDialog) {\n\n    this.drug = new Drug();\n\n  }\n\n  setClickedDrugRow(obj: any) {\n    this.drug = obj;\n  }\n\n  ngOnInit() {\n\n    this.drugServiceService.loadDrugs(\n    ).subscribe(\n      data => {\n        this.drugList = data;\n      }\n    );\n\n    this.drugServiceService.loadBaseDrugs(\n    ).subscribe(\n      data => {\n        this.baseDrugList = data;\n      }\n    );\n  }\n\n  onEditDrug(drug: Drug) {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = new Object();\n    dialogConfig.data.list = this.baseDrugList;\n    dialogConfig.data.drug = drug;\n\n    let dialogRef = this.dialog.open(DrugEditComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      result => {\n        if (result != null) {\n          var idx = this.findIndex(result.id);\n          if (idx > 0) {\n            this.drugList[idx] = result;\n          } else {\n            this.drugList.push(result);\n          }\n        }\n      }\n    );\n  }\n\n\n  findIndex(id: number): number {\n    var idx = -1;\n    var currIndex = 0\n    for (let d of this.drugList) {\n      if (d.id == id) {\n        idx = currIndex;\n        break;\n      } else {\n        currIndex++;\n      }\n    }\n    return idx;\n  }\n\n\n  newDrug() {\n    this.onEditDrug(new Drug());\n  }\n}\n","<div class=\"container\">\n  <h2>Drug Administration</h2>\n  <div class=\"row\">\n    <div class=\"col-lg-7\">\n      <label>Filter Text for Brand name :</label>\n      <input type=\"text\" #listFilter (keyup)=\"0\" />\n      <button class=\"mat-radio-button btn-primary\" (click)=\"newDrug()\">New..</button>\n      <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n        <tr>\n          <td>\n            <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n              <tr>\n                <th width=\"10\">Drug Id</th>\n                <th width=\"30%\">Base Drug  Name</th>\n                <th width=\"30%\">Drug  Name</th>\n                <th width=\"10%\">Location</th>\n                <th width=\"20%\">Edit</th>\n              </tr>\n\n              <tr *ngFor=\"let obj of drugList | drugPipe:listFilter.value; let i = index\"\n                  [class.active]=\"i == selectedDrugRow\">\n                <td>{{obj.drugId}}</td>\n                <td>\n                  {{obj.baseDrug.baseDrugName}}\n                </td>\n                <td>\n                  {{obj.brandName}}\n                </td>\n                <td>{{obj.location}}</td>\n                <td><button (click)='onEditDrug(obj)'>Edit</button></td>\n              </tr>\n            </table>\n          </td>\n        </tr>\n      </table>\n\n    </div>\n    <div class=\"col-lg-4\">\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {DrugServiceService} from \"../../../services/drug-service.service\";\nimport {Drug} from \"../../drug\";\nimport {\n  MAT_DIALOG_DATA, MatDialogRef\n} from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: 'app-drug-edit',\n  templateUrl: './drug-edit.component.html',\n  styleUrls: ['./drug-edit.component.css']\n})\nexport class DrugEditComponent implements OnInit {\n\n  baseDrugList = [];\n  drugList = [];\n  selectedDrugRow = -1;\n  drug: Drug;\n  selectedDrug: Drug;\n\n  constructor(private drugServiceService:DrugServiceService,\n              private dialogRef:MatDialogRef<DrugEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n     this.baseDrugList = data.list;\n     this.drug = data.drug;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.drugServiceService.saveDrug(this.drug).subscribe(\n      data => {\n        this.dialogRef.close(data);\n      }\n    );\n  }\n\n  cancelEdit() {\n    this.dialogRef.close(null);\n  }\n\n\n}\n","<mat-dialog-content>\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" ngClass=\"drug\">\n    <h3> Edit Drug details </h3>\n    <table width=\"100%\">\n      <tr>\n        <th width=\"40%\"></th>\n        <th width=\"40%\"></th>\n      </tr>\n      <tr>\n        <td>\n          <label>Base Drug : </label>\n        </td>\n        <td>\n          <select name=\"baseDrug\" [(ngModel)]=\"drug.baseDrug.baseDrugId\">\n            <option *ngFor=\"let bd of baseDrugList\" [value]=\"bd.baseDrugId\">{{bd.baseDrugName}}</option>\n          </select>\n        </td>\n        <td></td>\n      </tr>\n\n      <tr>\n        <td>\n          <label for=\"drugName\"> Drug Name : </label>\n        </td>\n        <td><input type=\"text\" id=\"drugName\" name=\"drugName\" required [(ngModel)]=\"drug.brandName\"/>\n        </td>\n        <td></td>\n      </tr>\n\n      <tr>\n        <td>\n          <label for=\"location\"> Location : </label>\n        </td>\n        <td><input type=\"text\" id=\"location\" name=\"location\" required [(ngModel)]=\"drug.location\"/>\n        </td>\n        <td></td>\n      </tr>\n\n    </table>\n\n\n    <table width=\"20%\">\n      <tr>\n        <td>\n          <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n        </td>\n        <td>\n          <button class=\"btn btn-primary\" (click)=\"cancelEdit()\">Cancel</button>\n        </td>\n      </tr>\n    </table>\n  </form>\n</mat-dialog-content>\n","import {Component, OnInit} from '@angular/core';\nimport {DrugPackage} from \"../drug-package\";\nimport {DrugServiceService} from \"../../services/drug-service.service\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {DrugEditComponent} from \"./drug-edit/drug-edit.component\";\nimport {DrugPackageDetailComponent} from \"../admin/drug-package-detail/drug-package-detail.component\";\n\n@Component({\n  selector: 'app-drugpackageadmin',\n  templateUrl: './drugpackageadmin.component.html',\n  styleUrls: ['./drugpackageadmin.component.css']\n})\nexport class DrugpackageadminComponent implements OnInit {\n\n\n  selectedDrugPackageRow: number;\n  drugPackage: DrugPackage;\n  selectedDrugPackage: DrugPackage;\n  drugPackageList = [];\n  strengthList = [];\n  drugList = [];\n\n  constructor(private drugServiceService: DrugServiceService, private dialog:MatDialog) {\n\n    this.drugPackage = new DrugPackage();\n\n  }\n\n  setClickedDrugPackageRow(obj: any)\n  {\n     this.drugPackage = obj;\n  }\n\n  ngOnInit() {\n    this.drugServiceService.loadStregths(\n    ).subscribe(\n      data => {\n        this.strengthList = data;\n      }\n    );\n\n    this.drugServiceService.loadDrugPacakges(\n    ).subscribe(\n      data => {\n        this.drugPackageList = data;\n      }\n    );\n\n    this.drugServiceService.loadDrugs(\n    ).subscribe(\n      data => {\n        this.drugList = data;\n      }\n    );\n  }\n\n  findIndex(id: number): number {\n    var idx = -1;\n    var currIndex = 0\n    for (let d of this.drugPackageList) {\n      if (d.id == id) {\n        idx = currIndex;\n        break;\n      } else {\n        currIndex++;\n      }\n    }\n    return idx;\n  }\n\n  onEdit(obj: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = new Object();\n    dialogConfig.data.drugPackage = obj;\n    dialogConfig.data.drugList = this.drugList;\n    dialogConfig.data.strengthList = this.strengthList;\n\n    let dialogRef = this.dialog.open(DrugPackageDetailComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n      result => {\n          if(result != null){\n             this.drugPackageList = result;\n          }\n      }\n    );\n  }\n\n  onNew() {\n     this.onEdit(new DrugPackage());\n  }\n\n}\n","<div class=\"container\">\n  <h2>Drug package details</h2>\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n       <label>Filte Text for Brand name :</label>\n      <input type=\"text\" #listFilter (keyup)=\"0\" />\n      <button class=\"btn-primary\" (click)=\"onNew()\">New..</button>\n      <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n        <tr>\n          <th width=\"10\">Drug package Id</th>\n          <th width=\"50%\">Base Drug Name</th>\n          <th width=\"30%\">Drug Name</th>\n          <th width=\"10%\"> Strength</th>\n          <th width=\"5%\"> Quantity</th>\n          <th width=\"5%\"> Min Order Level</th>\n          <th width=\"5%\"> Unit Price</th>\n          <th width=\"5%\"> Content Type</th>\n          <th>Edit</th>\n        </tr>\n\n        <tr *ngFor=\"let obj of drugPackageList | drugPackagePipe:listFilter.value ; let i = index\" (click)=\"setClickedDrugPackageRow(obj)\"\n            [class.active]=\"i == selectedDrugPackageRow\">\n          <td><a (click)=\"onEdit(obj)\">{{obj.drugPackageId}}</a></td>\n          <td>\n            <a (click)=\"onEdit(obj)\">{{obj.drug.baseDrug.baseDrugName}}</a>\n          </td>\n          <td>\n            <a (click)=\"onEdit(obj)\">{{obj.drug.brandName}}</a>\n          </td>\n          <td>\n            {{obj.strength.strengthAmount}} {{obj.strength.unitName}}\n          </td>\n          <td>\n            {{obj.quantity}}\n          </td>\n          <td>\n            {{obj.minOrderLevel}}\n          </td>\n          <td>\n            {{obj.unitPrice}}\n          </td>\n          <td>\n            {{obj.drugPackageContentType}}\n          </td>\n          <td><button class=\"btn-primary\" (click)=\"onEdit(obj)\">Edit</button></td>\n        </tr>\n      </table>\n    </div>\n    <div class=\"col-md-3\">\n</div>\n  </div>\n</div>\n\n","import {Drug} from \"./drug\";\nimport {Strength} from \"./strength\";\n\nexport class DrugPackage {\n\n  constructor(){\n    this.drug = new Drug();\n    this.strength = new Strength();\n  }\n  drugPackageId: number;\n\n  drug: Drug;\n\n  strength: Strength;\n\n  quantity: number;\n\n  minOrderLevel: number;\n\n  unitPrice: number\n\n  drugPackageContentType:string;\n\n\n}\n","import {Basedrug} from \"./basedrug\";\n\nexport class Drug {\n   drugId:\"\";\n   baseDrug: Basedrug;\n   brandName:\"\";\n   location:\"\";\n\n   constructor()\n   {\n     this.baseDrug =new Basedrug();\n     this.brandName=\"\";\n   }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-drugcomponent',\n  templateUrl: './drugcomponent.component.html',\n  styleUrls: ['./drugcomponent.component.css']\n})\nexport class DrugcomponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-drugsearch></app-drugsearch>\n<app-drugdosagelist></app-drugdosagelist>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-drugdosage',\n  templateUrl: './drugdosage.component.html',\n  styleUrls: ['./drugdosage.component.css']\n})\nexport class DrugdosageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"row col-md-1\">\n      <label>Amoxilin</label>\n    </div>\n    <div class=\"col-md-1\">\n      <select>\n        <option value=\"5mg\">5 mg</option>\n        <option value=\"5mg\">10 mg</option>\n        <option value=\"20mg\">20 mg</option>\n      </select>\n    </div>\n    <div class=\"col-md-1\">\n      <select>\n        <option value=\"1d\">once daily</option>\n        <option value=\"2d\">Twice daily</option>\n        <option value=\"3d\">Thee times daily</option>\n      </select>\n    </div>\n    <div class=\"col-md-1\">\n      <input type=\"text\" name=\"fname\" value=\"2\">\n    </div>\n    <div class=\"col-md-1\">\n      <input type=\"text\" name=\"fname\" value=\"3\">\n    </div>\n    <div class=\"col-md-1\">\n      <select>\n        <option value=\"d\">Days</option>\n        <option value=\"h\">months</option>\n        <option value=\"w\">Weeks</option>\n      </select>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-drugdosagelist',\n  templateUrl: './drugdosagelist.component.html',\n  styleUrls: ['./drugdosagelist.component.css']\n})\nexport class DrugdosagelistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"row col-md-1\">\n      <label>Drug</label>\n    </div>\n    <div class=\"col-md-1\">\n      <label>Strength</label>\n    </div>\n    <div class=\"col-md-1\">\n      <label>Per</label>\n    </div>\n    <div class=\"col-md-1\">\n      <label>Quantity</label>\n    </div>\n    <div class=\"col-md-2\">\n      <label>Duration</label>\n    </div>\n    <div class=\"col-md-2\">\n\n    </div>\n</div>\n<app-drugdosage></app-drugdosage>\n<app-drugdosage></app-drugdosage>\n<app-drugdosage></app-drugdosage>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-drugsearch',\n  templateUrl: './drugsearch.component.html',\n  styleUrls: ['./drugsearch.component.css']\n})\nexport class DrugsearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\n  <label for=\"drug\">Drug</label>\n  <input type=\"text\" id=\"drug\" name=\"drug\" placeholder=\"Drug to search\">\n</div>\n","\n\nexport class Strength {\n  strengthId: number;\n  strengthUnit: {\n    unitName:string;\n  };\n  strengthAmount: number;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'drugPackagePipe'\n})\nexport class DrugPackagePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value.length ===1)\n    {\n      return null;\n    }\n    let filter = args;\n    return value.filter(data=>\n      data.drug.brandName.indexOf(filter) !== -1);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'drugPipe'\n})\nexport class DrugPipePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value.length === 1) {\n      return null;\n    }\n    let filter = args;\n    return value.filter(data=>\n      data.brandName.indexOf(filter) !== -1);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'drugFilter'\n})\nexport class FilterPipePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value.length ===1)\n    {\n        return null;\n    }\n      let filter = args;\n      return value.filter(data=>\n      data.baseDrugName && data.baseDrugName.indexOf(filter) !== -1);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'patientAdminFilter'\n})\nexport class PatientAdminFilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (args.length ===1 || args.length==0)\n    {\n      return value;\n    }\n    let filter:string = args;\n    filter = filter.toUpperCase();\n    return value.filter(data=>\n      data.name.toUpperCase().indexOf(filter) !== -1 ||\n      filter.length ===0\n    );\n  }\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'patient'\n})\nexport class PatientPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (args.length ===1 || args.length==0)\n    {\n      return value;\n    }\n    let filter = args;\n    return value.filter(data=>\n      data.patient.firstname.indexOf(filter) !== -1 ||\n      data.patient.lastname.indexOf(filter) !== -1 ||\n      filter.length ===0\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {POServiceService} from \"../services/poservice.service\";\nimport {Router} from \"@angular/router\";\nimport {PODetail} from \"../purchseorder/purchseorder.component\";\n\n@Component({\n  selector: 'app-grn',\n  templateUrl: './grn.component.html',\n  styleUrls: ['./grn.component.css']\n})\nexport class GrnComponent implements OnInit {\n\n  po:any;\n  poDetail ={\n    supplierInvoice: \"1\",\n    expectedRecieveDate:'',\n    details:[]\n  };\n  constructor(private poService:POServiceService, private  router:Router) {\n      this.po = this.poService.selectedPO;\n  }\n\n  ngOnInit() {\n      this.po = this.poService.selectedPO;\n      this.initPo(this.po.purchaseOrderNo)\n\n\n  }\n\n  onSave()\n  {\n    this.poService.saveGRN(this.poDetail).subscribe(\n      data =>{\n        //this.poDetail =[];\n        this.router.navigate(['po']);\n      }\n    );\n  }\n\n  onCancel()\n  {\n    this.router.navigate(['/supplier']);\n  }\n\n  loadPo(event, value)\n  {\n    if (event.keyCode == 13)\n    {\n        this.initPo(value);\n    }\n  }\n\n\n    private initPo(value) {\n// Check for the PO\n        this.poService.loadPO(value).subscribe(\n            data => {\n                this.poDetail = data;\n            }\n        );\n    }\n}\n","<div class=\"container\">\n  <h1>Goods Receiving</h1>\n  <div class=\"row\">\n    <div class=\"col-lg-2\">\n      <label>PO Number</label>\n    </div>\n    <div class=\"col-lg-2\">\n      <input type=\"text\" #pot (keyup)=\"loadPo($event,pot.value)\" [(ngModel)]='po.purchaseOrderNo'/>\n    </div>\n    <div class=\"col-lg-6\">\n      <b>Supplier :</b>{{po.itemSupplier.supplierName}},{{po.itemSupplier.supplierAddress}}\n    </div>\n  </div>\n  <br/>\n  <div class=\"row\">\n    <div class=\"col-lg-2\">\n      <label> Supplier Invoice </label>\n    </div>\n    <div class=\"col-lg-2\">\n      <input type=\"text\" [(ngModel)]='poDetail.supplierInvoice' required id=\"supplierInvoice\" name=\"supplierInvoice\">\n    </div>\n    <div class=\"col-lg-6\">Date :\n      <input type=\"date\" [ngModel]=\"poDetail.expectedRecieveDate|date:'yyyy-MM-dd'\" required id=\"expectedRecieveDate\"\n             (ngModelChange)=\"poDetail.expectedRecieveDate = $event\"></div>\n  </div>\n  <br/>\n  <table class=\"table table-responsive\">\n    <thead>\n    <tr>\n      <th>Item</th>\n      <th>Item bought Price</th>\n      <th>Ordered Qty.</th>\n      <th>Balance Qty.</th>\n      <th>Received Qty.</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let x of poDetail.details\">\n      <td>{{x.itemName}}</td>\n      <td><input type=\"text\" [(ngModel)]='x.itemBoughtPrice'></td>\n      <td>{{x.orderedQty}}</td>\n      <td>{{x.balanceQty}}</td>\n      <td><input type=\"text\" [(ngModel)]='x.receivedQty'></td>\n    </tr>\n    </tbody>\n  </table>\n  <div>\n    <button type=\"button\" class=\"button btn-primary\" (click)=\"onSave()\">Save</button>\n    <button type=\"button\" class=\"button btn-primary\" (click)=\"onCancel()\">Cancel</button>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {POServiceService} from \"../services/poservice.service\";\nimport {AdminService} from \"../services/admin.service\";\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n\n  grnsToPay = [];\n  paymentMethods = [];\n  grnToSave:any;\n\n  constructor(private poService: POServiceService, private  router: Router, private adminService: AdminService) {\n  }\n\n\n  ngOnInit() {\n    this.adminService.loadPaymentMethod().subscribe(\n      data => {\n        this.paymentMethods = data;\n      }\n    );\n  }\n\n  loadGRN(event, value) {\n    if (event.keyCode == 13) {\n      this.poService.loadGRN(value).subscribe(\n        data => {\n          this.grnsToPay = data;\n        }\n      );\n    }\n  }\n\n  makePay(index) {\n    this.grnToSave = this.grnsToPay[index];\n    this.poService.savePayment(this.grnToSave).subscribe(\n      data => {\n        this.grnsToPay = data;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h1>Payment for Goods Receiving</h1>\n  <div class=\"row\">\n    <div class=\"col-lg-2\">\n      <label>Supplier Invoice number</label>\n    </div>\n    <div class=\"col-lg-2\">\n      <input type=\"text\" (keyup)=\"loadGRN($event,grn.value)\" #grn/>\n    </div>\n  </div>\n  <br/>\n  <table class=\"table table-responsive\" border=\"3\">\n    <thead>\n    <tr>\n      <th> Supplier</th>\n      <th>GRN No</th>\n      <th>Supplier Invoice</th>\n      <th>GRN Date</th>\n      <th>Status</th>\n      <th>Bought Items</th>\n      <th>Total amount</th>\n      <th> Paid date</th>\n      <th>Amount Paid</th>\n      <th> Payment method</th>\n      <th> Cheque/voucher details</th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let x of grnsToPay let i = index\">\n      <th> {{x.supplierName}}</th>\n      <td>{{x.drnid}}</td>\n      <td>{{x.supplierInvoice}}</td>\n      <td>{{x.grnDate}}</td>\n      <td>{{x.grnStatus}}</td>\n      <td>\n        <ul>\n          <li *ngFor=\"let obj of x.poForGrnDetailDTO \">{{obj.itemName}}</li>\n        </ul>\n      </td>\n      <td>{{x.totalAmount}}</td>\n      <td>\n        <input type=\"date\" [(ngModel)]='x.paymentDetails.paymentDate' required id=\"paymentDate\" name=\"paymentDate\">\n      </td>\n      <td><input type=\"text\" [(ngModel)]='x.paymentDetails.amount' required id=\"amount\" name=\"amount\"></td>\n      <td>\n        <select name=\"paymentMethod\" [(ngModel)]=\"x.paymentDetails.paymentMethod\">\n          <option *ngFor=\"let paymentMethod of paymentMethods\" [value]=\"paymentMethod\">\n            {{paymentMethod}}\n          </option>\n        </select>\n      </td>\n      <td><input type=\"text\" [(ngModel)]='x.paymentDetails.paymentMethodDetails' id=\"paymentMethodDetails\"\n                 name=\"paymentMethodDetails\"></td>\n      <button type=\"button\" class=\"button btn-primary\" (click)=\"makePay(i)\">Pay</button>\n    </tr>\n    </tbody>\n  </table>\n  <!--<div>-->\n  <!--<button type=\"button\" class=\"button btn-primary\" (click)=\"onSave()\">Save</button>-->\n  <!--<button type=\"button\" class=\"button btn-primary\" (click)=\"onCancel()\">Cancel</button>-->\n  <!--</div>-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Prescription} from \"../../prescription-component/prescription-component.component\";\nimport {DrugServiceService} from \"../../services/drug-service.service\";\nimport {PatientServiceService} from \"../../services/patient-service.service\";\nimport {MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-prescription',\n  templateUrl: './prescription.component.html',\n  styleUrls: ['./prescription.component.css']\n})\nexport class PrescriptionComponent implements OnInit {\n\n  prescription:any = new Object();\n  prescriptionList: any[] = [];\n  currentIndex:number =-1;\n\n  constructor(private drugService:DrugServiceService,private patientService:PatientServiceService,\n              private dialogRef:MatDialogRef<PrescriptionComponent>) { }\n\n\n  ngOnInit(): void {\n    this.drugService.getPrescriptionForPatient(this.patientService.patientObject.patientId\n    ).subscribe(\n      data =>{\n        this.prescriptionList =data;\n        if(this.prescriptionList.length >0){\n          this.currentIndex = 0;\n           this.setPrescription();\n        }\n      }\n    );\n  }\n\n  setPrescription(){\n    this.prescription = this.prescriptionList[this.currentIndex];\n  }\n\n  close() {\n    this.dialogRef.close(null);\n  }\n\n  previous() {\n    if(this.currentIndex ==0){\n      alert('This is the first one');\n      return;\n    }\n    this.currentIndex--;\n    this.setPrescription();\n  }\n\n  next() {\n    if(this.currentIndex ==(this.prescriptionList.length-1)){\n      alert('This is the last one');\n      return;\n    }\n    this.currentIndex++;\n    this.setPrescription();\n  }\n}\n","<mat-dialog-content>\n  <div style=\"background:azure;color: #123456\">\n  <div>{{prescription.id}}</div>\n  <br/>\n  <div>{{prescription.date}}</div>\n  <br/>\n  <br/>\n  <div>Notes : {{prescription.notes}}</div>\n  <br/>\n\n  <table class=\"table-bordered\" border=\"1\">\n    <tr *ngFor=\"let obj of prescription.prescriptionDetails\">\n      <td>{{obj.drugPackage.drug.brandName}}\n        ,{{obj.drugPackage.strength.strengthAmount + obj.drugPackage.strength.strengthUnit.unitName}}</td>\n      <td>&nbsp;</td>\n      <td>{{obj.amount}},{{obj.frequency.noofDoses}},{{obj.frequency.timeUnit}}</td>\n      <td>&nbsp;</td>\n      <td>{{obj.duration}},{{obj.intervalUnit}}</td>\n    </tr>\n  </table>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"btn-primary\" (click)=\"close()\">Close</button>\n  <button class=\"btn-primary\" (click)=\"previous()\" >Previous</button>\n  <button class=\"btn-primary\" (click)=\"next()\">Next</button>\n</mat-dialog-actions>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div><header><h1>Medsys Patient and Drug Administration </h1>\n  </header></div>\n<app-menubar></app-menubar>\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport {IssueServiceService} from \"../services/issue-service.service\";\n\n@Component({\n  selector: 'app-bill-reprint',\n  templateUrl: './bill-reprint.component.html',\n  styleUrls: ['./bill-reprint.component.css']\n})\nexport class BillReprintComponent implements OnInit {\n\n  selectedIssueNote:any;\n  total=0;\n  obj={}\n  constructor(public patientService:PatientServiceService,private route: ActivatedRoute,\n              public issueService:IssueServiceService) { }\n\n  ngOnInit() {\n    this.selectedIssueNote = this.route.params.subscribe(\n      params =>{\n        var issueId = params['issue'];\n        this.issueService.findIssue(issueId).subscribe(\n          data =>{\n            this.selectedIssueNote = data;\n            this.calculateTotal();\n          }\n        );\n      }\n    );\n  }\n\n  calculateTotal()\n  {\n    this.selectedIssueNote.issueNoteDetails.forEach(\n       item =>{\n         this.total += item.buyingQuantity * item.drugPackage.unitPrice;\n       }\n    );\n\n    this.selectedIssueNote.issueNoteServiceItems.forEach(\n      item =>{\n        this.total += item.fee;\n      }\n    );\n\n  }\n\n  print(issueNote) {\n    var printContents = document.getElementById('print-section').innerHTML;\n    let popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n        </head>\n        <body onload=\"window.print();window.close()\">\n        ${printContents}</body>\n      </html>`\n    );\n    popupWin.document.close();\n    // this.patientService.patientObject = null;\n    // this.router.navigate(['pharmacyList']);\n  }\n\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"print(obj)\">Print</button>\n<div id=\"printContent\">\n  <div style=\"font-family: 'Courier New', 'Courier New', Serif;\nfont-style: normal;\nfont-size: 10px;\ntext-align: left;\">\n    <h4> Suwapiyasa Medical Center - Indoor Pharmacy</h4>\n    <h4>Date :{{selectedIssueNote.issueDate}}</h4>\n    <br/>\n    <label>Patient :</label>\n    <label>[{{patientService.patientObject.patientId}}]-{{patientService.patientObject.firstname}}\n      ,{{patientService.patientObject.lastname}} -\n      {{patientService.patientObject.calculatedAge}} </label>\n    <br/>\n    <h4>Duplicate</h4>\n    <br/>\n    <table class=\"table table-bordered\">\n      <tr *ngFor=\"let row of selectedIssueNote.issueNoteDetails\">\n        <td>{{row.drugPackage.drug.brandName}} ({{row.buyingQuantity}} @{{row.drugPackage.unitPrice}})</td>\n        <td></td>\n        <td align=\"right\">{{row.buyingQuantity * row.drugPackage.unitPrice|number:'1.2-2'}}</td>\n      </tr>\n      <br/>\n      <tr *ngFor=\"let row of selectedIssueNote.issueNoteServiceItems\">\n        <td>{{row.medicalServItem.itemDescription}}</td>\n        <td></td>\n        <td align=\"right\">{{row.medicalServItem.unitPrice|number:'1.2-2'}}</td>\n      </tr>\n      <tr>\n        <td>Total</td>\n        <td></td>\n        <td align=\"right\">{{total|number:'1.2-2'}}</td>\n      </tr>\n    </table>\n  </div>\n\n\n  <div id=\"print-section\"  style=\"display: none\">\n    <div style=\"margin-left: 25px;\">\n      <table>\n        <tr>\n          <td colspan=\"3\">\n            <div style=\"font-family: 'Times New Roman', Times, Serif;\n          font-style: normal;\n          font-weight: bold;\n          font-size: 22px;\n          text-align: center;\">SUWAPIYASA MEDICAL CENTER\n            </div>\n          </td>\n        </tr>\n        <tr style=\"font-family: 'Times New Roman', Times, Serif;\n      font-style: normal;\n      font-size: 17px;\n      text-align: left;\">\n          <td>Dr. Janaka Abeysinghe MBBS(SL)</td>\n          <td></td>\n          <td width=\"40%\" align=\"right\">Reg. No. 17261</td>\n        </tr>\n        <tr>\n          <td>Ambagashandiya, Kiriwattuduwa</td>\n          <td></td>\n          <td align=\"right\">Tel : 0773-425881</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td align=\"right\">0778-608100</td>\n        </tr>\n      </table>\n      <hr/>\n    </div>\n    <div style=\"font-family: 'Courier New',Courier,Courier;font-style: normal;font-weight: bold;\n    font-size: 17px;margin-left: 10px;\">\n      <label>Prescription No : {{selectedIssueNote.prescriptionId}}</label><br/>\n      <label>Date :{{selectedIssueNote.issueDate | date}}</label><br/>\n      <label>[{{patientService.patientObject.patientId}}]-{{patientService.patientObject.firstname}}\n        ,{{patientService.patientObject.lastname}} -\n        {{patientService.patientObject.calculatedAge}} </label>\n      <br/>\n      <br/>\n      <h4>Duplicate</h4>\n      <br/>\n      <table class=\"table table-bordered\">\n        <tbody>\n        <tr *ngFor=\"let row of selectedIssueNote.issueNoteDetails\">\n          <td>{{row.drugPackage.drug.brandName}} ({{row.buyingQuantity}} @{{row.drugPackage.unitPrice}})</td>\n          <td></td>\n          <td align=\"right\">{{row.buyingQuantity * row.drugPackage.unitPrice|number:'1.2-2'}}</td>\n        </tr>\n        <br/>\n        <tr *ngFor=\"let row of selectedIssueNote.issueNoteServiceItems\">\n          <td>{{row.medicalServItem.itemDescription}}</td>\n          <td></td>\n          <td align=\"right\">{{row.medicalServItem.unitPrice|number:'1.2-2'}}</td>\n        </tr>\n        <tr>\n          <td>Total</td>\n          <td></td>\n          <td align=\"right\">{{total|number:'1.2-2'}}</td>\n        </tr>\n        </tbody>\n      </table>\n      <br/>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {IssueServiceService} from \"../services/issue-service.service\";\nimport {Router} from \"@angular/router\";\nimport {PrescriptionSearchCriteria} from \"../pharmacy/pharmacy.component\";\n\n@Component({\n  selector: 'app-issue-finder',\n  templateUrl: './issue-finder.component.html',\n  styleUrls: ['./issue-finder.component.css']\n})\nexport class IssueFinderComponent implements OnInit {\n\n  makeIssue: any;\n  total = 0;\n  paidAmount = 0;\n  printDisabled = true;\n  saveDisabled = false;\n  imageUrl = 'assets/images/Sign.gif';\n\n  prescriptionSearchCriteria:PrescriptionSearchCriteria = new PrescriptionSearchCriteria();\n\n  constructor(private issueService: IssueServiceService, private router: Router,) {\n\n  }\n\n  registerIssue() {\n    this.issueService.registerIssue(this.makeIssue).subscribe(\n      data => {\n        this.saveDisabled = true;\n        this.printDisabled = false;\n      }\n    )\n  }\n\n\n  calculateTotal() {\n    this.total = 0;\n    this.makeIssue.details.forEach(\n      item => {\n        this.total = this.total + item.currentIssuedQty * item.drugPackage.unitPrice\n      }\n    );\n\n    if (this.makeIssue.serviceItems != null)\n    {\n      this.makeIssue.serviceItems.forEach(\n        item => {\n          this.total += item.fee\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n    this.makeIssue = this.issueService.makeIssue;\n    if(this.makeIssue){\n      this.makeIssue.dateOfIssue = new Date();\n      this.calculateTotal();\n    }\n  }\n\n  print() {\n    var printContents = document.getElementById('print-section').innerHTML;\n    let popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n        </head>\n        <body onload=\"window.print();window.close()\">\n        ${printContents}</body>\n      </html>`\n    );\n    popupWin.document.close();\n    this.router.navigate(['pharmacyList']);\n  }\n\n  updated(event)\n  {\n    this.total = event;\n  }\n\n  getPatientName() {\n     return this.makeIssue.patient.firstname +\" \" + this.makeIssue.patient.lastname + \"(\"\n     + this.makeIssue.patient.calculatedAge +\")\";\n  }\n}\n\n\n","<div class=\"container\">\n  <label>Patient :</label>\n  <label>{{makeIssue.patient.firstname}},{{makeIssue.patient.lastname}}</label>\n  <label>Date of Issue</label>\n  <input type=\"date\" [ngModel]=\"makeIssue.dateOfIssue| date:'yyyy-MM-dd'\"\n         (ngModelChange)=\"prescriptionSearchCriteria.toDate = $event\"/>\n  <br/>\n  <h5>Drugs </h5>\n  <table class=\"table table-bordered\">\n    <thead>\n    <tr>\n      <td>Drug & Location</td>\n      <td>Dose and Duration</td>\n      <td>Unit Price</td>\n      <td>Available Qty.</td>\n      <td>Prescribed Qty</td>\n      <td>Already Issued</td>\n      <td>Issued Qty</td>\n      <td>Price</td>\n      <td>Balance</td>\n    </tr>\n    </thead>\n    <tr *ngFor=\"let row of makeIssue.details\">\n      <td>{{row.drugPackage.drug.brandName}}- {{row.drugPackage.drug.location}}</td>\n      <td>{{row.frequency}}-{{row.dose}}-{{row.duration}}</td>\n      <td>{{row.drugPackage.unitPrice | number:'1.2-2'}}</td>\n      <td>{{row.drugPackage.quantity | number:'1.2-2'}}</td>\n      <td>{{row.prescribedQty | number:'1.2-2'}}</td>\n      <td>{{row.issuedQty | number:'1.2-2'}}</td>\n      <td><input type=\"number\" (keyup)=\"calculateTotal()\" [(ngModel)]=\"row.currentIssuedQty\"\n                 [disabled]=\"saveDisabled\"></td>\n      <td>{{(row.currentIssuedQty * row.drugPackage.unitPrice) | number:'1.2-2'}}</td>\n      <td>{{row.prescribedQty - ((row.currentIssuedQty + row.issuedQty))}}</td>\n    </tr>\n  </table>\n  <br/>\n\n  <div *ngIf=\"makeIssue.serviceItems !=null\">\n  <h2>Services</h2>\n    <table class=\"table table-bordered\">\n      <thead>\n      <tr>\n        <th>Service</th>\n        <th>Fee</th>\n        <th>External Reference</th>\n      </tr>\n      </thead>\n      <tr *ngFor=\"let row of makeIssue.serviceItems\">\n        <td>{{row.medicalServItem.itemDescription}}</td>\n        <td>{{row.fee| number:'1.2-2'}}</td>\n        <td>{{row.externalRef}}</td>\n      </tr>\n    </table>\n  </div>\n\n  <br/>\n  <label>Total : {{ total | number:'1.2-2'}}</label>\n  <br/>\n  <label>Amount Paid :</label><input type=\"number\" [(ngModel)]=\"paidAmount\">\n  <br/>\n  <label>Balance :{{(paidAmount - total)| number:'1.2-2'}}</label>\n  <br/>\n  <button type=\"button\" class=\"button btn-primary\" (click)=\"registerIssue()\" [disabled]=\"saveDisabled\">Make Issue\n  </button>\n</div>\n\n\n<!--&lt;!&ndash; Printing Part &ndash;&gt;-->\n\n<div id=\"printContent\" style=\"display: none\">\n  <div style=\"font-family: 'Courier New', 'Courier New', Serif;\nfont-style: normal;\nfont-size: 10px;\ntext-align: left;\">\n    <label>Suwapiyasa Medical Center - Indoor Pharmacy</label>\n    <br/>\n    <label>Date :{{makeIssue.dateOfIssue | date}}</label>\n    <table style=\"font-family: 'Courier New', 'Courier New', Serif;\nfont-style: normal;\nfont-size: 20px;\">\n      <tr *ngFor=\"let row of makeIssue.details\">\n        <td>{{row.drugPackage.drug.brandName}}</td>\n        <td>{{row.currentIssuedQty | number:'1.2-2'}} @ {{row.drugPackage.unitPrice | number:'1.2-2'}}</td>\n        <td align=\"right\">{{(row.currentIssuedQty * row.drugPackage.unitPrice)| number:'1.2-2'}}</td>\n      </tr>\n      <tr *ngFor=\"let row of makeIssue.serviceItems\">\n        <td>{{row.medicalServItem.itemDescription}}</td>\n        <td></td>\n        <td align=\"right\">{{row.fee | number:'1.2-2'}}</td>\n      </tr>\n      <tr>\n        <td>Total:</td>\n        <td></td>\n        <td>{{total | number:'1.2-2'}}</td>\n      </tr>\n      <tr>\n        <td>Cash:</td>\n        <td></td>\n        <td>{{paidAmount | number:'1.2-2'}}</td>\n      </tr>\n      <tr>\n        <td>Balance:</td>\n        <td></td>\n        <td>{{(paidAmount - total) | number:'1.2-2'}}</td>\n      </tr>\n    </table>\n  </div>\n</div>\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" [disabled]=\"printDisabled\">Print</button>\n\n<div id=\"print-section\"  style=\"display: none\">\n  <div style=\"margin-left: 25px;\">\n    <table>\n      <tr>\n        <td colspan=\"3\">\n          <div style=\"font-family: 'Times New Roman', Times, Serif;\n          font-style: normal;\n          font-weight: bold;\n          font-size: 22px;\n          text-align: center;\">SUWAPIYASA MEDICAL CENTER\n          </div>\n        </td>\n      </tr>\n      <tr style=\"font-family: 'Times New Roman', Times, Serif;\n      font-style: normal;\n      font-size: 17px;\n      text-align: left;\">\n        <td>Dr. Janaka Abeysinghe MBBS(SL)</td>\n        <td></td>\n        <td width=\"40%\" align=\"right\">Reg. No. 17261</td>\n      </tr>\n      <tr>\n        <td>Ambagashandiya, Kiriwattuduwa</td>\n        <td></td>\n        <td align=\"right\">Tel : 0773-425881</td>\n      </tr>\n      <tr>\n        <td></td>\n        <td></td>\n        <td align=\"right\">0778-608100</td>\n      </tr>\n    </table>\n    <hr/>\n  </div>\n  <div style=\"font-family: 'Courier New',Courier,Courier;font-style: normal;font-weight: bold;\n    font-size: 17px;margin-left: 10px;\">\n    <label>Prescription No : {{makeIssue.prescriptionId}}</label><br/>\n    <label>Date :{{makeIssue.dateOfIssue | date}}</label><br/>\n    <label>Patient :{{getPatientName()}}</label>\n    <br/>\n    <br/>\n    <br/>\n    <table class=\"table table-bordered\">\n      <tbody>\n      <tr *ngFor=\"let row of makeIssue.details\">\n        <td>{{row.drugPackage.drug.brandName}}</td>\n        <td>{{row.currentIssuedQty | number:'1.2-2'}} @ {{row.drugPackage.unitPrice | number:'1.2-2'}}</td>\n        <td align=\"right\">{{(row.currentIssuedQty * row.drugPackage.unitPrice)| number:'1.2-2'}}</td>\n      </tr>\n      <tr *ngFor=\"let row of makeIssue.serviceItems\">\n        <td>{{row.medicalServItem.itemDescription}}</td>\n        <td></td>\n        <td align=\"right\">{{row.fee | number:'1.2-2'}}</td>\n      </tr>\n      <tr>\n        <td>Total:</td>\n        <td></td>\n        <td>{{total | number:'1.2-2'}}</td>\n      </tr>\n      <tr>\n        <td>Cash:</td>\n        <td></td>\n        <td>{{paidAmount | number:'1.2-2'}}</td>\n      </tr>\n      <tr>\n        <td>Balance:</td>\n        <td></td>\n        <td>{{(paidAmount - total) | number:'1.2-2'}}</td>\n      </tr>\n      </tbody>\n    </table>\n    <br/>\n  </div>\n  <img [src]=\"imageUrl\"/>\n</div>\n\n<!--<br/>-->\n<!--<h5>Services</h5>-->\n<!--<tr *ngFor=\"let row of issue.issueNoteServiceItems\">-->\n<!--<td>{{row.medicalServItem.itemDescription}}</td>-->\n<!--<td>{{row.fee}}</td>-->\n<!--</tr>-->\n<!--<br/>-->\n<!--<label>Total :{{total}}</label>-->\n<!--</div>-->\n<!---->\n<!--</div>-->\n","import {Component, OnInit} from '@angular/core';\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {IssueServiceService} from \"../services/issue-service.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-issue-history',\n  templateUrl: './issue-history.component.html',\n  styleUrls: ['./issue-history.component.css']\n})\nexport class IssueHistoryComponent implements OnInit {\n\n  issueNotes = [];\n  selectedIssueNote = {\n    patient :{},\n    issueNoteDetails :[],\n    issueNoteServiceItems:[],\n    issueDate:'',\n\n  }\n\n  constructor(public patientService: PatientServiceService,\n              public issueService: IssueServiceService,\n              private router: Router) {\n\n  }\n\n  ngOnInit() {\n\n    this.findIssuesForPatient();\n  }\n\n\n  findIssuesForPatient() {\n    var patientId = this.patientService.patientObject.patientId;\n    this.issueService.findIssuesForPatient(patientId).subscribe(\n      data => {\n        this.issueNotes = data;\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n  <h2>Past Issues & Bills</h2>\n  <table class=\"table table-bordered table-responsive\">\n    <thead>\n    <th>Date of Issue</th>\n    <th>Print</th>\n    </thead>\n    <tr *ngFor=\"let obj of issueNotes\">\n      <td>{{obj.issueDate | date }}</td>\n      <td>\n        <a [routerLink]=\"['/printIssue',obj.issueNote]\">Print</a>\n      </td>\n    </tr>\n  </table>\n\n\n  <div id=\"printContent\" style=\"display: none\">\n    <div style=\"font-family: 'Courier New', 'Courier New', Serif;\nfont-style: normal;\nfont-size: 10px;\ntext-align: left;\">\n      <h4> Suwapiyasa Medical Center - Indoor Pharmacy</h4>\n      <h4>Date :{{selectedIssueNote.issueDate}}</h4>\n      <br/>\n      <label>Patient :</label>\n      <label>[{{patientService.patientObject.patientId}}]-{{patientService.patientObject.firstname}}\n        ,{{patientService.patientObject.lastname}} -\n        {{patientService.patientObject.calculatedAge}} </label>\n      <br/>\n      <h4>Duplicate</h4>\n      <br/>\n      <table class=\"table table-bordered\">\n      <tr *ngFor=\"let row of selectedIssueNote.issueNoteDetails\">\n      <td>{{row.drugPackage.drug.brandName}} ({{row.buyingQuantity}})</td>\n      <td></td>\n      <td align=\"right\">{{row.buyingQuantity *  row.drugPackage.unitPrice|number:'1.2-2'}}</td>\n      </tr>\n        <br/>\n        <tr *ngFor=\"let row of selectedIssueNote.issueNoteServiceItems\">\n          <td>{{row.medicalServItem.itemDescription}}</td>\n          <td></td>\n          <td align=\"right\">{{row.medicalServItem.unitPrice|number:'1.2-2'}}</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ItemServiceService} from \"../services/item-service.service\";\nimport {Router} from \"@angular/router\";\nimport {POServiceService} from \"../services/poservice.service\";\nimport {IssueServiceService} from \"../services/issue-service.service\";\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {Patientvisit} from \"../treatment/patientvisit\";\n\n@Component({\n  selector: 'app-issue',\n  templateUrl: './issue.component.html',\n  styleUrls: ['./issue.component.css']\n})\nexport class IssueComponent implements OnInit {\n\n  patientVisit =new Patientvisit();\n  dateOfIssue = new Date();\n  printDisabled = true;\n  total = 0;\n  paidAmount =0;\n\n  constructor(public issueService: IssueServiceService, public router: Router,\n              public patientService:PatientServiceService) {\n\n    this.calculateTotal();\n\n  }\n\n  cancelIssue()\n  {\n    this.router.navigate(['start']);\n  }\n\n  calculateTotal()\n  {\n    this.total =0;\n    this.patientVisit.medicalServices.forEach( item =>{\n      this.total += this.total + item.unitPrice;\n    });\n  }\n\n  saveIssue()\n  {\n    let makeIssue = Object();\n    makeIssue.patient = new Object();\n    makeIssue.patient.patientId = this.patientService.patientObject.patientId;\n    makeIssue.prescriptionId = -1;\n    makeIssue.dateOfIssue = this.dateOfIssue;\n    makeIssue.serviceItems = [];\n    this.patientVisit.medicalServices.forEach( item =>{\n         var detail =  {\n           medicalServItem:{itemId: item.itemId},\n           fee : item.unitPrice,\n           externalRef : item.externalRef\n         };\n         makeIssue.serviceItems.push(detail);\n      });\n     this.issueService.registerIssue(makeIssue).subscribe(\n        data =>{\n          this.printDisabled = false;\n        }\n     );\n\n  }\n\n  ngOnInit() {\n    if (!this.patientService.patientObject)\n    {\n      alert('Please select a patient first');\n      this.router.navigate(['start']);\n    }\n  }\n  print() {\n    var printContents = document.getElementById('printContent').innerHTML;\n    let popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n        </head>\n        <body onload=\"window.print();window.close()\">\n        ${printContents}</body>\n      </html>`\n    );\n    popupWin.document.close();\n    this.patientService.patientObject= null;\n    this.router.navigate(['pharmacyList']);\n  }\n\n  updated(event)\n  {\n    this.total = event;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"header\">\n    <a routerLink=\"/issueHistory\">Show Past Drug Issues</a>\n  </div>\n\n  <label>Date of Issue</label>\n  <input type=\"date\" [ngModel]=\"dateOfIssue | date:'yyyy-MM-dd'\"\n         (ngModelChange)=\"dateOfIssue = $event\"/>\n  <br/>\n\n  <app-service-component [patientVisit]=\"patientVisit\" (serviceRemoved)=\"updated($event)\"\n   (serviceAdded)=\"updated($event)\">\n   </app-service-component>\n  <label>Total : {{total | number:'1.2-2'}}</label>\n  <tr><td> <label>Amount Paid :</label><input type=\"number\" [(ngModel)]=\"paidAmount\"></td></tr>\n  <div>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveIssue()\"> Save Issue</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancelIssue()\"> Cancel Issue</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" [disabled]=\"printDisabled\">Print</button>\n  </div>\n</div>\n\n\n  <!--&lt;!&ndash; Printing Part &ndash;&gt;-->\n\n  <div id=\"printContent\" style=\"display: none\">\n    <div style=\"font-family: 'Courier New', 'Courier New', Serif;\nfont-style: normal;\nfont-size: 10px;\ntext-align: left;\">\n      <h4> Suwapiyasa Medical Center - Indoor Pharmacy</h4>\n      <h4>Date :{{dateOfIssue | date}}</h4>\n      <br/>\n      <label>Patient :</label>\n      <label>[{{patientService.patientObject.patientId}}]-{{patientService.patientObject.firstname}}\n        ,{{patientService.patientObject.lastname}} -\n        {{patientService.patientObject.calculatedAge}} </label>\n\n      <br/>\n\n      <table class=\"table table-bordered\">\n        <tr *ngFor=\"let row of patientVisit.medicalServices\">\n          <td>{{row.itemDescription}}</td>\n          <td></td>\n          <td align=\"right\">{{row.unitPrice |number:'1.2-2'}}</td>\n        </tr>\n        <tr>\n          <td><label>Total:</label></td>\n          <td></td>\n          <td>{{total | number:'1.2-2'}}</td>\n        </tr>\n        <tr>\n          <td><label>Cash:</label></td>\n          <td></td>\n          <td>{{paidAmount | number:'1.2-2'}}</td>\n        </tr>\n        <tr>\n          <td><label>Balance:</label></td>\n          <td></td>\n          <td>{{(paidAmount - total)| number:'1.2-2'}}</td>\n        </tr>\n      </table>\n    </div>\n  </div>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {AdminService} from \"../services/admin.service\";\nimport {DrugServiceService} from \"../services/drug-service.service\";\n\n@Component({\n    selector: 'app-in-out',\n    templateUrl: './in-out.component.html',\n    styleUrls: ['./in-out.component.css']\n})\nexport class InOutComponent implements OnInit {\n\n    searchCriteria: any;\n    drugList=[];\n    drugId=0;\n\n    reports =[];\n    constructor(private adminService: AdminService, private  drugServiceService:DrugServiceService) {\n        this.searchCriteria =\n          {\n            fromDate:new Date(),\n            toDate:new Date(),\n            drugId: 0\n          };\n\n      this.drugServiceService.loadDrugs(\n      ).subscribe(\n        data => {\n          this.drugList = data;\n\n          // -- Adding all\n          var d = {\n            drugId:-1,\n            brandName: \"All\"\n          };\n          this.drugList.unshift(d);\n        }\n      );\n    }\n\n\n    ngOnInit() {\n    }\n\n    doSearch() {\n\n        this.adminService.getInOutReport(this.searchCriteria).subscribe(\n            data =>{\n                this.reports = data;\n            }\n        );\n\n    }\n\n\n}\n","<div class=\"container\">\n  <div class=\"form-group\">\n    <label>From Date</label>\n    <input type=\"date\" id=\"fromDate\" [ngModel]=\"searchCriteria.fromDate |date:'yyyy-MM-dd'\"\n           (ngModelChange)=\"searchCriteria.fromDate = $event\">\n    <label>To Date</label>\n    <input type=\"date\" id=\"toDate\" [ngModel]=\"searchCriteria.toDate |date:'yyyy-MM-dd'\"\n           (ngModelChange)=\"searchCriteria.toDate = $event\">\n\n    <select name=\"baseDrug\" [(ngModel)]=\"searchCriteria.drugId\">\n      <option *ngFor=\"let bd of drugList\" [value]=\"bd.drugId\">{{bd.brandName}}</option>\n    </select>\n\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"doSearch()\">Search</button>\n  </div>\n  <hr/>\n  <h5> Report </h5>\n  <div *ngFor=\"let obj of reports\">\n    <li>{{obj.drugPackage.drug.brandName}}- {{obj.drugPackage.strength.strengthAmount}},\n      {{obj.drugPackage.strength.strengthUnit.unitName}}\n      <br/>\n      <label>Current Stock :{{obj.drugPackage.quantity}}</label>\n      <table class=\"table table-bordered\">\n      <tr>\n        <td>Date</td>\n        <td>In</td>\n        <td>Out</td>\n        <td>Supplier</td>\n      </tr>\n      <tr *ngFor=\"let row of obj.inOutDetailsList\">\n        <td>{{row.date}}</td>\n        <td>{{row.received}}</td>\n        <td>{{row.issued}}</td>\n        <td>{{row.supplierName}}</td>\n      </tr>\n    </table>\n    </li>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Itemproduct} from \"./itemproduct\";\nimport {ItemProductService} from \"../services/itemProduct.service\";\nimport {Router} from \"@angular/router\";\nimport {AdminService} from \"../services/admin.service\";\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n  itemproduct: Itemproduct = null;\n  itemproductList = [];\n  selectedRow: number;\n  setClickedRow: Function;\n  unitOfMeasureList = [];\n  itemTypeList = [];\n\n  @Input() selectedItemproduct: Itemproduct;\n\n  constructor(private itemProductService: ItemProductService, private router: Router, private adminService: AdminService) {\n    this.itemproduct = new Itemproduct();\n\n    this.setClickedRow = function (index) {\n      this.selectedRow = index;\n      if (index >= 0 && index < this.itemproductList.length) {\n        this.adminService.itemTypeObject = this.itemproductList[index];\n        this.selectedItemproduct = this.itemproductList[index];\n        this.itemproduct = this.selectedItemproduct;\n      }\n    }\n\n  }\n\n  ngOnInit() {\n    this.itemProductService.loadItemProducts(\n    ).subscribe(\n      data => {\n        this.itemproductList = data;\n\n      }\n    );\n    this.adminService.loadUnitOfMeasure(\n    ).subscribe(\n      data => {\n        this.unitOfMeasureList = data;\n\n      }\n    );\n    this.adminService.loadItemTypes(\n    ).subscribe(\n      data => {\n        this.itemTypeList = data;\n\n      }\n    );\n    this.selectedItemproduct = this.itemproductList[0];\n  }\n\n  onSubmit() {\n    this.itemProductService.saveItemProduct(this.itemproduct);\n    this.itemProductService.itemproductObject = new Itemproduct();\n    this.itemProductService.loadItemProducts(\n    ).subscribe(\n      data => {\n        this.itemproductList = data;\n      }\n    );\n  }\n\n  cancelEdit() {\n    this.selectedRow = -1;\n    this.selectedItemproduct = new Itemproduct();\n    this.itemproduct = this.selectedItemproduct;\n  }\n}\n","<div class=\"container\">\n  <header>\n    <h2>Product details</h2>\n  </header>\n  <nav>\n    <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n      <tr>\n        <th width=\"10%\">Id</th>\n        <th width=\"20%\">Description</th>\n        <th width=\"20%\">Type</th>\n        <th width=\"10%\">Unit Of measure</th>\n        <th width=\"10%\">Minimum order level</th>\n        <th width=\"20%\">Quantity</th>\n        <th width=\"10%\">Unit price</th>\n      </tr>\n\n      <tr *ngFor=\"let obj of itemproductList; let i = index\" (click)=\"setClickedRow(i)\" [class.active]=\"i == selectedRow\">\n        <td>{{obj.itemId}}</td>\n        <td>\n          {{obj.itemDescription}}\n        </td>\n        <td>{{obj.productType.itemtype}}</td>\n        <td>{{obj.unitOfMeasure.unitOfMeasure}}</td>\n        <td>{{obj.minOrderLevel}}</td>\n        <td>{{obj.quantity}}</td>\n        <td>{{obj.unitPrice}}</td>\n      </tr>\n    </table>\n  </nav>\n\n  <article>\n    <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" ngClass=\"itemproduct\">\n      <h3> Edit Item details </h3>\n      <table width=\"100%\">\n        <tr>\n          <th width=\"30%\"></th>\n          <th width=\"100%\"></th>\n          <th width=\"1%\"> </th>\n        </tr>\n        <tr>\n          <td>\n            <label for=\"itemDescription\">Description : </label>\n          </td>\n          <td><input type=\"text\" id=\"itemDescription\" name=\"itemDescription\" required [(ngModel)]=\"itemproduct.itemDescription\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <label>Item Type : </label>\n          </td>\n          <td>\n            <select name=\"productType\" [(ngModel)]=\"itemproduct.productType.itemTypeId\">\n              <option *ngFor=\"let productType of itemTypeList\" [value]=\"productType.itemTypeId\">{{productType.itemtype}}</option>\n            </select>\n            </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <label>Unit of Measure : </label>\n          </td>\n          <td>\n            <select name=\"unitOfMeasure\" [(ngModel)]=\"itemproduct.unitOfMeasure.unitOfMeasureId\">\n              <option *ngFor=\"let unitOfMeasure of unitOfMeasureList\" [value]=\"unitOfMeasure.unitOfMeasureId\">{{unitOfMeasure.unitOfMeasure}}</option>\n            </select>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <label for=\"minOrderLevel\">Minimum Order level : </label>\n          </td>\n          <td><input type=\"text\" id=\"minOrderLevel\" name=\"minOrderLevel\"  [(ngModel)]=\"itemproduct.minOrderLevel\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <label for=\"minOrderLevel\">Item Price : </label>\n          </td>\n          <td><input type=\"text\" id=\"unitPrice\" name=\"unitPrice\"  [(ngModel)]=\"itemproduct.unitPrice\"/>\n          </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n          </td>\n          <td><button class=\"btn-primary\" (click)=\"cancelEdit()\">Cancel</button>\n          </td>\n          <td></td>\n        </tr>\n\n      </table>\n    </form>\n\n  </article>\n\n</div>\n","import {UnitOfMeasure} from \"./unit-of-measure\";\nimport {ProductType} from \"./product-type\";\n\nexport class Itemproduct {\n\n  itemId: number;\n  productType: ProductType;\n  itemDescription:string;\n  unitOfMeasure:UnitOfMeasure;\n  minOrderLevel:number;\n  quantity:number;\n  unitPrice:number;\n\n  constructor(){\n    this.productType = new ProductType();\n    this.unitOfMeasure = new UnitOfMeasure();\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Itemtype} from \"./itemtype\";\nimport {Router} from \"@angular/router\";\nimport {AdminService} from \"../services/admin.service\";\n\n@Component({\n  selector: 'app-itemtype',\n  templateUrl: './itemtype.component.html',\n  styleUrls: ['./itemtype.component.css']\n})\nexport class ItemtypeComponent implements OnInit {\n  itemType: Itemtype = null;\n  itemTypeList = [];\n  selectedRow: number;\n  setClickedRow: Function;\n\n  @Input() selectedItemType: Itemtype;\n\n  constructor(private adminService: AdminService, private router: Router) {\n    this.itemType = new Itemtype();\n\n    this.setClickedRow = function (index) {\n      this.selectedRow = index;\n      if (index >= 0 && index < this.itemTypeList.length) {\n        this.adminService.itemTypeObject = this.itemTypeList[index];\n        this.selectedItemType = this.itemTypeList[index];\n        this.itemType = this.selectedItemType;\n      }\n    }\n\n  }\n\n  ngOnInit() {\n    this.adminService.loadItemTypes(\n    ).subscribe(\n      data => {\n        this.itemTypeList = data;\n\n      }\n    );\n    this.selectedItemType = this.itemTypeList[0];\n  }\n\n  onSubmit() {\n    this.adminService.saveItemType(this.itemType);\n    this.adminService.itemTypeObject = new Itemtype();\n    this.adminService.loadItemTypes(\n    ).subscribe(\n      data => {\n        this.itemTypeList = data;\n      }\n    );\n  }\n\n  cancelEdit(){\n    this.selectedRow = -1;\n    this.selectedItemType = new Itemtype();\n    this.itemType = this.selectedItemType;\n  }\n}\n","<div class=\"container\">\n  <header>\n    <h2>Item Types</h2>\n  </header>\n  <nav>\n    <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n      <tr>\n        <th width=\"40%\">Id</th>\n        <th width=\"60%\">Name</th>\n        <th width=\"1%\"></th>\n      </tr>\n\n      <tr *ngFor=\"let obj of itemTypeList; let i = index\" (click)=\"setClickedRow(i)\" [class.active]=\"i == selectedRow\">\n        <td>{{obj.itemTypeId}}</td>\n        <td>\n          {{obj.itemtype}}\n        </td>\n        <td></td>\n      </tr>\n    </table>\n  </nav>\n\n  <article>\n    <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" ngClass=\"itemType\">\n      <h3> Edit supplier details </h3>\n      <table width=\"100%\">\n        <tr>\n          <th width=\"30%\"></th>\n          <th width=\"100%\"></th>\n          <th width=\"1%\"> </th>\n        </tr>\n        <tr>\n          <td>\n            <label for=\"itemType\">Names : </label>\n          </td>\n          <td><input type=\"text\" id=\"itemType\" name=\"itemType\" required [(ngModel)]=\"itemType.itemtype\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n          </td>\n          <td><button class=\"btn-primary\" (click)=\"cancelEdit()\">Cancel</button>\n          </td>\n          <td></td>\n        </tr>\n\n\n      </table>\n    </form>\n\n  </article>\n\n\n\n</div>\n","export class Itemtype {\n  public itemTypeId: number;\n  public itemtype: string;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ItemProductService} from \"../../services/itemProduct.service\";\n\n@Component({\n    selector: 'app-medical-service-component',\n    templateUrl: './medical-service-component.component.html',\n    styleUrls: ['./medical-service-component.component.css']\n})\nexport class MedicalServiceComponentComponent implements OnInit {\n\n    medicalServices = [];\n    item: any;\n    productTypes =[];\n    selectedRow:number = -1;\n\n    constructor(private prodTypeService:ItemProductService) {\n       this.onNew();\n    }\n\n    onNew()\n    {\n        this.item = new Object();\n        this.item.productType= new Object();\n    }\n\n    cancelEdit() {\n       this.onNew();\n    }\n\n    setClickedRow(i)\n    {\n        this.selectedRow = i;\n        this.item = Object.assign({},this.medicalServices[i]);\n    }\n\n    onSubmit() {\n        this.prodTypeService.saveMedicalService(this.item).subscribe(\n            data =>{\n                this.medicalServices =data;\n                this.onNew();\n            }\n        );\n    }\n\n    ngOnInit() {\n        this.prodTypeService.getProductTypes().subscribe(\n          data =>{this.productTypes =data;}\n        );\n\n        this.prodTypeService.getAllMedicalServices().subscribe(\n            data =>{\n                this.medicalServices = data;\n            }\n        );\n    }\n\n}\n","<div class=\"container\">\n  <header>\n    <h2>Medical Services</h2>\n  </header>\n  <nav>\n    <table border=\"2\" width=\"100%\"  class=\"table table-hover\">\n      <tr>\n        <th width=\"10%\">Id</th>\n        <th width=\"20%\">Product Type</th>\n        <th width=\"30%\">Description</th>\n        <th width=\"10%\">Unit Price</th>\n      </tr>\n\n      <tr *ngFor=\"let obj of medicalServices; let i = index\" (click)=\"setClickedRow(i)\"\n          [class.active]=\"i == selectedRow\">\n        <td>{{obj.itemId}}</td>\n        <td>\n          {{obj.productType.itemtype}}\n        </td>\n        <td>{{obj.itemDescription}}</td>\n        <td>{{obj.unitPrice}}</td>\n      </tr>\n    </table >\n  </nav>\n  <article>\n    <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n      <h3> Edit Service details </h3>\n      <table width=\"100%\">\n        <tr>\n          <th width=\"30%\"></th>\n          <th width=\"100%\"></th>\n          <th width=\"1%\"> </th>\n        </tr>\n        <tr>\n          <td><label>Product Type</label></td>\n          <td>\n            <select name=\"productType\" [(ngModel)]=\"item.productType.itemTypeId\">\n              <option *ngFor=\"let productType of productTypes\" [value]=\"productType.itemTypeId\">{{productType.itemtype}}</option>\n            </select>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <label for=\"desc\">Description : </label>\n          </td>\n          <td><input type=\"text\" id=\"desc\" name=\"desc\" required [(ngModel)]=\"item.itemDescription\"/>\n          </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <label for=\"unitPrice\">Unit Price : </label>\n          </td>\n          <td><input type=\"number\" id=\"unitPrice\" name=\"unitPrice\" [(ngModel)]=\"item.unitPrice\" />\n          </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n          </td>\n          <td><button type='button' class=\"btn btn-primary\" (click)=\"cancelEdit()\">Cancel</button>\n          </td>\n        </tr>\n      </table>\n    </form>\n  </article>\n</div>\n\n","export class ProductType {\n  itemTypeId: number;\n  itemtype: string;\n}\n","export class UnitOfMeasure {\n  unitOfMeasureId: number;\n  unitOfMeasure: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {LoginService} from \"../services/login-service.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login-component',\n  templateUrl: './login-component.component.html',\n  styleUrls: ['./login-component.component.css']\n})\nexport class LoginComponentComponent{\n\n   model:any\n\n  constructor(private loginService:LoginService,private router:Router) {\n        this.model = new Object();\n  }\n\n\n  onSubmit() {\n    this.loginService.login(this.model).subscribe(\n      data =>{\n        if(data.id < 0){\n          alert('Incorrect Login');\n          return;\n        }\n        this.loginService.loggedInUser = data;\n        this.loginService.loggedIn = true;\n        if (data.userType ===1)\n        {\n          this.router.navigate(['/start']);\n        } else {\n           this.router.navigate(['/pharmacyList']);\n        }\n\n      },error => alert(error)\n    );\n  }\n\n}\n","<div class=\"loginmodal-container\">\n  <h1>MedSys Login </h1><br>\n  <form name=\"loginForm\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\">\n    <input type=\"text\" name=\"username\" placeholder=\"Username\"\n           [(ngModel)]=\"model.username\" #username=\"ngModel\" required>\n    <div *ngIf=\"f.submitted && !username.valid\" class=\"help-block\">Username is required</div>\n    <input type=\"password\" name=\"password\" placeholder=\"Password\"\n           [(ngModel)]=\"model.password\" #password=\"ngModel\" required>\n    <div *ngIf=\"f.submitted && !password.valid\" class=\"help-block\">Password is required</div>\n    <input type=\"submit\" name=\"login\" class=\"login loginmodal-submit\" value=\"Login\">\n  </form>\n\n  <div class=\"login-help\">\n    Please type in your username and password\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AdminService} from \"./services/admin.service\";\nimport {LoginService} from \"./services/login-service.service\";\nimport {PatientServiceService} from \"./services/patient-service.service\";\nimport {Patient} from \"./patient\";\n\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.css']\n})\nexport class MenubarComponent implements OnInit {\n\n  userType:number;\n  supplierList = [];\n\n  constructor(private adminService: AdminService, private router: Router, private loginService:LoginService,\n              private patientService:PatientServiceService) {\n    this.userType = this.loginService.loggedInUser.userType;\n  }\n\n  ngOnInit() {\n    this.userType = this.loginService.loggedInUser.userType;\n  }\n\n  newPatient()\n  {\n    this.patientService.patientObject = new Patient();\n    this.router.navigate([\"/patientsave\"]);\n\n  }\n\n  loadSupplier() {\n    // this.adminService.loadSuppliers(\n    // ).subscribe(\n    //   data => {\n    //     this.supplierList = data;\n    //   }\n    // );\n    this.router.navigate([\"/supplier\"]);\n  }\n\n  loadItemType(){\n    this.router.navigate([\"/itemtype\"]);\n  }\n\n  loadItem(){\n    this.router.navigate([\"/item\"]);\n  }\n}\n","<div class=\"menu-bar\">\n<!--  <div>-->\n<!--    <button>Admin</button>-->\n<!--    <div class=\"sub-menu-item\">-->\n<!--      <a routerLink=\"supplier\">Suppliers</a>-->\n<!--      <a routerLink=\"patientAdmin\">Customers</a>-->\n<!--      <a routerLink=\"medServiceItem\">Medical services</a>-->\n<!--      <a routerLink=\"strength\">Strength</a>-->\n<!--      <a [routerLink]='[\"drugAdmin\"]'>Drug Admin</a>-->\n<!--      <a [routerLink]='[\"baseDrugAdmin\"]'>Base Drug Admin</a>-->\n<!--      <a [routerLink]='[\"drugPackageAdmin\"]'>Drug Package Admin</a>-->\n<!--      &lt;!&ndash;<a routerLink=\"itemtype\">Item type</a>&ndash;&gt;-->\n<!--    </div>-->\n<!--  </div>-->\n\n<!--  <div>-->\n<!--    <button>Pharmacy</button>-->\n<!--    <div class=\"sub-menu-item\">-->\n<!--      <a routerLink=\"pharmacyList\" class=\"test\">Prescription List</a>-->\n<!--      <a routerLink=\"serviceIssue\">Create Service Issue</a>-->\n<!--      <a routerLink=\"grn\">Goods Receiving</a>-->\n<!--      <a routerLink=\"issue\">Issues</a>-->\n<!--      <a routerLink=\"payment\">Make payment</a>-->\n<!--      <a routerLink=\"returnout\">Return out</a>-->\n<!--      <a routerLink=\"po\">Pending PO</a>-->\n\n<!--    </div>-->\n<!--  </div>-->\n\n\n\n\n  <div>\n    <button>Patient</button>\n    <div class=\"sub-menu-item\">\n      <a routerLink=\"start\">Patient Search</a>\n      <a [routerLink]='[\"patientAdmin\"]'>Patient Administration</a>\n      <a (click)=\"newPatient()\">New Patient</a>\n\n    </div>\n  </div>\n\n  <div>\n    <button>Treatment</button>\n    <div class=\"sub-menu-item\">\n      <a routerLink=\"dentalTrt\">Treatment Items</a>\n      <a routerLink=\"dentalPatList\">Patient Treatments</a>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {PatientServiceService} from \"./services/patient-service.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent  {\n\n  constructor(private patService:PatientServiceService) { }\n\n  newPat()\n  {\n    this.patService.clearPatient();\n  }\n\n}\n","<!--<nav class=\"navbar navbar-default\">-->\n  <!--<div class=\"container-fluid\">-->\n    <!--&lt;!&ndash; Brand and toggle get grouped for better mobile display &ndash;&gt;-->\n    <!--<div class=\"navbar-header\">-->\n      <!--<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">-->\n        <!--<span class=\"sr-only\">Toggle navigation</span>-->\n        <!--<span class=\"icon-bar\"></span>-->\n        <!--<span class=\"icon-bar\"></span>-->\n        <!--<span class=\"icon-bar\"></span>-->\n      <!--</button>-->\n      <!--<div class=\"navbar-brand\"> <a [routerLink]='[\"\"]'>Patient Search</a></div>-->\n      <!--<div class=\"navbar-brand\"> <a [routerLink]='[\"patientvisit\"]'>Treatment</a></div>-->\n      <!--<div class=\"navbar-brand\"> <a [routerLink]='[\"printReceipt\"]'>Print Receipt</a></div>-->\n      <!--<div class=\"navbar-brand\"> <a [routerLink]='[\"patientAdmin\"]'>Patient Administration</a></div>-->\n      <!--<div class=\"navbar-brand\"> <a [routerLink]='[\"drugAdmin\"]'>Drug admin</a></div>-->\n    <!--</div>-->\n  <!--</div>&lt;!&ndash; /.container-fluid &ndash;&gt;-->\n<!--</nav>-->\n\n<div class=\"dropdown\">\n  <button class=\"dropbtn\">Patient Search</button>\n  <div class=\"dropdown-content\">\n    <a routerLink=\"\">Patient Search</a>\n  </div>\n</div>\n\n<div class=\"dropdown\">\n  <button class=\"dropbtn\">Treatment</button>\n  <div class=\"dropdown-content\">\n    <a [routerLink]='[\"patientvisit\"]'>Treatment</a>\n  </div>\n</div>\n\n<div class=\"dropdown\">\n  <button class=\"dropbtn\">Print Receipt</button>\n  <div class=\"dropdown-content\">\n    <a [routerLink]='[\"printReceipt\"]'>Print Receipt</a>\n  </div>\n</div>\n\n<div class=\"dropdown\">\n  <button class=\"dropbtn\">Patient Administration</button>\n  <div class=\"dropdown-content\">\n    <a [routerLink]='[\"patientAdmin\"]'>Patient Administration</a>\n  </div>\n</div>\n\n<div class=\"dropdown\">\n  <button class=\"dropbtn\">Drug Administration</button>\n  <div class=\"dropdown-content\">\n    <a [routerLink]='[\"drugAdmin\"]'>Drug Admin</a>\n    <a [routerLink]='[\"baseDrugAdmin\"]'>Base Drug Admin</a>\n    <a [routerLink]='[\"drugPackageAdmin\"]'>Drug Package Admin</a>\n  </div>\n</div>\n","import {Component, HostListener} from '@angular/core';\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {Data, Router} from \"@angular/router\";\nimport {Patient} from \"../patient\";\nimport {LoginService} from \"../services/login-service.service\";\n\n\n@Component({\n  selector: 'app-patient-search',\n  templateUrl: './patient-search.component.html',\n  styleUrls: ['./patient-search.component.css']\n})\nexport class PatientSearchComponent {\n\n  nic: string;\n  phone:string;\n  patNo:string;\n  patIndex:string;\n\n  patientList = []\n  filterPatList =[];\n\n  constructor(private patientService: PatientServiceService,private router:Router, private loginService:LoginService) {\n\n  }\n\n  onKeyPatNo(event:any)\n  {\n    if (event.keyCode == 13) {\n      this.patientService.getByPatNo(this.patNo).subscribe(\n          data =>{\n            //this.loadPrescription(data);\n            this.loadPlans(data);\n          }\n      );\n\n    }\n  }\n\n  private loadPlans(data){\n    if(data != null){\n      this.patientService.patientObject = data;\n      this.router.navigate([\"dentalPatList\"]);\n    } else{\n      alert(\" No patient found\");\n    }\n\n  }\n\n  private loadPrescription(data) {\n    this.patientService.patientObject = data;\n    if (this.loginService.loggedInUser.userType ===1)\n    {\n      this.prepareForPrescription();\n      this.router.navigate([\"patientvisit/treatment\"]);\n    } else\n    {\n      this.router.navigate([\"serviceIssue\"]);\n    }\n  }\n\n  newPatient()\n  {\n    this.patientService.clearPatient();\n    this.router.navigate([\"patientsave\"]);\n  }\n\n  onKeyPhoneNumber(event:any)\n  {\n    let value  = event.target.value;\n\n    if (event.keyCode == 13) {\n      this.patientService.getByPhoneNo(this.phone).subscribe(\n          data =>{\n             this.loadPlans(data);\n          }\n      );\n    }\n  }\n\n  onKey(event: any) {\n    if (event.keyCode == 13) {\n      this.patientService.getByNIC(this.nic).subscribe(\n          data =>{\n             this.loadPlans(data);\n          }\n      );\n\n    }\n    else if (this.nic.length == 2) {\n      this.doSearch();\n    } else if (this.nic.length < 2) {\n      this.patientList = [];\n    }\n  }\n\n  doSearch() {\n    this.patientService.searchByNIC(this.nic).subscribe(\n      data => {\n        this.patientList = data;\n      }\n    );\n  }\n\n  searchByPhone() {\n        this.patientService.searchByPhone(this.phone).subscribe(\n            data => {\n                this.patientList = data;\n            }\n        );\n    }\n\n    searchByName(name) {\n        this.patientService.findByName(name).subscribe(\n            data => {\n                this.patientList = data;\n            }\n        );\n    }\n\n    onKeyName(event: any)\n    {\n      let value  = event.target.value;\n        if (!event.key) {\n            this.patientService.getByPatNo(this.patIndex).subscribe(\n                data =>{\n                    this.loadPlans(data);\n                }\n            );\n        }\n        else if (value.length == 4) {\n            this.patientService.findByName(value).subscribe(\n                data =>{\n                    this.patientList = data;\n                    this.filterPatList = data;\n                }\n            );\n        } else if (value.length < 4) {\n            this.patientList = [];\n            this.filterPatList = [];\n        } else{\n\n        }\n    }\n\n    prepareForPrescription()\n    {\n      this.patientService.newPatientVisit();\n    }\n\n  nameSelected() {\n    alert(\"hell\");\n  }\n}\n","<div class=\"container\">\n<br/>\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <label>NIC :</label>\n    </div>\n    <div class=\"col-md-3\">\n      <input list='xyz' [(ngModel)]=\"nic\" (keyup)=\"onKey($event)\">\n      <datalist id='xyz'>\n        <option *ngFor=\"let pat of patientList\" value=\"{{pat.nic}}\">{{pat.nic}},{{pat.firstname}}</option>\n      </datalist>\n    </div>\n  </div>\n  <br/>\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <label>Pat No: </label>\n    </div>\n    <div class=\"col-md-3\">\n      <input type=\"text\" id=\"patNo\" name=\"patNo\" [(ngModel)]=\"patNo\" (keyup)=\"onKeyPatNo($event)\"/>\n    </div>\n  </div>\n  <br/>\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <label>Phone No :</label>\n    </div>\n    <div class=\"col-md-3\">\n      <input type='text' [(ngModel)]=\"phone\" (keyup)=\"onKeyPhoneNumber($event)\">\n    </div>\n  </div>\n  <br/>\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <label>Name :</label>\n    </div>\n<!--    <div class=\"col-md-3\">-->\n<!--      <input #ctr list='name' [(ngModel)]=\"patIndex\" (keyup)=\"onKeyName($event,ctr.value)\">-->\n<!--      <datalist id='name'>-->\n<!--        <option   *ngFor=\"let pat of patientList; let i=index\" value=\"{{i}}\">{{pat.firstname}},{{pat.lastname}}</option>-->\n<!--      </datalist>-->\n<!--    </div>-->\n\n    <div class=\"col-md-3\">\n    <input type=\"text\"  list=\"codes\" [(ngModel)]=\"patIndex\" (keyup)=\"onKeyName($event)\">\n    <datalist id=\"codes\">\n      <option *ngFor=\"let pat of filterPatList;let i=index\" [value]=\"pat.id\" >{{pat.firstname}},{{pat.lastname}}</option>\n    </datalist>\n    </div>\n  </div>\n\n  <br/>\n  <div class=\"form-group\">\n    <button class=\"btn-primary\" (click)=\"newPatient()\">New Patient</button>\n  </div>\n</div>\n\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-patientadmin',\n  templateUrl: './patientadmin.component.html',\n  styleUrls: ['./patientadmin.component.css']\n})\nexport class PatientadminComponent implements OnInit {\n\n  selectedRow: Number;\n  setClickedRow: Function;\n  searchText:string =\"\";\n\n  patientList = [];\n\n  constructor(private patientService: PatientServiceService, private router: Router){\n  }\n\n  goToEditView(patId)\n  {\n    this.patientService.getByPatNo(patId).subscribe(\n      data =>{\n        this.patientService.patientObject = data;\n        this.router.navigate([\"/patientsave\"]);\n      }\n    );\n  }\n\n  ngOnInit() {\n\n  }\n\n  onEditPatient() {\n    {\n      if (this.patientService.patientObject == null) {\n        alert(\" Please select a patient \");\n      } else {\n        this.router.navigate([\"patientsave\"]);\n\n      }\n    }\n\n  }\n\n  onSearch() {\n    this.patientService.loadPatients(this.searchText\n    ).subscribe(\n      data => {\n        this.patientList = data;\n        this.patientList.forEach(pat =>{\n          pat.name = pat.firstname+ \" \"+pat.lastname;\n        });\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h1>Patient Details </h1>\n  <div>\n    <div class=\"form-group\">\n      <label>Patient Filter (Enter first name or last name)</label>\n      <input type=\"text\" [(ngModel)]=\"searchText\" #listFilter (keyup)=\"0\"/>\n      <button class=\"btn-primary\" (click)=\"onSearch()\">Search...</button>\n    </div>\n  </div>\n  <div class=\"scrollit\">\n    <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Address</th>\n        <th>DOB</th>\n        <th>DOB</th>\n        <th>Phone</th>\n        <th>NIC</th>\n        <th>Family history</th>\n        <th>Social history</th>\n        <th>Allergies</th>\n        <th>Remarks</th>\n      </tr>\n\n      <tr *ngFor=\"let obj of patientList | patientAdminFilter:listFilter.value; let i = index\" [class.active]=\"i == selectedRow\">\n        <td>{{obj.patientId}}</td>\n        <td>\n          <a (click)='goToEditView(obj.patientId)'>{{obj.firstname}} {{obj.middlename}} {{obj.lastname}}</a>\n        </td>\n        <td>{{obj.address}}</td>\n        <td>{{obj.gender}}</td>\n        <td>{{obj.dateOfBirth}}</td>\n        <td>{{obj.phone}}</td>\n        <td>{{obj.nic}}</td>\n        <td>{{obj.familyHistory}}</td>\n        <td>{{obj.socialHistory}}</td>\n        <td>{{obj.allergies}}</td>\n        <td>{{obj.remarks}}</td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n","export class Patient {\n  public patientId:number;\n  public firstname:string;\n  public nic: string;\n  public phone: string;\n  public lastname: string;\n  public middlename: string;\n  public gender: string;\n  public dateOfBirth:string;\n  public address: string;\n  public allergies: string;\n  public familyHistory: string;\n  public socialHistory: string;\n  public medicalHistory:string;\n  constructor() {\n\n  }\n\n  public calculatedAge():number\n  {\n      return 10;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {Patient} from \"../patient\";\nimport {Router} from \"@angular/router\";\nimport {LoginService} from \"../services/login-service.service\";\n\n\n@Component({\n  selector: 'app-patientsave',\n  templateUrl: './patientsave.component.html',\n  styleUrls: ['./patientsave.component.css']\n})\n\nexport class PatientsaveComponent implements OnInit{\n\n  patient: Patient = null;\n  newPatient=true;\n  @Input() selectedPatient: Patient;\n\n  ngOnInit(): void {\n    this.patient =  this.patientService.patientObject;\n    if (this.patient && this.patient.patientId > 0)\n    {\n      this.newPatient = false;\n    }\n  }\n\n  constructor(private patientService: PatientServiceService, private router: Router,\n    private loginService:LoginService)\n  {\n  }\n\n  onSubmit() {\n    this.patientService.savePatient(this.patient).subscribe(\n        data =>{\n            this.patientService.patientObject = data;\n            this.router.navigate(['dentalPatList']);\n        }\n    );\n\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"newPatient\">\n    New patient\n  </div>\n  <h1>Please enter patient details</h1>\n  <hr/>\n\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" ngClass=\"patient\">\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"firstname\">First names</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" id=\"firstname\" name=\"firstname\" required [(ngModel)]=\"patient.firstname\"/>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"middlename\">Middle names</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" id=\"middlename\" name=\"middlename\" [(ngModel)]=\"patient.middlename\"/>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"lastname\">Last name</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" id=\"lastname\" name=\"lastname\" [(ngModel)]=\"patient.lastname\"/>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"lastname\">NIC</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" id=\"nic\" name=\"nic\" [(ngModel)]=\"patient.nic\"/>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"address\">Telephone</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" id=\"phone\" name=\"phone\" [(ngModel)]=\"patient.phone\"/>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"address\">Address</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"text\" id=\"address\" name=\"address\" [(ngModel)]=\"patient.address\"/>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label>Gender </label>\n          </div>\n          <div class=\"col-md-6\">\n            <select name=\"gender\" [(ngModel)]=\"patient.gender\">\n              <option value=\"MALE\">MALE</option>\n              <option value=\"FEMALE\">FEMALE</option>\n              <option value=\"UNDEFINED\">UNDEFINED</option>\n            </select>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <label for=\"dateOfBirth\">DOB </label>\n          </div>\n          <div class=\"col-md-6\">\n            <input type=\"date\" id=\"dateOfBirth\"  name=\"dateOfBirth\" [(ngModel)] =\"patient.dateOfBirth\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label for=\"socialHistory\">Medical History</label>\n          </div>\n          <div class=\"col-md-8\">\n            <textarea class=\"input\" id=\"medicalHistory\" name=\"medicalHistory\"\n                      [(ngModel)]=\"patient.medicalHistory\"></textarea>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label for=\"socialHistory\">Family History : </label>\n          </div>\n          <div class=\"col-md-8\">\n            <textarea class=\"input\" id=\"familyHistory\" name=\"familyHistory\"\n                      [(ngModel)]=\"patient.familyHistory\"></textarea>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label for=\"socialHistory\">Social History : </label>\n          </div>\n          <div class=\"col-md-8\">\n            <textarea class=\"input\" id=\"socialHistory\" name=\"socialHistory\"\n                      [(ngModel)]=\"patient.socialHistory\"></textarea>\n          </div>\n        </div>\n        <br/>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label for=\"allergies\">Allergies : </label>\n          </div>\n          <div class=\"col-md-8\">\n            <textarea class=\"input\" id=\"allergies\" name=\"allergies\" [(ngModel)]=\"patient.allergies\"></textarea>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n    <br/>\n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <div class=\"form-group\">\n          <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n        </div>\n      </div>\n    </div>\n\n  </form>\n</div>\n<div class=\"cell\">\n  <div>\n    <app-prescription-history></app-prescription-history>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DrugServiceService} from \"../services/drug-service.service\";\nimport {IssueServiceService} from \"../services/issue-service.service\";\nimport {Router} from \"@angular/router\";\nimport {Prescription} from \"../prescription-component/prescription-component.component\";\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {LoginService} from \"../services/login-service.service\";\n\n@Component({\n  selector: 'app-pharmacy',\n  templateUrl: './pharmacy.component.html',\n  styleUrls: ['./pharmacy.component.css']\n})\nexport class PharmacyComponent implements OnInit {\n\n  prescriptionList = [];\n  prescriptionSearchCriteria: PrescriptionSearchCriteria;\n  userType;\n\n  constructor(private issueService: IssueServiceService, private drugService: DrugServiceService,\n              private router: Router, private patientService:PatientServiceService,\n              private loginService:LoginService) {\n\n  }\n\n  isLocked(savedPrescription:Prescription)\n  {\n     return savedPrescription.prescriptionStatus != 'INITIAL' || this.userType !=1;\n  }\n\n  doSearch() {\n    this.drugService.searchPrescriptions(this.prescriptionSearchCriteria).subscribe(\n      data => {\n        this.prescriptionList = data;\n      }\n    );\n  }\n\n  printView(savedPrescription) {\n    this.drugService.savedPrescription = savedPrescription;\n    this.router.navigate(['printPo']);\n  }\n\n  editPrescription(savedPrescription:Prescription) {\n    console.log(savedPrescription);\n    this.patientService.prepareForEdit(savedPrescription);\n    this.router.navigate([\"patientvisit/treatment\"]);\n  }\n\n  ngOnInit() {\n    this.prescriptionSearchCriteria = new PrescriptionSearchCriteria();\n    this.prescriptionSearchCriteria.fromDate = this.getToday();\n    this.prescriptionSearchCriteria.toDate = this.getToday();\n    this.doSearch();\n    this.userType = this.loginService.loggedInUser.userType;\n  }\n\n  getToday(): Date {\n    var x = new Date();\n    return new Date(x.getFullYear(), x.getMonth(), x.getDate());\n  }\n\n\n  issueDrugs(prescriptionId) {\n    this.issueService.createIssueForPrescription(prescriptionId).subscribe(\n      data => {\n        this.issueService.makeIssue = data;\n        this.router.navigate([\"/findIssue\"]);\n      }\n    );\n\n  }\n}\n\nexport class PrescriptionSearchCriteria\n{\n  initial = true;\n  fromDate:Date;\n  toDate:Date;\n  completed:boolean;\n  partCompleted:boolean;\n  all:boolean;\n}\n","<div class=\"container pharmacyHeader\">\n  <header>\n    <h2 class=\"subHeader\">Prescription List</h2>\n    <div class=\"row\">\n      <div class=\"col-sm-2\">\n        <label>From Date :</label>\n        <input type=\"date\" [ngModel] =\"prescriptionSearchCriteria.fromDate | date:'yyyy-MM-dd'\"\n               (ngModelChange)=\"prescriptionSearchCriteria.fromDate = $event\">\n      </div>\n      <div class=\"col-sm-2\">\n        <label>To Date :</label>\n        <input type=\"date\" [ngModel] =\"prescriptionSearchCriteria.toDate | date:'yyyy-MM-dd'\"\n               (ngModelChange)=\"prescriptionSearchCriteria.toDate = $event\">\n      </div>\n\n      <div class=\"col-sm-4\">\n        <label for=\"all\"><span>All</span></label>\n        <input id='all' type=\"checkbox\" name=\"All\" [(ngModel)]=\"prescriptionSearchCriteria.all\">\n        <label for=\"initial\"><span>Initial</span></label>\n        <input id='initial' type=\"checkbox\" name=\"INITIAL\" [(ngModel)]=\"prescriptionSearchCriteria.initial\">\n        <label for=\"initial\">Partially Completed</label>\n        <input id='part' type=\"checkbox\" name=\"PARTIALLY COMPLETED\"\n               [(ngModel)]=\"prescriptionSearchCriteria.partCompleted\">\n        <label for=\"completed\">Completed</label>\n        <input id='completed' type=\"checkbox\" name=\"COMPLETED\" [(ngModel)]=\"prescriptionSearchCriteria.completed\">\n      </div>\n      <div class=\"col-sm-2\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"doSearch()\">Search</button>\n      </div>\n    </div>\n  </header>\n  <br/>\n  <label>Patient Filter</label>\n  <input type=\"text\" #listFilter (keyup)=\"0\" [disabled]=\"prescriptionList.length < 3\"/>\n\n  <br/>\n  <table border=\"2\" width=\"100%\" class=\"table table-hover dataTable \">\n    <tr>\n      <th width=\"10%\">Patient name</th>\n      <th witdh=\"5\"> Issue no</th>\n      <th width=\"60%\">Drug details</th>\n      <th width=\"20%\">Status</th>\n      <th width=\"5%\">Print</th>\n      <th width=\"5%\">Edit</th>\n    </tr>\n    <!---->\n    <tr *ngFor=\"let obj of prescriptionList | patient:listFilter.value; let i = index\">\n      <td>{{obj.patient.firstname}},{{obj.patient.lastname}}</td>\n      <td><button class=\"btn-primary\" (click)='issueDrugs(obj.id)'>{{obj.id}}</button></td>\n      <td>\n        <ul>\n          <li *ngFor=\"let row of obj.prescriptionDetails\">\n            {{row.drugPackage.drug.brandName}}\n          </li>\n        </ul>\n      </td>\n      <td>{{obj.prescriptionStatus}}</td>\n      <td>\n        <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"printView(obj)\">Print\n        </button>\n      </td>\n      <td>\n        <button type=\"button\" class=\"btn btn-primary\"\n                (click)=\"editPrescription(obj)\" [disabled]=\"isLocked(obj)\">Edit\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n","import {Drug} from \"../drugcomponent/drug\";\nimport {Strength} from \"../drugcomponent/strength\";\nimport {Dosefrequency} from \"../drugcomponent/dosefrequency\";\n\nexport class PrescribableDrug {\n\n  public drug: Drug;\n  doseFrequency: Dosefrequency[];\n  selectedStrengthIndex: 0;\n  doseAmount: number;\n  doseDuration: number;\n  durationUnit: string[];\n  selectedStrength: Strength;\n  selectedFrequency: number;\n  selectedDuration: string;\n  meal: string;\n  drugList: any[];\n  rowId: number;\n  packages: any[];\n  availableQty: any;\n  unitPrice = 0.00;\n  price = 0.00;\n  neededQty = 0;\n  frequency : Dosefrequency;\n  drugPackage:any;\n  valid=false;\n\n  constructor() {\n    this.drug = new Drug();\n    this.rowId = new Date().getMilliseconds();\n    this.selectedStrength = new Strength();\n    this.valid = false;\n  }\n\n  public findAvailableQty() {\n    this.availableQty = this.packages[this.selectedStrengthIndex].quantity;\n  }\n\n\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Patientvisit} from \"../treatment/patientvisit\";\nimport {Drug} from \"../drugcomponent/drug\";\nimport {DrugServiceService} from \"../services/drug-service.service\";\nimport {PrescribableDrug} from \"./prescribable-drug\";\nimport {Patient} from \"../patient\";\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {Router} from \"@angular/router\";\nimport {Dosefrequency} from \"../drugcomponent/dosefrequency\";\nimport {Strength} from \"../drugcomponent/strength\";\nimport {DrugSearchResult} from \"./drug-search-result\";\n\n@Component({\n  selector: 'app-prescription-component',\n  templateUrl: './prescription-component.component.html',\n  styleUrls: ['./prescription-component.component.css']\n})\nexport class PrescriptionComponentComponent implements OnInit {\n\n  @Input() patientVisit: Patientvisit;\n  prescribableDrug: PrescribableDrug;\n  selectedId: any;\n  drugId = '';\n  total = 0;\n\n  constructor(private drugService: DrugServiceService,\n              private patientService: PatientServiceService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.prescribableDrug = new PrescribableDrug();\n  }\n\n  doSearch(drugName: string) {\n    this.drugService.searchDrug(drugName).subscribe(\n      data => {\n        this.prescribableDrug.drugList = data;\n      }\n    );\n  }\n\n  addDrug(comp:any) {\n    var x = new PrescribableDrug();\n    this.prescribableDrug.frequency = this.prescribableDrug.doseFrequency[this.prescribableDrug.selectedFrequency];\n    Object.assign(x,this.prescribableDrug);\n    this.patientVisit.prescribableDrug.unshift(x);\n    this.prescribableDrug = new PrescribableDrug();\n    this.drugId='';\n    this.calculateTotal();\n    comp.focus();\n  }\n\n  private searchPrescribable(searchId,nextComp:any) {\n    if (searchId > -1)\n    {\n      this.drugService.searchPrescribable(searchId).subscribe(\n        data => {\n          this.prescribableDrug = data;\n          this.prescribableDrug.selectedStrength = this.prescribableDrug.packages[0].strength;\n          this.prescribableDrug.selectedStrengthIndex =0;\n          this.prescribableDrug.selectedFrequency =-1;\n          this.selectStrength();\n          this.drugId = this.prescribableDrug.drug.brandName;\n          nextComp.focus();\n        });\n    }\n  }\n\n  public checkValid()\n  {\n    this.prescribableDrug.valid =\n      this.prescribableDrug.drug &&\n      this.prescribableDrug.selectedStrengthIndex >-1 &&\n      this.prescribableDrug.selectedFrequency >-1 &&\n      this.checkDoseAmount();\n      if (this.prescribableDrug.valid)\n      {\n        this.calculatePrice();\n      }\n  }\n\n  calcNeeded()\n  {\n    this.prescribableDrug.price = this.prescribableDrug.unitPrice * this.prescribableDrug.neededQty;\n  }\n  private checkDoseAmount():boolean\n  {\n     var result:boolean = !(!this.prescribableDrug.meal || !this.prescribableDrug.selectedDuration);\n     if (result && this.prescribableDrug.selectedDuration !=='When Needed' )\n     {\n       result = this.prescribableDrug.doseAmount > 0 && this.prescribableDrug.doseDuration >0;\n     }\n     return result;\n  }\n\n\n  selectStrength() {\n    this.prescribableDrug.availableQty = this.prescribableDrug.packages[this.prescribableDrug.selectedStrengthIndex].quantity;\n    this.prescribableDrug.unitPrice = this.prescribableDrug.packages[this.prescribableDrug.selectedStrengthIndex].unitPrice;\n    this.prescribableDrug.meal = 'ORAL';\n  }\n\n  setDrugId(pres: PrescribableDrug) {\n    pres.drugList.forEach((obj: DrugSearchResult) => {\n        if (obj.brandName === pres.drug.brandName) {\n          this.selectedId = obj.drugId;\n          return;\n        }\n      }\n    );\n  }\n\n  removeDrug(i: number) {\n      this.patientVisit.prescribableDrug.splice(i, 1);\n      this.calculateTotal();\n  }\n\n  searchDrug(event: any, dd:any, textCmp: any,nextComp: any) {\n     var searchText:string = textCmp.value;\n    if (dd.selectedIndex > -1 && searchText.length > 1) {\n      var drugId = this.getSelectedId(searchText);\n       this.searchPrescribable(drugId,nextComp);\n\n    } else if (searchText.length == 2) {\n      // Search for drug\n      this.doSearch(searchText);\n    } else if (searchText.length == 1) {\n      //clear search\n      this.prescribableDrug.drugList = [];\n    }\n  }\n\n  getSelectedId(text:string):string\n  {\n     var retObj = '-1';\n     this.prescribableDrug.drugList.forEach(\n       item =>{\n           if (item.brandName === text)\n           {\n             retObj = item.drugId;\n             return retObj;\n           }\n       }\n     );\n     return retObj;\n  }\n\n  calculatePrice() {\n    this.calculateQty(this.prescribableDrug);\n    this.prescribableDrug.price = this.prescribableDrug.unitPrice * this.prescribableDrug.neededQty;\n  }\n\n  calculateTotal()\n  {\n     this.total =0;\n     this.patientVisit.prescribableDrug.forEach(\n       obj =>{\n         this.total += obj.price;\n       }\n     );\n  }\n\n  private calculateQty(obj: PrescribableDrug) {\n    if (obj.selectedFrequency > -1) {\n      this.getNoOfDosesForPrescription(obj);\n    }\n  }\n\n  private getNoOfDosesForPrescription(obj: PrescribableDrug) {\n    var freq = obj.doseFrequency[obj.selectedFrequency];\n    obj.neededQty = 1;\n\n    // Should not be calculated  for local application etc.\n    if (obj.meal !=='ORAL')\n    {\n      return;\n    }\n    switch (obj.selectedDuration) {\n      case \"Days\": {\n        obj.neededQty = freq.noofDoses * obj.doseAmount * obj.doseDuration;\n        break;\n      }\n      case \"Weeks\": {\n        obj.neededQty = freq.noofDoses * 7 * obj.doseAmount * obj.doseDuration;\n        break;\n      }\n      case \"Months\": {\n        obj.neededQty = freq.noofDoses * 30 * obj.doseAmount * obj.doseDuration;\n        break;\n      }\n      case \"When Needed\": {\n        obj.neededQty = obj.doseAmount * 1;\n        break;\n      }\n    }\n  }\n}\n\nexport class Prescription {\n  id:number;\n  patient:Patient;\n  prescriptionId:number;\n  symptoms: string;\n  diagnosis: string;\n  notes: string;\n  prescriptionDetailDTOS: PrescriptionDetail[];\n  patientId: number;\n  medicalServices: any[];\n  externalNote: string;\n  prescriptionDetails =[];\n  prescriptionStatus;\n}\n\nexport class PrescriptionDetail {\n  drugPackageId: number;\n  drug: Drug;\n  drugId: string;\n  strength: Strength;\n  frequency: Dosefrequency;\n  amount: number;\n  duration: number;\n  intervalUnit: string;\n  meal: string;\n  doseFrequencyId: number;\n  neededQty:number;\n\n\n  constructor() {\n    this.drug = new Drug();\n    this.frequency = new Dosefrequency();\n    this.strength = new Strength();\n  }\n\n  public isValid(): boolean {\n    var passed = true;\n    return passed;\n  }\n\n}\n\n\n","<script src=\"prescription-component.component.ts\"></script>\n<table class=\"table table-striped\">\n  <tr>\n    <th>Drug</th>\n    <th>Strength</th>\n    <th>Available Stock</th>\n    <th>Unit Price</th>\n    <th>Frequency</th>\n    <th>Amount</th>\n    <th>Duration</th>\n    <th>Interval Unit</th>\n    <th>Application</th>\n    <th>Needed Qty</th>\n    <th>Price</th>\n    <th>Add</th>\n  </tr>\n  <tr>\n    <td>\n      <input type=\"text\" list='datalist' id=\"drug\" name=\"drug\" placeholder=\"Drug to search\"\n             [(ngModel)]=\"drugId\" width=\"150px\" #drugName (input)=\"searchDrug($event, ddComp,drugName,freq)\">\n      <datalist id=\"datalist\" #datalist>\n        <select #ddComp>\n          <option *ngFor=\"let drug of prescribableDrug.drugList\" value=\"{{drug.brandName}}\">\n            <div class=\"nameText\">{{drug.brandName}}</div>\n          </option>\n        </select>\n      </datalist>\n    </td>\n    <td><select name='strength' [(ngModel)]=\"prescribableDrug.selectedStrengthIndex\"\n                (change)=\"selectStrength()\" required>\n      <option *ngFor=\"let x of prescribableDrug.packages;let j=index\" value=\"{{j}}\">\n        {{x.strength.strengthAmount+\",\"+x.strength.strengthUnit.unitName}}\n      </option>\n    </select>\n    </td>\n    <td>{{prescribableDrug.availableQty}}</td>\n    <td>{{prescribableDrug.unitPrice | number:'1.2-2'}}</td>\n    <td><select [(ngModel)]=\"prescribableDrug.selectedFrequency\" name=\"freq\" required\n     (change)=\"checkValid()\" #freq>\n      <option *ngFor=\"let x of prescribableDrug.doseFrequency; let freqIndex=index\" value=\"{{freqIndex}}\">{{x.noofDoses +' '}}\n        time(s) {{' '+x.timeUnit}}\n      </option>\n    </select>\n    </td>\n    <td><input type='text' name='amount' required [(ngModel)]=\"prescribableDrug.doseAmount\" size=\"3\" (keyup)=\"checkValid()\"></td>\n    <td><input type='text' name='duration' required [(ngModel)]=\"prescribableDrug.doseDuration\" size=\"3\" (keyup)=\"checkValid()\"></td>\n    <td>\n      <select name='durationType' required [(ngModel)]=\"prescribableDrug.selectedDuration\" (change)=\"checkValid()\">\n        <option *ngFor=\"let x of prescribableDrug.durationUnit\" value=\"{{x}}\">{{x}}</option>\n      </select>\n    </td>\n    <td><select name='meal' required [(ngModel)]=\"prescribableDrug.meal\" value=\"ORAL\" (change)=\"checkValid()\">\n      <option value=\"ORAL\">Oral</option>\n      <option value=\"LA\">Local Application</option>\n      <option value=\"EYE_DROP\">Eye Drop</option>\n      <option value=\"EAR_DROP\">Ear Drops</option>\n      <option value=\"NASAL_DROP\">Nasal Drop</option>\n      <option value=\"INHALE\">Inhale</option>\n    </select>\n    </td>\n    <td *ngIf=\"this.prescribableDrug.selectedDuration !=='When Needed'\">{{prescribableDrug.neededQty | number:'1.2-2'}}</td>\n    <td *ngIf=\"this.prescribableDrug.selectedDuration ==='When Needed'\">\n      <input type=\"number\"  [(ngModel)]=\"prescribableDrug.neededQty\" (change)=\"calcNeeded()\">\n    </td>\n    <td>{{prescribableDrug.price | number:'1.2-2'}}</td>\n    <td>\n      <button type='button' class=\"btn btn-primary\" (click)=\"addDrug(drugName)\" [disabled]=\"!prescribableDrug.valid\">Add</button>\n    </td>\n    <hr/>\n  <tr *ngFor=\"let row of patientVisit.prescribableDrug;let k = index\">\n    <td>{{row.drug.brandName}}</td>\n    <td>{{row.selectedStrength.strengthAmount}}{{row.selectedStrength.strengthUnit.unitName}}</td>\n    <td>{{row.availableQty}}</td>\n    <td>{{row.unitPrice}}</td>\n    <td>{{row.frequency.noofDoses +' '}} time(s) {{' '+row.frequency.timeUnit}}</td>\n    <td>{{row.doseAmount}}</td>\n    <td>{{row.doseDuration}}</td>\n    <td>{{row.selectedDuration}}</td>\n    <td>{{row.meal}}</td>\n    <td>{{row.neededQty}}</td>\n    <td>{{row.price | number:'1.2-2'}}</td>\n    <td><button class=\"btn btn-danger\" (click)=\"removeDrug(k)\">Remove</button></td>\n  </tr>\n</table>\n<br/>\nTotal : {{total | number:'1.2-2'}}\n\n\n\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {DrugServiceService} from \"../services/drug-service.service\";\nimport {Patientvisit} from \"../treatment/patientvisit\";\n\n@Component({\n  selector: 'app-prescription-history',\n  templateUrl: './prescription-history.component.html',\n  styleUrls: ['./prescription-history.component.css']\n})\nexport class PrescriptionHistoryComponent implements OnInit {\n\n  prescriptionList =[];\n  constructor(private drugService:DrugServiceService,private patientService:PatientServiceService) { }\n\n  ngOnInit() {\n    this.drugService.loadPrescriptions(this.patientService.patientObject.patientId\n    ).subscribe(\n      data =>{this.prescriptionList =data;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h5>History</h5>\n  <table border=\"2\" width=\"100%\">\n    <tr *ngFor=\"let obj of prescriptionList\">\n      <td>\n        <app-prescriptiondetail  [prescription]=\"obj\"></app-prescriptiondetail>\n      </td>\n    </tr>\n  </table>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {DrugServiceService} from \"../services/drug-service.service\";\n\n@Component({\n  selector: 'app-prescriptiondetail',\n  templateUrl: './prescriptiondetail.component.html',\n  styleUrls: ['./prescriptiondetail.component.css']\n})\nexport class PrescriptiondetailComponent implements OnInit {\n  @Input() prescription :any;\n  fullPrescription: any;\n  expanded = false;\n\n    constructor(private drugService : DrugServiceService) {\n    }\n\n    ngOnInit() {\n  }\n\n    doExpand()\n    {\n      this.expanded = !this.expanded;\n      if (this.expanded)\n      {\n        this.fullPrescription = this.drugService.getPrescription(this.prescription.prescriptionId)\n            .subscribe(data =>{\n              this.fullPrescription = data;\n            });\n      }\n    }\n}\n","<div class=\"row\">\n    <div>{{prescription.prescriptionDate}}</div>\n    <div><button type=\"button\" class=\"btn btn-group-sm\" (click)=\"doExpand()\">Toggle</button> </div>\n</div>\n<div *ngIf=\"expanded\">\n    <div>Notes : {{fullPrescription.notes}}</div>\n    <br/>\n  <table class=\"table-bordered\" border=\"1\">\n      <tr *ngFor=\"let obj of fullPrescription.prescriptionDetails\">\n          <td>{{obj.drugPackage.drug.brandName}},{{obj.drugPackage.strength.strengthAmount+obj.drugPackage.strength.strengthUnit.unitName}}</td>\n          <td>&nbsp;</td>\n          <td>{{obj.amount}},{{obj.frequency.noofDoses}},{{obj.frequency.timeUnit}}</td>\n          <td>&nbsp;</td>\n          <td>{{obj.duration}},{{obj.intervalUnit}}</td>\n      </tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {DrugServiceService} from \"../services/drug-service.service\";\nimport {Router} from \"@angular/router\";\n// import {Popup} from \"ng2-opd-popup\";\n\n@Component({\n  selector: 'app-printreceipt',\n  templateUrl: './printreceipt.component.html',\n  styleUrls: ['./printreceipt.component.css']\n})\nexport class PrintreceiptComponent implements OnInit {\n\n  prescription : any;\n  imageUrl =\"\";\n  constructor(private drugService:DrugServiceService, private router:Router)\n  {\n     this.imageUrl = 'assets/images/Sign.gif';\n  }\n\n  ngOnInit() {\n\n      this.prescription = this.drugService.savedPrescription;\n  }\n\n\n  print(): void {\n    let printContents, popupWin;\n    printContents = document.getElementById('print-section').innerHTML;\n    popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n        </head>\n        <body onload=\"window.print();window.close()\">${printContents}\n        </body>\n      </html>`\n    );\n    popupWin.document.close();\n    this.router.navigate(['start']);\n  }\n\n}\n\n\n","<!--<popup>-->\n<div id=\"print-section\">\n  <div style=\"margin-left: 25px;\">\n    <table>\n      <tr>\n        <td colspan=\"3\">\n          <div style=\"font-family: 'Times New Roman', Times, Serif;\n          font-style: normal;\n          font-weight: bold;\n          font-size: 22px;\n          text-align: center;\">SUWAPIYASA MEDICAL CENTER\n          </div>\n        </td>\n      </tr>\n      <tr style=\"font-family: 'Times New Roman', Times, Serif;\n      font-style: normal;\n      font-size: 17px;\n      text-align: left;\">\n        <td>Dr. Janaka Abeysinghe MBBS(SL)</td>\n        <td></td>\n        <td width=\"40%\" align=\"right\">Reg. No. 17261</td>\n      </tr>\n      <tr>\n        <td>Ambagashandiya, Kiriwattuduwa</td>\n        <td></td>\n        <td align=\"right\">Tel : 0773-425881</td>\n      </tr>\n      <tr>\n        <td></td>\n        <td></td>\n        <td align=\"right\">0778-608100</td>\n      </tr>\n    </table>\n    <hr/>\n  </div>\n  <div style=\"font-family: 'Courier New',Courier,Courier;font-style: normal;font-weight: bold;\n    font-size: 12px;margin-left: 10px;\">\n    <label>Prescription No : {{prescription.id}}</label><br/>\n    <label>Date: {{prescription.date | date }}</label><br/>\n    <label>Patient :</label>\n    <label>[{{prescription.patient.patientId}}]-{{prescription.patient.firstname}},{{prescription.patient.lastname}} -\n      {{prescription.patient.calculatedAge}} </label>\n    <br/>\n    <table class=\"table table-bordered\">\n      <tbody>\n      <tr *ngFor=\"let row of prescription.prescriptionDetails\" style=\"border:1px;font-size: 12px\">\n        <!-- Tablets & fluids-->\n        <div *ngIf=\"row.meal==='ORAL'\">\n          <td>{{row.drugPackage.drug.brandName}}&nbsp;</td>\n          <td>{{(row.drugPackage.strength.strengthAmount * row.amount)+row.drugPackage.strength.strengthUnit.unitName}}\n          </td>\n          <td>{{row.frequency.noofDoses + ' '}}Time(s){{' '+row.frequency.timeUnit}}&nbsp;</td>\n          <td>for&nbsp;</td>\n          <td>{{row.duration}}&nbsp;{{row.intervalUnit}}({{row.prescribedQty}})</td>\n        </div>\n\n        <!-- Creams -->\n        <div *ngIf=\"row.meal==='LA'\">\n          <td>{{row.drugPackage.drug.brandName}}</td>\n          <td>{{row.frequency.noofDoses + ' '}}Time(s){{' '+row.frequency.timeUnit}}</td>\n          <td> for</td>\n          <td>{{row.duration}}&nbsp;{{row.intervalUnit}}</td>\n          <td>Local Application</td>\n        </div>\n\n\n        <!-- Eye Drops -->\n        <div *ngIf=\"row.meal==='EYE_DROP'\">\n          <td>{{row.drugPackage.drug.brandName}} - Eye Drop,</td>\n          <td>{{row.frequency.noofDoses}}&nbsp;Time(s)&nbsp;{{row.frequency.timeUnit}}</td>\n          <td> for&nbsp;</td>\n          <td>{{row.duration}}&nbsp;{{row.intervalUnit}}</td>\n          <td>Eye Drop</td>\n        </div>\n\n        <!-- Ear Drops -->\n        <div *ngIf=\"row.meal==='EAR_DROP'\">\n          <td>{{row.drugPackage.drug.brandName}} - Ear Drops,</td>\n          <td>{{row.frequency.noofDoses}}&nbsp;Time(s)&nbsp;{{row.frequency.timeUnit}}</td>\n          <td> for&nbsp;</td>\n          <td>{{row.duration}}&nbsp;{{row.intervalUnit}}</td>\n          <td>Ear Drop</td>\n        </div>\n\n        <!-- Nasal Drops -->\n        <div *ngIf=\"row.meal==='NASAL_DROP'\">\n          <td>{{row.drugPackage.drug.brandName}} - Nasal Drops,</td>\n          <td>{{row.frequency.noofDoses}}&nbsp;Time(s)&nbsp;{{row.frequency.timeUnit}}</td>\n          <td> for&nbsp;</td>\n          <td>{{row.duration}}&nbsp;{{row.intervalUnit}}</td>\n          <td>Nasal Drop</td>\n        </div>\n\n        <!-- Nasal Drops -->\n        <div *ngIf=\"row.meal==='INHALE'\">\n          <td>{{row.drugPackage.drug.brandName}} - Inhale,</td>\n          <td>{{row.frequency.noofDoses}}&nbsp;Time(s)&nbsp;{{row.frequency.timeUnit}}</td>\n          <td> for&nbsp;</td>\n          <td>{{row.duration}}&nbsp;{{row.intervalUnit}}</td>\n          <td>Inhale</td>\n        </div>\n      </tr>\n      <hr/>\n      </tbody>\n    </table>\n    <br/>\n    {{prescription.externalNote}}\n    <div>Do not repeat</div>\n    <div>Do not substitute</div>\n    <div>Please bring this when you come back</div>\n  </div>\n  <img [src]=\"imageUrl\"/>\n</div>\n<button (click)=\"print()\"> Print Prescription</button>\n\n","import { Component, OnInit } from '@angular/core';\nimport {POServiceService} from \"../services/poservice.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-polist',\n  templateUrl: './polist.component.html',\n  styleUrls: ['./polist.component.css']\n})\nexport class POListComponent implements OnInit {\n\n  pendingPOList =[];\n  constructor(private poService:POServiceService,private router:Router) { }\n\n    newPo()\n    {\n      this.router.navigate(['poDetail']);\n\n    }\n  ngOnInit() {\n    this.poService.getPendingPO().subscribe(\n        data =>{this.pendingPOList = data;}\n    )\n  }\n\n  doGrn(object)\n  {\n    this.poService.selectedPO = object;\n    this.router.navigate(['grn']);\n  }\n\n}\n","<div class=\"container\">\n  <h5>Pending Purchase Orders</h5>\n  <br/>\n  <table class=\"table table-bordered\">\n    <tr>\n      <td>PO Number</td>\n      <td>Supplier</td>\n      <td>Date</td>\n    </tr>\n    <tr *ngFor=\"let row of pendingPOList\">\n      <td>{{row.purchaseOrderNo}}</td>\n      <td> <button type=\"button\" class=\"btn btn-sm\" (click)=\"doGrn(row)\">GRN</button></td>\n      <td>{{row.itemSupplier.supplierName}},{{row.itemSupplier.supplierAddress}}</td>\n      <td>{{row.orderedDate}}</td>\n    </tr>\n  </table>\n  <br/>\n  <div><button type=\"button\" class=\"btn btn-primary\" (click)=\"newPo()\">Create New PO</button> </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ItemSupplierService} from \"../services/itemsupplier.service\";\nimport {ItemServiceService} from \"../services/item-service.service\";\nimport {POServiceService} from \"../services/poservice.service\";\nimport {Router} from \"@angular/router\";\nimport {DrugServiceService} from \"../services/drug-service.service\";\n\n@Component({\n  selector: 'app-purchseorder',\n  templateUrl: './purchseorder.component.html',\n  styleUrls: ['./purchseorder.component.css']\n})\nexport class PurchseorderComponent implements OnInit {\n\n  po: PurchaseOrderDTO;\n  suppliers = [];\n  drugPackages = [];\n  pono: number;\n  pendingPos = [];\n\n  constructor(private supplierService: ItemSupplierService, private drugService: DrugServiceService,\n              private poService: POServiceService, private router: Router) {\n\n  }\n\n  doAdd() {\n    this.po.addItem();\n  }\n\n  onSave() {\n    this.poService.savePO(this.po).subscribe(\n        data =>{\n            this.router.navigate(['/po']);\n        }\n    );\n  }\n\n  onCancel() {\n    this.po = new PurchaseOrderDTO();\n  }\n\n  ngOnInit() {\n    this.po = new PurchaseOrderDTO();\n    this.initSuppliers();\n    this.initItems();\n    this.initPendingPOs();\n  }\n\n  private initPendingPOs() {\n    this.poService.loadPendingPOs().subscribe(data => {\n        this.pendingPos = data;\n      }\n    );\n\n  }\n\n  private initSuppliers() {\n    this.supplierService.loadSuppliers().subscribe(suppliers => {\n        this.suppliers = suppliers;\n      }\n    );\n  }\n\n  doDelete(i) {\n    if (i > 0)\n    {\n      this.po.poDetails.splice(i, 1);\n    }\n  }\n\n  private initItems() {\n    this.drugService.loadDrugPacakges().subscribe(drugPackages => {\n        this.drugPackages = drugPackages;\n      }\n    );\n  }\n\n  onSerachPO() {\n    alert('find and laod');\n  }\n}\n\nexport class PurchaseOrderDTO {\n  supplierId: number;\n  poDetails: PODetail[];\n  orderDate: Date;\n  expectedRecieveDate: Date;\n  poStatus: string;\n\n  constructor() {\n    this.poDetails = [];\n    this.orderDate = new Date();\n    this.expectedRecieveDate = new Date();\n    this.poStatus = '0';\n    this.addItem();\n  }\n\n\n  public addItem() {\n    this.poDetails.push(new PODetail());\n  }\n}\n\nexport class PODetail {\n  drugPackageId: number;\n  qty: number;\n}\n","<table width=\"100%\">\n  <tr><td width=\"80%\">\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-8\"><h2>Purchase Order</h2></div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <label for=\"supp\">Supplier</label>\n      <select id=\"supp\" [(ngModel)]='po.supplierId' required name=\"supplierId\">\n        <option *ngFor=\"let row of suppliers\"\n                [ngValue]=\"row.supplierId\">\n        {{row.supplierName}}</option>\n      </select>\n    </div>\n\n    <div class=\"col-lg-4\">\n      <label for=\"orderDate\">Ordering Date</label>\n      <input type=\"date\"  [(ngModel)]='po.orderDate' required id=\"orderDate\" name=\"orderDate\">\n    </div>\n    <div class=\"col-lg-4\">\n      <label for=\"expectedRecieveDate\">Expected Date</label>\n      <input type=\"date\"  [(ngModel)]='po.expectedRecieveDate' required id=\"expectedRecieveDate\" name=\"expectedRecieveDate\">\n    </div>\n  </div>\n\n  <div class=\"row\">\n        <div class=\"col-lg-8\"> <h3>Purchase Order Details</h3>  </div>\n        <div class=\"col-lg-4\"> <h3></h3>\n        <label>Status</label>\n          <select name=\"poStatus\" [(ngModel)]=\"po.poStatus\" required name=\"poStatus\">\n            <option value=\"0\">INITIAL</option>\n            <option value=\"1\">SENT</option>\n            <option value=\"2\">COMPLETED</option>\n          </select>\n        </div>\n  </div>\n\n  <table class=\"table table-bordered\">\n    <thead>\n        <tr>\n          <td>Item</td>\n          <td>Quantity</td>\n          <td>Add</td>\n        </tr>\n    </thead>\n    <tbody>\n       <tr *ngFor=\"let detail of po.poDetails;let j =index\">\n         <td>\n           <select [(ngModel)]='detail.drugPackageId' name=\"drugPackageId\">\n             <option *ngFor=\"let x of drugPackages; let i = index\"\n                     [ngValue]=\"x.drugPackageId\">\n               {{x.drug.brandName}} {{x.strength.strengthAmount}} {{x.strength.strengthUnit}}</option>\n           </select>\n         </td>\n         <td>\n           <input type=\"number\" required [(ngModel)]='detail.qty' name=\"qty\"/>\n         </td>\n         <td><button type=\"button\"  class=\"button btn-primary\" (click)=\"doAdd()\">Add</button>\n           <button type=\"button\"  class=\"button btn-danger\" (click)=\"doDelete(j)\">Remove</button></td>\n       </tr>\n    </tbody>\n  </table>\n  <button type=\"button\" class=\"btn-primary\" (click)=\"onSave()\">Save </button>\n  <button type=\"button\" class=\"btn-primary\" (click)=\"onCancel()\">Cancel </button>\n</div></tr></table>\n","import { Component, OnInit } from '@angular/core';\nimport {POServiceService} from \"../services/poservice.service\";\n\n@Component({\n  selector: 'app-returnout',\n  templateUrl: './returnout.component.html',\n  styleUrls: ['./returnout.component.css']\n})\nexport class ReturnoutComponent implements OnInit {\n\n  grnsToReturn : any;\n\n  constructor(private poService: POServiceService) {\n    this.grnsToReturn = new Object();\n  }\n\n  ngOnInit() {\n  }\n\n  loadgrnbysi(event, value){\n    if (event.keyCode == 13) {\n      this.poService.loadGRNForRet(value).subscribe(\n        data => {\n          this.grnsToReturn = data;\n        }\n      );\n    }\n  }\n\n  returnGoods() {\n    alert(\"here\");\n    this.poService.saveRet(this.grnsToReturn).subscribe(\n      data => {\n      }\n    );\n    this.grnsToReturn = new Object();\n  }\n}\n","<div class=\"container\">\n<h1>Retruns of Goods</h1>\n<div class=\"row\">\n  <div class=\"col-lg-2\">\n    <label>Supplier Invoice number</label>\n  </div>\n  <div class=\"col-lg-2\">\n    <input type=\"text\" (keyup)=\"loadgrnbysi($event,grn.value)\" #grn/>\n  </div>\n</div>\n<br/>\n\n<table class=\"table table-responsive\" border=\"3\">\n  <tr>\n    <td>Supplier Name : {{grnsToReturn.supplierName}}</td>\n    <td>GRN Id : {{grnsToReturn.drnid}}</td>\n    <td>GRN Date : {{grnsToReturn.grnDate}}</td>\n  </tr>\n  <tr>\n    <td>Return Date :</td>\n    <td colspan=\"2\"><input type=\"date\" [(ngModel)]='grnsToReturn.returnDate' required id=\"returnDate\" name=\"returnDate\">\n    </td>\n  </tr>\n</table>\n<br/>\n<table class=\"table table-responsive\" border=\"2\">\n  <tr>\n    <th>Drug Name</th>\n    <th> Received Qty</th>\n    <th> Return Qty</th>\n  </tr>\n  <tr *ngFor=\"let obj of grnsToReturn.returnOutDetailDTOList \">\n    <td>{{obj.drugName}}</td>\n    <td>{{obj.recievedQty}}</td>\n    <td><input type=\"text\" [(ngModel)]='obj.returnQty' required id=\"returnQty\" name=\"returnQty\"></td>\n  </tr>\n</table>\n\n<div>\n  <button type=\"button\" class=\"button btn-primary\" (click)=\"returnGoods()\">Return</button>\n</div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {AdminService} from \"../services/admin.service\";\n\n@Component({\n  selector: 'app-daily-income',\n  templateUrl: './daily-income.component.html',\n  styleUrls: ['./daily-income.component.css']\n})\nexport class DailyIncomeComponent implements OnInit {\n\n  dailyIncome : {\n    fromDate : any;\n    toDate: any;\n    drugTotal:number,\n    servicesTotal:number,\n    servicesIncome:number,\n    drugIncome:number,\n  }\n\n  constructor(private adminService:AdminService) { }\n\n  ngOnInit() {\n    this.dailyIncome = {fromDate : new Date(),toDate:new Date(),drugTotal:0,\n      servicesTotal :0, servicesIncome:0,drugIncome:0};\n  }\n\n    doReport()\n    {\n        this.adminService.getDailyIncome(this.dailyIncome).subscribe(\n            data =>{this.dailyIncome = data}\n        );\n    }\n\n}\n","<div class=\"container\">\n\n  <label>  From Date :</label><input type=\"date\" [ngModel]=\"dailyIncome.fromDate |date:'yyyy-MM-dd'\"\n                               (ngModelChange)=\"dailyIncome.fromDate = $event\">\n\n  <label>  To Date :</label><input type=\"date\" [ngModel]=\"dailyIncome.toDate |date:'yyyy-MM-dd'\"\n                                     (ngModelChange)=\"dailyIncome.toDate = $event\">\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"doReport()\">Get Data</button>\n\n  <h3> Daily Report for {{dailyIncome.fromDate | date}} - {{dailyIncome.toDate | date}}</h3>\n  <br/>\n\n  <div>Drugs</div>\n  <br/>\n  <table class=\" table table-bordered\">\n    <tr *ngFor=\"let obj of dailyIncome.drugIncome\">\n      <td>{{obj.name}}</td>\n      <td>{{obj.amount | number:'1.2-2'}}</td>\n    </tr>\n    <td>Drug Total</td>\n    <td>{{dailyIncome.drugTotal}}</td>\n  </table>\n  <br/>\n  <div>Services</div>\n  <table class=\" table table-bordered\">\n    <tr *ngFor=\"let obj of dailyIncome.servicesIncome\">\n      <td>{{obj.name}}</td>\n      <td>{{obj.amount | number:'1.2-2'}}</td>\n    </tr>\n    <td>Services Total</td>\n    <td>{{dailyIncome.servicesTotal}}</td>\n  </table>\n  <br/>\n  <div>Grand Total :{{dailyIncome.servicesTotal + dailyIncome.drugTotal}}</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  report works!\n</p>\n","import {Directive, HostBinding, HostListener} from '@angular/core';\n\n@Directive({\n  selector: '[appSelectedRow]'\n})\nexport class SelectedRowDirective {\n\n    @HostBinding('style.backgroundColor') c_colorrr = \"red\";\n\n    constructor() { }\n\n    setClickedRow(i)\n    {\n\n    }\n\n    @HostListener('mouseenter') c_onEnterrr() {\n        this.c_colorrr= \"blue\" ;\n    }\n\n    @HostListener('mouseleave') c_onLeaveee() {\n        this.c_colorrr = \"yellow\" ;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  public sendPost(url:string,param:any) :Observable<any>{\n     url = localStorage.getItem(\"rootURL\") + url;\n     return this.http.post(url,param);\n  }\n\n  public sendGet(url:string) :Observable<any>{\n    url = localStorage.getItem(\"rootURL\") + url;\n    return this.http.get(url);\n  }\n\n  public sendDelete(url:string) :Observable<any>{\n    url = localStorage.getItem(\"rootURL\") + url;\n    return this.http.delete(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ItemSupplier} from \"../supplier/ItemSupplier\";\nimport {Itemtype} from \"../item/itemtype\";\nimport {Observable} from \"rxjs\";\nimport {HttpServiceService} from \"../service/http-service.service\";\n\n@Injectable()\nexport class AdminService {\n\n  public supplierObject :ItemSupplier;\n  public itemTypeObject :Itemtype;\n\n  constructor(private http: HttpServiceService) {\n    this.supplierObject = new ItemSupplier();\n  }\n\n  getInOutReport(obj:any):Observable<any>\n  {\n      var url =\"inOutReport\";\n      return this.http.sendPost(url,obj);\n  }\n\n  getDailyIncome(date: any):Observable<any>\n  {\n      var url = \"dailyIncome\";\n      return this.http.sendPost(url,date);\n  }\n  loadSuppliers():Observable<any[]>\n  {\n    var url = \"loadItemSuppliers\";\n    return this.http.sendGet(url);\n  }\n\n  saveSupplier(itemSupplier : any):Observable<any>\n  {\n    var url = \"saveItemSupplier\";\n    return this.http.sendPost(url, itemSupplier);\n  }\n\n  loadItemTypes():Observable<any[]>\n  {\n    var url = \"loadItemTypes\";\n    return this.http.sendGet(url);\n  }\n\n  saveItemType(itemType : any)\n  {\n    var url = \"saveItemType\";\n    return this.http.sendPost(url, itemType).subscribe(\n      data => {\n        this.itemTypeObject = data;\n      }\n    );\n  }\n\n  loadUnitOfMeasure():Observable<any[]>\n  {\n    var url = \"loadUnitOfMeasures\";\n    return this.http.sendGet(url);\n  }\n\n  getStrengthUnits():Observable<any[]>\n  {\n    var url = \"getStrengthUnits\";\n    return this.http.sendGet(url);\n  }\n\n  loadPaymentMethod():Observable<any[]>\n  {\n    var url = \"loadPaymentMethod\";\n    return this.http.sendGet(url);\n  }\n\n  saveStrength(strength: any):Observable<any[]> {\n    var url = \"saveStrength\";\n    return this.http.sendPost(url, strength);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\nimport {TreatmentItem} from \"../dental/model/TreatmentItem\";\nimport {PatTreatment} from \"../dental/model/PatTreatment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DentalServiceService {\n\n  constructor(private http: HttpServiceService) { }\n\n\n  getAllTreatmentItems():Observable<any>{\n    var url = \"TreatmentItem\";\n    return this.http.sendGet(url);\n  }\n\n  saveItem(currItem: TreatmentItem):Observable<any> {\n    return this.http.sendPost(\"TreatmentItem\",currItem)\n  }\n\n  savePatTreatment(currObj: PatTreatment):Observable<any> {\n     return this.http.sendPost(\"PatTreatment\",currObj)\n  }\n\n  getAllPatTreatments(patId:number) :Observable<any>{\n    return this.http.sendGet(\"PatTreatment/\"+patId+\"/\");\n  }\n\n  deleteTreatmentItem(id):Observable<any> {\n    return this.http.sendDelete(\"TreatmentItem/\"+id+\"/\")\n  }\n\n  deletePatTreatment(id: number):Observable<any> {\n    return this.http.sendDelete(\"PatTreatment/\"+id+\"/\");\n  }\n}\n","\nimport {PrescribableDrug} from \"../prescription-component/prescribable-drug\";\nimport {Basedrug} from \"../drugcomponent/basedrug\";\nimport {Drug} from \"../drugcomponent/drug\";\nimport {DrugPackage} from \"../drugcomponent/drug-package\";\nimport {Strength} from \"../drugcomponent/strength\";\nimport {Patientvisit} from \"../treatment/patientvisit\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class DrugServiceService {\n\n  public baseDrug: Basedrug;\n  public drug: Drug;\n  public drugPackage: DrugPackage;\n  public strength: Strength;\n\n  public savedPrescription:any;\n\n  constructor(private http: HttpServiceService) {\n  }\n\n  searchDrug(drugName: string): Observable<any[]> {\n    return this.http.sendPost(\"getDrugByName\",drugName);\n  }\n\n  searchPrescribable(drugId: any): Observable<PrescribableDrug> {\n    return this.http.sendPost(\"getPrescribable\", drugId);\n  }\n\n  savePrescription(obj: any):Observable<any> {\n    var url = \"savePrescription\";\n     return this.http.sendPost(url, obj);\n  }\n\n  loadPrescriptions(patientId: any): Observable<any[]> {\n    var url = \"loadPrescriptions\";\n    return this.http.sendPost(url, patientId);\n  }\n\n  loadBaseDrugs(): Observable<any[]> {\n    var url = \"loadBaseDrugs\";\n    return this.http.sendGet(url);\n  }\n\n  loadDrugs(): Observable<any[]> {\n    var url = \"loadDrugs\";\n    return this.http.sendGet(url);\n  }\n\n  loadStregths(): Observable<any[]> {\n    var url = \"loadStrengths\";\n    return this.http.sendGet(url);\n  }\n\n  loadDrugPacakges(): Observable<any[]> {\n    var url = \"loadDrugPackages\";\n    return this.http.sendGet(url);\n  }\n\n  findDrugPackages(name:string): Observable<any[]> {\n    var url = \"findDrugPackages\";\n    return this.http.sendPost(url,name);\n  }\n\n  saveDrugPackage(drugPackage: any):Observable<any> {\n    var url = \"saveDrugPackage\";\n    return this.http.sendPost(url, drugPackage);\n  }\n\n  saveBaseDrug(baseDrug: any):Observable<any> {\n    var url = \"saveBaseDrug\";\n    return this.http.sendPost(url, baseDrug);\n  }\n\n  saveDrug(drug: any):Observable<any>\n  {\n    var url = \"saveDrug\";\n    return this.http.sendPost(url, drug);\n  }\n\n    setSavedPrescription(data: any) {\n        this.savedPrescription = data;\n    }\n\n  loadPrescriptionByDate(date: any) {\n    var url = \"loadPrescriptionByDate\";\n    return this.http.sendPost(url, date);\n  }\n\n  getPrescription(id):Observable<any>{\n      var url = \"getPrescription\";\n      return this.http.sendPost(url, id);\n  }\n\n  getPrescriptionForPatient(id):Observable<any>{\n    var url = \"getPrescriptionsForPatient?patId=\"+id;\n    return this.http.sendGet(url);\n  }\n\n\n\n    loadPrescriptionLight(patientId: number):Observable<any> {\n        var url = \"loadPrescriptionLite\";\n        return this.http.sendPost(url,patientId);\n    }\n\n  searchPrescriptions(prescriptionSearchCriteria: any):Observable<any>\n  {\n    var url = \"prescriptionSearch\";\n    return this.http.sendPost(url,prescriptionSearchCriteria);\n  }\n\n  adjustStock(stock: any):Observable<any>\n  {\n    var url = \"adjustStock\";\n    return this.http.sendPost(url,stock);\n  }\n\n  searchAdjustment(searchCritera: any) {\n    var url = \"findAdjustments\";\n    return this.http.sendPost(url,searchCritera);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class IssueServiceService {\n\n  makeIssue:any;\n\n\n  constructor(private http:HttpServiceService) {}\n\n  findIssue(issueId):Observable<any>\n  {\n    var url = \"findIssue\";\n    return this.http.sendPost(url,issueId);\n  }\n\n    registerIssue(obj):Observable<any> {\n        var url = \"makeIssue\";\n        return this.http.sendPost(url,obj);\n    }\n\n  createIssueForPrescription(prescriptionId):Observable<any>{\n    var url = \"prepareIssue\";\n    return this.http.sendPost(url,prescriptionId);\n  }\n\n  findIssuesForPatient(patientId:number):Observable<any>\n  {\n    var url = \"findIssueForPatient?patientId=\"+patientId;\n    return this.http.sendGet(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\n\n\n@Injectable()\nexport class ItemServiceService {\n\n  constructor(private http:HttpServiceService) { }\n\n  loadItems():Observable<any[]>\n  {\n    var url = \"loadItems\";\n    return this.http.sendGet(url);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Itemproduct} from \"../item/itemproduct\";\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ItemProductService {\n\n    public itemproductObject: Itemproduct;\n\n    constructor(private http: HttpServiceService) {\n        this.itemproductObject = new Itemproduct();\n    }\n\n    loadItemProducts(): Observable<any[]> {\n        var url =  \"loadItems\";\n        return this.http.sendGet(url);\n    }\n\n    saveItemProduct(itemproduct: any) {\n        var url =  \"saveItem\";\n        return this.http.sendPost(url, itemproduct).subscribe(\n            data => {\n                this.itemproductObject = data;\n            }\n        );\n    }\n\n    getProductTypes(): Observable<any> {\n        var url =  \"getProductTypes\"\n        return this.http.sendGet(url);\n\n    }\n\n    saveMedicalService(medItem: any) {\n        var url = \"saveMedicalServiceItem\";\n        return this.http.sendPost(url, medItem);\n    }\n\n    getAllMedicalServices(): Observable<any> {\n        var url = \"getMedicalServices\";\n        return this.http.sendGet(url);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {ItemSupplier} from \"../supplier/ItemSupplier\";\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ItemSupplierService {\n\n  public supplierObject :ItemSupplier;\n\n  constructor(private http: HttpServiceService) {\n    this.supplierObject = new ItemSupplier();\n  }\n\n  loadSuppliers():Observable<any[]>\n  {\n    var url = \"loadItemSuppliers\";\n    return this.http.sendGet(url);\n  }\n\n  saveSupplier(itemSupplier : any)\n  {\n    itemSupplier = new ItemSupplier();\n    var url = \"saveItemSupplier\";\n    return this.http.sendPost(url, itemSupplier).subscribe(\n      data => {\n        this.supplierObject = data;\n      }\n    );\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class LoginService {\n\n  loggedInUser:any;\n  loggedIn = false;\n  constructor(private http:HttpServiceService){ }\n\n  login(model):Observable<any> {\n    var url = \"login\";\n    return this.http.sendPost(url,model);\n  }\n\n  storeToken(data) {\n    localStorage.setItem(\"token\",JSON.parse(JSON.stringify(data))._body);\n  }\n\n  getHeaderToken()\n  {\n    //let headers1 = new Headers({'Content-Type': 'application/json'});\n    let headers2 = new Headers({'Authorization':'Bearer '+localStorage.getItem(\"token\")});\n    return [{headers2}];\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport 'rxjs';\nimport {Patient} from \"../patient\";\nimport {Patientvisit} from \"../treatment/patientvisit\";\nimport {Prescription} from \"../prescription-component/prescription-component.component\";\nimport {PrescribableDrug} from \"../prescription-component/prescribable-drug\";\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class PatientServiceService {\n\n  patientSearchURL = \"searchPat\";\n  patientVisitSaveURL = \"savePatientVisit\";\n  patientSaveURL = \"savePatient\";\n  patientGetByNIC = \"getByNIC\";\n\n  public patientObject: Patient;\n  public patientVisit:Patientvisit;\n\n  constructor(private http: HttpServiceService) {\n\n  }\n\n  searchByNIC(nic: string): Observable<any[]> {\n    var url =  this.patientSearchURL\n    return this.http.sendPost(url, nic);\n  }\n\n  getByNIC(nic: string) :Observable<any> {\n    var url = this.patientGetByNIC;\n    return this.http.sendPost(url, nic);\n  }\n\n  savePatientVisit(patientVisit: any): Observable<any[]> {\n    var url = this.patientVisitSaveURL;\n    return this.http.sendPost(url , patientVisit);\n  }\n\n  savePatient(patient: any):Observable<any> {\n    var url = this.patientSaveURL;\n    return this.http.sendPost(url , patient);\n  }\n\n  getByPatNo(patNo: string):Observable<any> {\n    var url = \"getByPatientId\";\n    return this.http.sendPost(url , patNo);\n  }\n\n  getByPhoneNo(phoneNo: string): Observable<any>\n  {\n    var url =  \"getByPhoneNo\";\n    return this.http.sendPost(url, phoneNo);\n  }\n\n  searchByPhone(phoneNo: string) :Observable<any> {\n    var url = \"searchPatByPhoneNo\";\n    return this.http.sendPost(url, phoneNo);\n  }\n\n\n  public clearPatient() {\n    this.patientObject = new Patient();\n    this.patientObject.patientId = 0;\n  }\n\n  loadPatients(name:string): Observable<any[]> {\n    var url = \"loadPatients?name=\"+name;\n    return this.http.sendGet(url);\n  }\n\n    findByName(name: any) :Observable<any>{\n        var url =  \"findByName\";\n        return this.http.sendPost(url,name);\n    }\n\n  newPatientVisit() {\n    this.patientVisit = new Patientvisit();\n    this.patientVisit.diagnoseData = '';\n    this.patientVisit.prescribableDrug = [];\n    this.patientVisit.medicalServices=[];\n    this.patientVisit.prescriptionId=0;\n  }\n\n  prepareForEdit(prescription:Prescription)\n  {\n    this.patientVisit = new Patientvisit();\n    this.patientObject = prescription.patient;\n    this.patientVisit.prescriptionId = prescription.id;\n    this.patientVisit.diagnoseData = prescription.diagnosis;\n    this.patientVisit.note = prescription.notes;\n    this.patientVisit.symptoms = prescription.symptoms;\n    this.patientVisit.externalNote = prescription.externalNote;\n    prescription.medicalServices.forEach(item=>{\n       var medicalServItem = {\n          itemId :item.medicalServItem.itemId,\n          itemDescription: item.medicalServItem.itemDescription,\n          externalRef : item.medicalServItem.externalRef,\n          unitPrice: item.fee\n       };\n       this.patientVisit.medicalServices.push(medicalServItem);\n    });\n\n    prescription.prescriptionDetails.forEach(item=>{\n      var obj:PrescribableDrug = new PrescribableDrug();\n       obj.drug =item.drugPackage.drug;\n       obj.drugPackage = item.drugPackage;\n       obj.selectedStrength = item.drugPackage.strength;\n       obj.doseAmount = item.amount;\n       obj.doseDuration = item.duration;\n       obj.frequency = item.frequency;\n       obj.selectedDuration =item.intervalUnit;\n       obj.meal = item.meal;\n       obj.neededQty = item.prescribedQty;\n       obj.unitPrice = item.drugPackage.unitPrice;\n       obj.price = obj.unitPrice * obj.neededQty;\n       this.patientVisit.prescribableDrug.push(obj);\n    });\n  }\n}\n","import {PurchaseOrderDTO} from \"../purchseorder/purchseorder.component\";\nimport {Injectable} from '@angular/core';\nimport {HttpServiceService} from \"../service/http-service.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class POServiceService {\n\n  public selectedPO:any;\n\n  constructor(private http: HttpServiceService) {\n  }\n\n\n  getPendingPO():Observable<any>\n  {\n      var url =  \"pendingPO\";\n      return this.http.sendGet(url);\n\n  }\n\n  savePO(po: PurchaseOrderDTO): Observable<any> {\n    var url = \"savePO\";\n    return this.http.sendPost(url, po);\n  }\n\n  saveGRN(obj): Observable<any> {\n    var url = \"registerGRN\";\n    return this.http.sendPost(url, obj);\n  }\n\n  loadPO(poId): Observable<any> {\n    var url =  \"loadPOForInput\";\n    return this.http.sendPost(url, poId);\n  }\n\n  loadPendingPOs(): Observable<any[]> {\n    var url = \"loadPendingPOs\";\n    return this.http.sendGet(url);\n  }\n\n  saveIssue(issueObject: any) {\n    var url = \"saveIssue\";\n    return this.http.sendPost(url, issueObject);\n  }\n\n  loadGRN(supplierInvoice): Observable<any[]> {\n    var url =  \"loadGRNForPay\";\n    return this.http.sendPost(url, supplierInvoice);\n  }\n\n  savePayment(payment: any) {\n    var url = \"makePayment\";\n    return this.http.sendPost(url, payment);\n  }\n\n  loadGRNForRet(supplierInvoice): any {\n    var url = \"loadGRNDTOForReturn\";\n    return this.http.sendPost(url, supplierInvoice);\n  }\n\n  saveRet(grnsToReturn: any) : any{\n    var url =  \"saveGoodReturn\";\n    return this.http.sendPost(url, grnsToReturn);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {DrugServiceService} from \"../../services/drug-service.service\";\nimport {AdminService} from \"../../services/admin.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-strength-detail',\n  templateUrl: './strength-detail.component.html',\n  styleUrls: ['./strength-detail.component.css']\n})\nexport class StrengthDetailComponent implements OnInit {\n\n  units =[];\n  strength = {\n    strengthUnit: {unitId: ''},\n    strengthAmount: 0.0\n  };\n\n  constructor(private adminService:AdminService, private dialogRef:MatDialogRef<StrengthDetailComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n     this.units = data.units;\n     this.strength = data.strength;\n  }\n\n  ngOnInit(): void {\n  }\n\n  doSave() {\n    this.adminService.saveStrength(this.strength).subscribe(\n      data=>{\n        this.dialogRef.close(data);\n      }\n    )\n  }\n\n  onCancel() {\n    this.dialogRef.close(null);\n  }\n}\n","<mat-dialog-content>\n  <form #f=\"ngForm\" (submit)='doSave()'>\n    <label>Unit</label>\n    <select id='unit' name='unit' required [(ngModel)]=\"strength.strengthUnit.unitId\" >\n      <option *ngFor=\"let row of units\" value=\"{{row.unitId}}\">{{row.unitName}}</option>\n    </select>\n    <br/>\n    <label>Amount</label>\n    <input  id='amount' name='amount' type=\"number\" required [(ngModel)]=\"strength.strengthAmount\">\n    <br/>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!f.valid\">Save</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"onCancel()\">Cancel</button>\n  </form>\n</mat-dialog-content>\n","export class ItemSupplier {\n  public supplierId:number;\n  public supplierName:string;\n  public supplierAddress:string;\n  public supplierPhone:string;\n  public supplierFax:string;\n  public notes:string;\n  constructor() {\n\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AdminService} from \"../services/admin.service\";\nimport {Router} from \"@angular/router\";\nimport {ItemSupplier} from \"./ItemSupplier\";\n\n@Component({\n  selector: 'app-supplier',\n  templateUrl: './supplier.component.html',\n  styleUrls: ['./supplier.component.css']\n})\nexport class SupplierComponent implements OnInit {\n\n  itemSupplier: ItemSupplier = null;\n  supplierList:ItemSupplier[] = [];\n  selectedRow:number;\n\n\n  constructor(private adminService: AdminService, private router: Router) {\n    this.itemSupplier = new ItemSupplier();\n  }\n\n  ngOnInit() {\n    this.adminService.loadSuppliers(\n    ).subscribe(\n      data => {\n        this.supplierList = data;\n      }\n    );\n  }\n\n  onSubmit() {\n    this.adminService.saveSupplier(this.itemSupplier).subscribe(\n         data =>{\n              this.refreshList(data);\n              this.itemSupplier = new ItemSupplier();\n         }\n    )\n  }\n\n  private refreshList(item:ItemSupplier){\n    var idx = -1;\n    var currIndex =-1;\n\n    for(var x of this.supplierList){\n      currIndex++;\n      if(x.supplierId == item.supplierId){\n        idx = currIndex;\n        break;\n      }\n    }\n    if(idx == -1){\n      this.supplierList.push(item);\n    }else{\n      this.supplierList[idx] = item;\n    }\n  }\n\n  cancelEdit(){\n\n  }\n\n  setClickedRow(index: number) {\n    this.selectedRow = index;\n    if (index >= 0 && index < this.supplierList.length) {\n      Object.assign(this.itemSupplier,this.supplierList[index]);\n    }\n  }\n}\n","<div class=\"container\">\n  <header>\n    <h2>Supplier details</h2>\n  </header>\n  <nav>\n    <table border=\"2\" width=\"100%\" class=\"table table-hover\">\n      <tr>\n        <th width=\"10%\">Id</th>\n        <th width=\"20%\">Name</th>\n        <th width=\"30%\">Address</th>\n        <th width=\"10%\">Phone</th>\n        <th width=\"10%\">Fax</th>\n        <th width=\"20%\">Notes</th>\n      </tr>\n\n      <tr *ngFor=\"let obj of supplierList; let i = index\" (click)=\"setClickedRow(i)\" [class.active]=\"i == selectedRow\">\n        <td>{{obj.supplierId}}</td>\n        <td>\n          {{obj.supplierName}}\n        </td>\n        <td>{{obj.supplierAddress}}</td>\n        <td>{{obj.supplierPhone}}</td>\n        <td>{{obj.supplierFax}}</td>\n        <td>{{obj.notes}}</td>\n      </tr>\n    </table>\n  </nav>\n\n  <article>\n    <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" ngClass=\"itemSupplier\">\n      <h3> Edit supplier details </h3>\n      <table width=\"100%\">\n        <tr>\n          <th width=\"30%\"></th>\n          <th width=\"100%\"></th>\n          <th width=\"1%\"> </th>\n        </tr>\n        <tr>\n          <td>\n            <label for=\"supplierName\">Names : </label>\n          </td>\n          <td><input type=\"text\" id=\"supplierName\" name=\"supplierName\" required [(ngModel)]=\"itemSupplier.supplierName\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n\n            <label for=\"supplierAddress\">Address : </label>\n          </td>\n          <td><input type=\"text\" id=\"supplierAddress\" name=\"supplierAddress\" [(ngModel)]=\"itemSupplier.supplierAddress\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <label for=\"supplierPhone\">Phone : </label>\n          </td>\n          <td><input type=\"text\" id=\"supplierPhone\" name=\"supplierPhone\" required [(ngModel)]=\"itemSupplier.supplierPhone\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <label for=\"supplierFax\">Fax : </label>\n          </td>\n          <td><input type=\"text\" id=\"supplierFax\" name=\"supplierFax\"  [(ngModel)]=\"itemSupplier.supplierFax\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <label for=\"notes\">Note : </label>\n          </td>\n          <td><input type=\"text\" id=\"notes\" name=\"notes\"  [(ngModel)]=\"itemSupplier.notes\"/>\n          </td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>\n            <input type='submit' class=\"btn btn-primary\" [disabled]=\"!f.valid\"/>\n          </td>\n          <td><button class=\"btn-primary\" (click)=\"cancelEdit()\">Cancel</button>\n          </td>\n          <td></td>\n        </tr>\n\n\n      </table>\n    </form>\n\n  </article>\n\n\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Patientvisit} from \"./patientvisit\";\nimport {Patient} from \"../patient\";\nimport {Prescription, PrescriptionDetail} from \"../prescription-component/prescription-component.component\";\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {PrescribableDrug} from \"../prescription-component/prescribable-drug\";\nimport {DrugServiceService} from \"../services/drug-service.service\";\nimport {Router} from \"@angular/router\";\n// import { MdDialog } from \"@angular/material\";\nimport {PrintreceiptComponent} from \"../prescription-component/printreceipt.component\";\n// import { MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\nimport {PrintpopComponent} from \"./printpop.component\";\n\n// import {Popup} from \"ng2-opd-popup\";\n\n@Component({\n    selector: 'app-basicvisit',\n    templateUrl: './basicvisit.component.html',\n    styleUrls: ['./basicvisit.component.css']\n})\nexport class BasicvisitComponent implements OnInit {\n\n    patientVisit: Patientvisit;\n    @Input() patient: Patient;\n\n    constructor(private patientService: PatientServiceService,\n                private drugService: DrugServiceService, private router: Router) {\n        this.patientVisit = this.patientService.patientVisit;\n    }\n\n    onCancel() {\n      this.patientService.patientObject = null;\n      this.router.navigate(['/start']);\n    }\n\n    ngOnInit() {\n    }\n\n    onSave() {\n        var presc = new Prescription();\n        presc.prescriptionId = this.patientVisit.prescriptionId;\n        presc.medicalServices = this.patientVisit.medicalServices;\n        presc.prescriptionDetailDTOS = [];\n        presc.patientId = this.patientService.patientObject.patientId;\n        presc.diagnosis = this.patientVisit.diagnoseData;\n        presc.notes = this.patientVisit.note;\n        presc.symptoms = this.patientVisit.symptoms;\n        presc.externalNote = this.patientVisit.externalNote;\n        var details = [];\n        var bOK = true;\n        this.patientVisit.prescribableDrug.forEach((obj: PrescribableDrug) => {\n                var detail:PrescriptionDetail = new PrescriptionDetail();\n                if (obj.packages && obj.packages.length >0)\n                {\n                  detail.drugPackageId = obj.packages[obj.selectedStrengthIndex].drugPackageId;\n                } else {\n                  detail.drugPackageId = obj.drugPackage.drugPackageId;\n                }\n                detail.amount = obj.doseAmount;\n                detail.duration = obj.doseDuration;\n                if (detail.drugPackageId < 0 )\n                {\n                    alert('Prescription has empty fields');\n                    bOK=false;\n                    return;\n                }\n                detail.doseFrequencyId = obj.frequency.doseFrequencyId;\n                detail.intervalUnit = obj.selectedDuration;\n                detail.meal = obj.meal;\n                detail.neededQty = obj.neededQty;\n                details.push(detail);\n            }\n        );\n        if (!bOK) {\n            return;\n        }\n        presc.prescriptionDetailDTOS = details;\n        this.drugService.savePrescription(presc).subscribe(\n            data => {\n                this.patientService.patientObject = null;\n                this.drugService.setSavedPrescription(data);\n                this.router.navigate(['printPo']);\n            }\n        );\n    }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8\">\n    <!--The component for DPrescriptionDTOtion -->\n    <app-prescription-component [patientVisit]=\"patientVisit\"></app-prescription-component>\n    <hr/>\n    <app-service-component [patientVisit]=\"patientVisit\"></app-service-component>\n    <hr/>\n      <label for=\"notes\">Notes</label>\n      <input type=\"text\" id=\"notes\" [(ngModel)]='patientVisit.note' name=\"notes\"\n             placeholder=\"notes\">\n\n    <br/>\n    <hr/>\n    <label for=\"externalNote\">External Note</label>\n    <input type=\"text\" id=\"externalNote\" [(ngModel)]='patientVisit.externalNote' name=\"notes\"\n           placeholder=\"notes\">\n  </div>\n  <div class=\"col-md-4\">\n  </div>\n\n</div>\n<br/>\n<button class=\"btn-primary\" (click)=\"onSave()\">Save Prescription</button>\n<button class=\"btn-primary\" (click)=\"onCancel()\">Cancel Prescription</button>\n\n\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Patientvisit} from \"./patientvisit\";\nimport {Patient} from \"../patient\";\nimport {ActivatedRoute, Data, Params, Router} from \"@angular/router\";\nimport {PatientServiceService} from \"../services/patient-service.service\";\n\n@Component({\n    selector: 'app-patient-visit',\n    templateUrl: './patient-visit.component.html',\n    styleUrls: ['./patient-visit.component.css']\n})\nexport class PatientVisitComponent implements OnInit {\n    patientVisit: Patientvisit;\n    patient: Patient = null;\n    @Input() selectedPatient: Patient;\n\n    toggleText = \"show\";\n    showHistory = false;\n\n    onEditPatient() {\n        this.patientService.patientObject = new Patient();\n        this.router.navigate([\"patientsave\"]);\n\n    }\n\n    handleHistory() {\n        this.showHistory = !this.showHistory;\n        if (this.showHistory) {\n            this.toggleText = 'Hide';\n        } else {\n            this.toggleText = 'Show';\n        }\n\n    }\n\n    ngOnInit(): void {\n        this.patient = this.patientService.patientObject;\n        this.patientVisit = new Patientvisit();\n        this.patientVisit.patientId = this.patient.patientId;\n    }\n\n    constructor(private router: Router, private patientService: PatientServiceService) {\n\n    }\n}\n","<div class=\"main\">\n    <app-basicvisit patientVisit=\"patientVisit\"></app-basicvisit>\n</div>\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Patient} from \"../patient\";\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {Router} from \"@angular/router\";\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport {DrugPackageDetailComponent} from \"../drugcomponent/admin/drug-package-detail/drug-package-detail.component\";\nimport {PrescriptionComponent} from \"../history/prescription/prescription.component\";\n\n@Component({\n  selector: 'app-patientnavbar',\n  templateUrl: './patientnavbar.component.html',\n  styleUrls: ['./patientnavbar.component.css']\n})\nexport class PatientnavbarComponent implements OnInit\n{\n  patient : any;\n  showHistory = false;\n  toggleText ='Show';\n  constructor(public patientService:PatientServiceService, public router:Router,private dialog:MatDialog){\n     this.patient = patientService.patientObject;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  handleHistory1() {\n    // this.showHistory = !this.showHistory;\n    // if (this.showHistory) {\n    //   this.toggleText = 'Hide';\n    // } else {\n    //   this.toggleText = 'Show';\n    // }\n\n\n  }\n\n  handleHistory() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.position={\n      'top':'0',\n      'left':'0'\n    }\n    dialogConfig.data = new Object();\n    let dialogRef = this.dialog.open(PrescriptionComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(\n    );\n  }\n\n\n\n  onEditPatient()\n  {\n    this.router.navigate([\"patientsave\"]);\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"patientService.patientObject && patientService.patientObject.patientId > 0\" class=\"patientBar\">\n    <label>Patient Id :</label>{{patientService.patientObject.patientId}}\n    <a (click)=\"onEditPatient()\">{{patientService.patientObject.firstname}},{{patientService.patientObject.lastname}}</a> ({{patientService.patientObject.calculatedAge}})\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleHistory()\">Show History</button>\n  </div>\n<!--  <br>-->\n<!--  <div *ngIf=\"showHistory\">-->\n<!--    <div *ngIf=\"patientService.patientObject && patientService.patientObject.patientId > 0\" class=\"container\">-->\n<!--      {{patientService.patientObject.allergies}}-->\n<!--    </div>-->\n<!--    <app-prescription-history></app-prescription-history>-->\n<!--  </div>-->\n</div>\n\n","import {PrescribableDrug} from \"../prescription-component/prescribable-drug\";\nexport class Patientvisit {\n    symptoms: string;\n    diagnosys: \"\";\n    diagnoseData:string;\n    note:string;\n    externalNote=\"\";\n    patientId:number;\n    public prescribableDrug:PrescribableDrug[];\n    medicalServices;\n    prescriptionId:number;\n\n\n    constructor()\n    {\n      this.prescribableDrug = [];\n      this.medicalServices=[];\n      this.note='';\n      this.symptoms='';\n    }\n}\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\n// import {Popup} from \"ng2-opd-popup\";\nimport {Patientvisit} from \"./patientvisit\";\n// import { MdDialogRef, MD_DIALOG_DATA } from \"@angular/material\";\n\n@Component({\n  selector: 'app-printpop',\n  templateUrl: './printpop.component.html',\n  styleUrls: ['./printpop.component.css']\n})\nexport class PrintpopComponent implements OnInit{\n  constructor(private router:Router){}//),public dialogRef: MdDialogRef<PrintpopComponent>){  }\n\n  @Input() patientVisit: Patientvisit;\n  print(): void {\n    // let printContents, popupWin;\n    // printContents = document.getElementById('print-section').innerHTML;\n    // popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n    // popupWin.document.open();\n    // popupWin.document.write(`\n    //     <body onload=\"window.print();window.close()\">${printContents}</body>\n    //   <!--</html>-->`\n    // );\n    // popupWin.document.close();\n\n    this.router.navigate(['patientvisit/treatmentHistory']);\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","<h1>Tests </h1>\n<!--<popup (confirmClick)=\"print()\" (cancelClick)=\"cancel()\">-->\n  <!--<div id=\"print-section\">-->\n    <!--<h1 align=\"center\">OPD Name : ABS Medical Center</h1>-->\n    <!--<h4 align=\"center\">Nugegoda, Gansabha handiya, </h4>-->\n    <!--<h4 align=\"center\">0718345345</h4>-->\n    <!--<br/>-->\n    <!--<div> Doctor : Eshan Gamage</div>-->\n    <!--<div> Time : 2017/08/19 : 12.15 </div>-->\n    <!--<div> Patient : {{patientVisit.patientId}} </div>-->\n\n    <!--<h2 align=\"center\">Reciept : No 12323</h2>-->\n    <!--<table width=\"100%\">-->\n      <!--<tr >-->\n        <!--<th>#</th>-->\n        <!--<th>Description</th>-->\n        <!--<th>Unit price</th>-->\n        <!--<th>Qty</th>-->\n        <!--<th>Total</th>-->\n      <!--</tr>-->\n      <!--cdcd-->\n      <!--<tr>-->\n        <!--<td>1</td>-->\n        <!--<td>Dr Fee</td>-->\n        <!--<td>200</td>-->\n        <!--<td>1</td>-->\n        <!--<td>200</td>-->\n      <!--</tr>-->\n\n      <!--<tr *ngFor=\"let obj of patientVisit.prescribableDrug\">-->\n        <!--<td>2</td>-->\n        <!--<td>{{obj.drug.brandName }}</td>-->\n        <!--<td>2</td>-->\n        <!--<td>10</td>-->\n        <!--<td>20</td>-->\n      <!--</tr>-->\n\n      <!--<tr>-->\n        <!--<td></td>-->\n        <!--<td>Grand total</td>-->\n        <!--<td></td>-->\n        <!--<td></td>-->\n        <!--<td>660</td>-->\n      <!--</tr>-->\n    <!--</table>-->\n  <!--</div>-->\n  <!--<button (click)=\"print()\"> Print Prescription</button>-->\n<!--</popup>-->\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Patientvisit} from \"./patientvisit\";\nimport {ItemProductService} from \"../services/itemProduct.service\";\n\n\n@Component({\n    selector: 'app-service-component',\n    templateUrl: './service-component.component.html',\n    styleUrls: ['./service-component.component.css']\n})\nexport class ServiceComponentComponent implements OnInit {\n\n    @Input() patientVisit: Patientvisit;\n    @Output() serviceAdded: EventEmitter<number> = new EventEmitter<number>();\n    @Output() serviceRemoved:EventEmitter<number> = new EventEmitter<number>();\n    medicalServices = [];\n    servicesTotal = 0;\n\n    constructor(private prodTypeService: ItemProductService) {\n    }\n\n    ngOnInit() {\n         this.prodTypeService.getAllMedicalServices().subscribe(\n           data => {\n             this.medicalServices = data;\n             if (this.patientVisit.prescriptionId <= 0 || this.patientVisit.medicalServices.length==0)\n             {\n               var x = Object.assign({}, this.medicalServices[0]);\n               this.patientVisit.medicalServices.push(x);\n             }else\n             {\n             }\n             this.calculateTotal();\n           });\n    }\n\n    calculateTotal()\n    {\n      this.servicesTotal = 0;\n      this.patientVisit.medicalServices.forEach(item =>{\n        this.servicesTotal += item.unitPrice;\n      });\n      this.serviceAdded.emit(this.servicesTotal);\n\n    }\n\n    serviceChanged(itemId,rowIndex) {\n        this.medicalServices.forEach(child=>{\n            if (itemId == child.itemId)\n            {\n                this.patientVisit.medicalServices[rowIndex] = Object.assign({},child);\n            }\n        });\n        this.calculateTotal();\n    }\n\n\n\n    onAdd()\n    {\n        this.patientVisit.medicalServices.unshift(new Object());\n    }\n\n    onRemove(i)\n    {\n        if (i>0)\n        {\n          this.patientVisit.medicalServices.splice(i);\n        }\n        this.calculateTotal();\n    }\n\n}\n","<h5> Services </h5>\n<table class=\"table table-striped\">\n  <tr>\n    <th>Service</th>\n    <th>Price</th>\n    <th>External Reference</th>\n    <th></th>\n    <th></th>\n  </tr>\n  <tr *ngFor=\"let row of patientVisit.medicalServices;let i=index\">\n    <td>\n      <select [(ngModel)]=\"row.itemId\" (change)=\"serviceChanged(row.itemId,i)\">\n        <option *ngFor=\"let x of medicalServices\" value=\"{{x.itemId}}\">{{x.itemDescription}}</option>\n      </select>\n    </td>\n    <td>\n      <input type=\"number\" [(ngModel)]=\"row.unitPrice\" (change)=\"calculateTotal()\">\n    </td>\n    <td> <input type=\"text\" [(ngModel)]=\"row.externalRef\"></td>\n\n    <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"onAdd()\">Add</button></td>\n    <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"onRemove(i)\">Remove</button></td>\n  </tr>\n</table>\n<br>\n<div>\n  <label>Services Total : {{servicesTotal}}</label>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {PatientServiceService} from \"../services/patient-service.service\";\nimport {Patient} from \"../patient\";\n\n@Component({\n  selector: 'app-treatment',\n  templateUrl: './treatment.component.html'\n})\nexport class TreatmentComponent  {\n  nic:string;\n  patientList=[];\n\n  constructor(private patientService:PatientServiceService) {\n  }\n\n  onKey(event:any)\n  {\n    if (this.nic.length >1)\n    {\n      this.doSearch();\n    }else {\n      this.patientList=[];\n    }\n  }\n\n  doSearch()\n  {\n    this.patientService.searchByNIC(this.nic).subscribe(\n      data =>{\n        this.patientList = data;\n      }\n    );\n  }\n}\n","<h1>Treatment Component</h1>\n<div style=\"background: red\"> Work in Progress !!!!/div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}